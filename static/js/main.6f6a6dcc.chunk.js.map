{"version":3,"sources":["assets/dummy.jpg","assets/TataTrustsNewLogo.png","assets/Doc.PNG","assets/Patient.PNG","assets/Trainee.PNG","assets/homeSec3.jpg","redux/reducers.js","redux/actions/actionTypes.js","redux/store.js","services/API/HomeApi.js","redux/actions/actions.js","services/services.js","services/API/LoginRegisterApi.js","containers/login/Login.js","containers/forgotpassword/ForgotPasswordSuccess.js","containers/forgotpassword/ForgotPassword.js","containers/resetpassword/ResetPasswordSuccess.js","containers/resetpassword/ResetPassword.js","containers/register/RegisterUser.js","components/modal/modal.js","containers/functions.js","containers/register/RegisterSuccess.js","containers/register/RegisterForm.js","containers/register/Registration.js","components/navbar/navbar.js","containers/homePageSection1/homeSection1.js","components/footer/footer.js","components/subFooter/subFooter.js","containers/logout/logout.js","components/navbar/titlebar.js","components/pagination/pagination.js","containers/testsList/testsList.js","containers/homeContainer/homeContainer.js","services/API/MediaApi.js","containers/media/media.js","containers/joinTeam/teamToggle.js","containers/joinTeam/team.js","containers/career/careerNew.js","containers/contact/contact.js","containers/researchMaterial/researchNew.js","containers/patient/trackSample/trackSampleDataCol.js","containers/patient/trackSample/trackSampleTable.js","components/modal/modalwishlist.js","containers/patient/patientPayForm.js","containers/patient/patientPaymentSuccess.js","containers/patient/patientPaymentFailure.js","containers/patient/patientcashReceipt.js","containers/patient/patientOrderHistory.js","containers/patient/patientPicky.js","containers/patient/patientHome.js","containers/creditPartner/trackSample/trackSampleCard.js","containers/creditPartner/trackSample/trackSampleTable.js","containers/creditPartner/creditpartnerPatientCard.js","containers/creditPartner/orderDataCard.js","containers/creditPartner/creditPartnerOrderHistory.js","containers/creditPartner/creditPartner.js","containers/trainee/traineeHome.js","containers/patient/checkUser.js","containers/patient/patientRegisterSuccess.js","containers/patient/patientOTPSuccess.js","containers/patient/PatientRequestOTP.js","containers/patient/patientSignUp.js","containers/patient/patientLogin.js","containers/trainee/coursesOffered.js","containers/testsList/antibodies.js","containers/patient/patientForgotSuccess.js","containers/patient/patientForgotPass.js","containers/patient/resetSuccess.js","containers/patient/patientResetPass.js","containers/admin/adminCard.js","containers/admin/patientAddress.js","containers/admin/adminTitle.js","containers/admin/adminHome.js","containers/admin/adminLogin.js","containers/patient/patientInvoice.js","containers/patient/printButton.js","containers/patient/patientEditOrderSample.js","containers/patient/patientEditOrder.js","containers/trainee/trainingAcademy.js","containers/aboutCOP/aboutCOP.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","token","user","homeData","mediaData","success","message","error","loading","authRedirectPath","userTypeId","data","searchData","cpsuccess","cpmessage","cperror","coursedata","pordersuccess","pstatusdata","lpstatusdata","invalidData","phistorysuccess","phistoryerror","phistoryData","cphistorysuccess","cphistoryerror","cphistoryData","resetsuccess","resetmessage","reseterror","courseEWdata","courseEWdataerror","careerMessage","posuccess","porderData","pordermessage","ocmessage","ocsuccess","apsearchsuccess","apsearchdata","apsavesuccess","apsavemessage","lcdata","lcsuccess","stdata","stsuccess","getPAsuccess","getPAdata","stestsuccess","stestdata","addEditsuccess","addEditMessage","editordersuccess","editordermessage","patientupdatedAddsuccess","patientupdatedAddData","enrollSuccess","enrollData","wishlistData","wishlistSuccess","patientSignUpError","forgotsuccess","forgotdata","CBsuccess","CBerror","CBdata","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","invalidFlag","successflag","cplimiterror","coursedataerror","pordererror","pinsuccess","pindata","psuccess","concat","id","billId","list","map","el","awbId","status","apply","awbNo","creditPartnerDetails","lhBillId","creditPartnerPatientId","pinfailure","toConsumableArray","creditPartnerPatients","orderId","store","createStore","applyMiddleware","thunk","HomeApi","axios","get","then","response","console","log","catch","loginSuccess","patientInvalidLogin","loginFail","signupSuccess","signupFail","patientHistoryDataSuccess","patientHistoryDataFailure","patientOrderSuccess","patientOrderFailure","courseDataSuccess","courseDataFailure","patientOrderStatusSuccess","patientOrderStatusFailure","login","username","password","dispatch","LoginRegisterApi","reduxLogin","patientLogin","patientLoginForm","reduxPatientLogin","patientResetPassword","patientForm","reduxPatientResetPassword","searchPatient","reduxSearchPatient","bulkPatientSampleDetails","bulkPatientTestDetails","courierCost","reduxBulkTestSampleDetails","pinVerification","pincode","reduxPinVerification","courseEnroll","userId","cId","reduxCourseEnroll","courseData","reduxcourseData","patientOrderList","reduxPatientOrderList","patientOrderData","getState","forEach","order","reduxPatientGetOrderLogisticsStatus","reduxPatientGetOrderStatus","creditPartnerOrderHistoryData","reduxCreditPartnerOrderList","creditPartnerOrderList","ordersArr","Promise","all","index","reduxCreditPartnerOrderPatientsList","creditPartnerOrderPatientsList","patientOrder","patientsOrderArr","reduxCreditPartnerPatientOrderDetails","porder","reduxCPPatientGetOrderStatus","reduxCPPatientGetOrderLogisticsStatus","PayNowOrder","admin","reduxPayNowOrder","logisticCost","reduxLogisticCost","sampleType","reduxSampleType","sampleTest","reduxSampleTest","getPatientUpdatedAddress","reduxGetPatientUpdatedAddress","defaults","baseURL","email","url","loginData","post","userCopy","localStorage","setItem","accessToken","lhToken","JSON","stringify","formData","successFlag","errorFlag","userCheckForm","FormData","append","code","headers","Content-type","resetFail","patientData","patientTestDetails","config","Authorization","getItem","object","limitError","userDataFailure","parse","courseId","coursesEnrolled","userEnrollDataFailure","userWishlistDataFailure","creditPartnerOrderPatientHistoryDataFailure","patientId","reportDetails","statusArr","assign","form","name","file","careerFailure","orderCompleteFailure","mobile","apSearchFailure","details","values","apSaveFailure","logisticCostFailure","sampleTypeFailure","sampleTestFailure","getPAddFailure","editOrderFailure","updatedAddress","editAddFailure","patientUpdatedAddFailure","userForgotFailure","creditBalanceFailure","Login","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","defaultForm","submitHandler","event","preventDefault","params","queryString","location","search","onLogin","onPatientLogin","setState","visible","window","setTimeout","validationMessages","e","updatedForm","defineProperty","target","value","_this2","Number","history","push","react_default","a","createElement","Fragment","class","className","src","logo","onSubmit","placeholder","onChange","inputChangedHandler","for","style","textAlign","react_router_dom","to","Button","size","width","Row","Col","md","Spinner","animation","variant","Alert","color","isOpen","Component","withRouter","connect","isAuthenticated","actions","UserForgotSuccess","Container","es_Row","es_Col","ForgotPassword","handleForgotPassword","forgotPasswordSubmitHandler","onForgotPassword","ForgotPasswordSuccess","required","reduxUserForgotPassword","UserResetSuccess","ResetPassword","confirm_password","verifyKey","resetPasswordSubmitHandler","updatedPatientForm","resetPasswordCheck","onResetPassword","ResetPasswordSuccess","handleResetPassword","RegisterUser","fontSize","onClick","onSetUser","patient","doc","ModalComponent","Modal","modal","toggle","togglemodal","ModalHeader","title","ModalBody","children","convertToDateFormat","isoDate","extended","dateValue","Date","date","getDate","month","getMonth","year","getFullYear","toString","slice","convertToDateYYYYMMDD","fulldate","t","split","d","actiondate","actionmonth","actionyear","convertToDateDDMMYYYY","convertDOB","sortByColumn","colIndex","reverse","sortFunction","b","sort","RegisterSuccess","RegisterForm","firstName","lastName","countryCode","contactNo","gender","emailId","address","dob","city","pin","age","updatedFormDateandAddress","designation","line1","line2","onSignUp","prevState","toggleModal","checkRegisterFormDetails","flag","updatedFormDate","register_RegisterSuccess","Form","FormGroup","Label","Input","maxLength","xs","sm","lg","paddingRight","padding","tag","check","checked","entry_default","handleChange","maxDate","disabled","reduxSignup","Registration","register_RegisterUser","userSelection","handleUserSelection","NavbarComponent","toggleMobileMenu","openMenu","activeTabClassName","pathname","href","HomePageSection1","marginTop","homekey","Card","key_title","key_content","es_Spinner","homevalue","value_number","value_text","Footer","fluid","noGutters","Logout","onLogout","react_router","removeItem","TitlebarComponent","loggedinpatient","fontWeight","PaginationComponent","currentPage","Pagination","aria-label","PaginationItem","PaginationLink","handleClick","previous","Array","pagesCount","page","i","active","key","zIndex","next","TestsList","updateSearch","inputValue","filter","handleSearchChange","test_name","toLowerCase","indexOf","department","test_spec","test_charge","arrayCopy","testtabledata","activeColumn","handlePatientTrackClick","testtableheader","lastActiveColumn","pageSize","getTestListContent","res","listoftestsheaders","listoftestsoffereddata","_this3","paginationNumberArray","Math","ceil","Table","striped","responsive","table_sort_name","table_header","titlebar","navbar_navbar","marginBottom","InputGroup","InputGroupAddon","addonType","pagination","footer_footer","HomeContainer","tatatruststitle","tatatrustssubtitle","content","abouttitle","aboutsubtitle","aboutcontent","servicecontent","hometeamtitle","hometeambuttontext","hometeamcontent","getHomeContent","home_title","homevalues","homekeys","tatatrusts_title","tatatrusts_sub_title","home_content","getServiceContent","home","homeSection1","es_Container","MediaApi","Media","getMediaContent","mediaYoutubeVideoLink","media_youtube_video_link","mediaEventtypes","mediaeventtypes","mediaNewsTypes","medianewstypes","data-width","data-height","data-theme","data-link-color","body","CardTitle","media_event_title","media_event_date","CardText","media_event_content","Carousel","controls","Item","dummyImg","alt","height","media_news_title","media_news_date","media_news_content","TeamToggle","toggleArrow","collapse","es_Card","Img","teamtype_img","margin","Body","Title","teamtype_name","Collapse","toggler","team_collapse","React","JoinTeam","arrow","teamtitle","teamsubtitle","teamcontent","open","getTeamContent","team_title","team_sub_title","teammember_id","item","teamToggle","es_Button","CareerNew","ContactUs","contacttitle","contactcardtitle","contactaddress","contactphone","contactemail","addressline1","addressline2","addressline3","getContactContent","contact_title","contact_card_title","contact_address","address_line1","address_line2","address_line3","contact_phone","contact_email","CardBody","offset","aria-hidden","ResearchNew","TrackSampleDataCol","toggleCard","srno","createdOn","parceledByCustomer","logisticsStatus","pickUpTime","sampleStatus","desc","logisticStatus","bordered","livehealthStatus","wordWrap","TrackSampleTable","componentDidMount","trackData","nextProps","paginationArray","o","paymentStatus","trackSampleDataCol","keyValue","ModalFooter","ModalWishlistComponent","confirmModal","togglemodalEnroll","PatientPaymentForm","loadingState","method","PatientPaymentSuccess","orderOpenToggle","onCompleteOrder","reduxCompleteOrder","PatientPaymentFailure","PatientCashReceipt","payNowOrder","orderedByAdmin","onPayNowOrder","handleCourierCost","onGetPatientUpdatedAddress","onLogisticCost","time","getHours","orderReceiptData","getMinutes","patientPaymentSuccess","patientPaymentFailure","patientPayForm","userPatientOrderDetails","sample","sampleName","testName","price","toLocaleString","navigator","language","minimumFractionDigits","islogisticserviceable","logisticAmount","totalAmount","testAmount","cursor","onPatientOrderList","PatientOrderHistory","handleOrderHistoryClick","cashReceipt","invoice","editOrder","showcashreceipt","PatientPicky","dist_default","valueData","options","optionData","selectMultipleOption","document","getElementById","click","valueKey","labelKey","multiple","includeSelectAll","includeFilter","numberDisplayed","manySelectedPlaceholder","allSelectedPlaceholder","dropdownHeight","PatientHome","callAddressUpdateAPI","onPatientEditAddress","submitTestDetails","patientTestListIdArr","testDetails","selectedTests","subtest","lhTestId","patientTestListId","elem","self","noLGChargeData","noLGCharge","testList","onPatientSampleSubmit","count","updatedTestDetails","testToggleModal","testModal","yescloseToggle","pinmodal","yesToggle","nocloseToggle","addSample","previousState","selectedSample","tabno","toggler1","toggler2","toggler3","toggler4","handlePinVerification","onPinVerification","removeSample","updatedTestDetailsafterdelete","splice","checkTestDetails","test","checkAddressDetails","onSampleType","successMsg","onSampleTest","updatedprofileForm","testListArr","testTotalCharge","reduce","acc","charge","patientHome","UncontrolledCollapse","submit","profileinputChangedHandler","modalwishlist","sampleInputChangedHandler","patientPicky","trackSampleTable","patientOrderHistory","float","ongetReports","reduxgetReports","reduxTestSampleDetails","onpatientOrderReset","reduxPatientEditAddress","TrackSampleCard","parceledByCreditPartner","hasOwnProperty","orderPatient","tableLayout","colSpan","backgroundColor","handleTrackClick","trackSampleCard","CreditPartnerCard","pdata","removePatient","inputChangedPatientHandler","noValidationMessages","handleDOBChange","key1","selectPatientMultipleOption","tabIndex","keepOpen","OrderDataCard","creditPartnerPatientOrderDetails","testSample","CreditPartnerOrderHistory","orderHistoryData","orderDataCard","CreditPartnerHome","defaultTestDetails","defaultPatientForm","updatedPatient","some","duplicatePatientError","updatedPatientTestDetails","calculateCharge","addPatient","patientafterDeleteArr","onPatientSearch","searchExistingPatient","selectExistingPatient","existingPatient","patientwithExistingPatient","submitPatientTestDetails","convertedDateTest","sequence","duplicatePatient","includes","onBulkPatientSampleSubmit","checkPatientDetails","patients","totalOfTestCharge","start","scrollDown","scrollTo","scrollDownOrderHistory","oncreditPartnerOrderHistoryData","onCreditBalance","oncreditpartnerOrderReset","patientItem","grandTotalArr","testEl","grandTotalCharge","orgName","orgId","ListGroup","flush","ListGroupItem","creditpartnerPatientCard","trackSample_trackSampleTable","trackOrderData","creditPartnerOrderHistory","testarr","samplearr","reduxCreditBalance","TraineeHome","enrollCourse","selectedId","disableKey","obj","onCourseEnrolled","disable","courseName","enrolltesttableheader","wishlisttesttableheader","showModal","onCourseAndWishlist","oncourseData","oncourseDataOpen","trainee","cur","cdata","startDate","duration","wishlist","enrolled","checkLoginTrainee","reduxcourseAndWishlist","CheckUser","userCheckSubmitHandler","onUserCheck","userPresent","handleUserCheck","userCheckFormData","reduxUserCheck","PatientRegisterSuccess","PatientOTPSuccess","PatientRequestOTP","otpRequestSubmitHandler","onOtpRequest","patientOTPSuccess","paddingLeft","handleOtpRequest","pattern","reduxPatientOtpRequest","PatientSignUp","otp","onPatientSignUp","mandatoryMessage","patientRegisterSuccess","reduxPatientSignUp","PatientLogin","userType","min","max","CoursesOffered","addContainer","wishlistCourse","onCourseWishlist","togglemodalWishlist","containers_login_Login","reduxCourseWishlist","reduxcourseDataOpen","Antibodies","antibody_name","antibody_clone","antibody_company","antibodytabledata","antibodytableheader","antibodyheaders","antibodydata","header","antibodyheader_name","PatientForgotSuccess","PatientForgotPassword","patientForgotSuccess","reduxPatientForgotPassword","PatientResetSuccess","PatientResetPassword","patient_resetSuccess","AdminCard","AdminTitle","AdminHome","defaultAPAddress","onAdminPatientSearch","saveButtonvisible","ongetPatientAddress","inputChangedAPHandler","savePatientTestDetails","onAdminSavePatientDetails","cardVisible","getAddressInputChangedHandler","sampleTypes","adminTitle","adminCard","reduxAdminPatientSearch","reduxAdminSavePatientDetails","reduxGetPatientAddress","AdminLogin","PatientInvoice","PrintButton","patientInvoice","ref","componentRef","react_to_print_lib_default","trigger","PatientEditOrderSample","optionArr","result","editOrderData","uniq","resultData","PatientEditOrder","submitEditOrder","onSubmitEditOrder","uniqueNames","filterSample","current","find","reduceSampleArr","arr","comp","final","patientEditOrderSample","reduxSubmitEditOrder","TrainingAcademy","AboutCOP","aboutCOPContent","getAboutCOPContent","Image","img","marginLeft","Description","Description2","App","onTryAutoSignup","path","exact","component","logout","render","patientcashReceipt","printButton","patientEditOrder","Boolean","hostname","match","ReactDOM","es","src_App_0","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6f6a6dcc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dummy.893fa811.jpg\";","module.exports = __webpack_public_path__ + \"static/media/TataTrustsNewLogo.4b04172b.png\";","module.exports = __webpack_public_path__ + \"static/media/Doc.637046d6.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Patient.b03b24ad.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Trainee.a8ae2151.PNG\";","module.exports = __webpack_public_path__ + \"static/media/homeSec3.893fa811.jpg\";","import * as actionTypes from './actions/actionTypes';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    user: null,\r\n    homeData: null,\r\n    mediaData: null,\r\n    success: null,\r\n    message: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/',\r\n    userTypeId: null,\r\n    data: null,\r\n    searchData: [],\r\n    cpsuccess: null,\r\n    cpmessage: null,\r\n    cperror: null,\r\n    coursedata: null,\r\n    pordersuccess: null,\r\n    pstatusdata: [],\r\n    lpstatusdata: [],\r\n    invalidData: null,\r\n    phistorysuccess: null,\r\n    phistoryerror: null,\r\n    phistoryData: null,\r\n    cphistorysuccess: null,\r\n    cphistoryerror: null,\r\n    cphistoryData: [],\r\n    resetsuccess: null,\r\n    resetmessage: null,\r\n    reseterror: null,\r\n    courseEWdata: null,\r\n    courseEWdataerror: null,\r\n    careerMessage: null,\r\n    posuccess: null,\r\n    porderData: [],\r\n    pordermessage: null,\r\n    ocmessage: null,\r\n    ocsuccess: null,\r\n    apsearchsuccess: null,\r\n    apsearchdata: null,\r\n    apsavesuccess: null,\r\n    apsavemessage: null,\r\n    lcdata: null,\r\n    lcsuccess: null,\r\n    stdata: null,\r\n    stsuccess: null,\r\n    getPAsuccess: null,\r\n    getPAdata: null,\r\n    stestsuccess: null,\r\n    stestdata: null,\r\n    addEditsuccess: null,\r\n    addEditMessage: null,\r\n    editordersuccess: null,\r\n    editordermessage: null,\r\n    patientupdatedAddsuccess: null,\r\n    patientupdatedAddData: null,\r\n    enrollSuccess: null,\r\n    enrollData: null,\r\n    wishlistData: null,\r\n    wishlistSuccess: null,\r\n    patientSignUpError: null,\r\n    forgotsuccess: null,\r\n    forgotdata: null,\r\n    CBsuccess: null,\r\n    CBerror: null,\r\n    CBdata: null,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOGIN_START:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                success: null,\r\n                loading: true,\r\n            };\r\n        case actionTypes.LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n                user: action.user,\r\n                userTypeId: action.userTypeId,\r\n                error: null,\r\n                loading: false,\r\n            };\r\n        case actionTypes.LOGIN_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                success: null,\r\n                loading: false,\r\n            };\r\n        case actionTypes.SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                success: action.success,\r\n                message: action.message,\r\n                error: action.error,\r\n                invalidFlag: action.invalidFlag,\r\n                loading: false\r\n            };\r\n        case actionTypes.PATIENT_SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                successflag: action.successflag,\r\n                message: action.message,\r\n                patientSignUpError: action.patientSignUpError,\r\n                loading: false\r\n            };\r\n        case actionTypes.SIGNUP_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            };\r\n        case actionTypes.AUTH_LOGOUT: \r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                userTypeId: null,\r\n                error: null,\r\n                loading: false,\r\n            };\r\n        case actionTypes.DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                success: action.success,\r\n                data: action.data,\r\n                error: null,\r\n                loading: false\r\n            };\r\n        case actionTypes.DATA_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            };\r\n        case actionTypes.ENROLL_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                enrollSuccess: action.enrollSuccess,\r\n                enrollData: action.enrollData,\r\n                error: null,\r\n                loading: false\r\n            };\r\n        case actionTypes.ENROLL_DATA_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            };\r\n        case actionTypes.WISHLIST_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                wishlistSuccess: action.wishlistSuccess,\r\n                wishlistData: action.wishlistData,\r\n                error: null,\r\n                loading: false\r\n            };\r\n        case actionTypes.ENROLL_DATA_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            };\r\n        case actionTypes.CREDIT_PARTNER_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                cpsuccess: action.cpsuccess,\r\n                cperror: action.cperror,\r\n                cplimiterror: action.cplimiterror,\r\n                cpmessage: action.cpmessage,\r\n                error: null,\r\n                loading: false\r\n            };\r\n        case actionTypes.CREDIT_PARTNER_ORDER_FAILURE:\r\n            return {\r\n                ...state,\r\n                cperror: action.cperror,\r\n                loading: false\r\n            };\r\n        case actionTypes.CREDIT_PARTNER_ORDER_RESET:\r\n            return {\r\n                ...state,\r\n                cpsuccess: null,\r\n                cperror: null,\r\n                cpmessage: null,\r\n                error: null,\r\n                loading: false\r\n            };\r\n        case actionTypes.SEARCH_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                success: action.success,\r\n                searchData: action.searchData,\r\n                error: null,\r\n                loading: false\r\n            };\r\n        case actionTypes.SEARCH_DATA_FAILURE:\r\n            return {\r\n                ...state,\r\n                searchData: [],\r\n                loading: false\r\n            };\r\n        case actionTypes.COURSE_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                coursedata: action.coursedata,\r\n                loading: false,\r\n            };\r\n        case actionTypes.COURSE_DATA_FAILURE:\r\n            return {\r\n                ...state,\r\n                coursedataerror: action.coursedataerror,\r\n                loading: false,\r\n            };\r\n        case actionTypes.COURSE_EW_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                courseEWdata: action.courseEWdata,\r\n                loading: false,\r\n            };\r\n        case actionTypes.COURSE_EW_DATA_FAILURE:\r\n            return {\r\n                ...state,\r\n                courseEWdataerror: action.courseEWdataerror,\r\n                loading: false,\r\n            };\r\n        case actionTypes.PATIENT_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                pordersuccess: action.pordersuccess,\r\n                pordermessage: action.pordermessage,\r\n                loading: false,\r\n            };\r\n        case actionTypes.PATIENT_ORDER_FAILURE:\r\n            return {\r\n                ...state,\r\n                pordererror: action.pordererror,\r\n                loading: false,\r\n            };\r\n        case actionTypes.PATIENT_ORDER_RESET:\r\n            return {\r\n                ...state,\r\n                pordersuccess: null,\r\n                pinsuccess: null,\r\n                pindata: null,\r\n                loading: false,\r\n            };\r\n        case actionTypes.PATIENT_ORDER_STATUS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                psuccess: action.psuccess,\r\n                pstatusdata: action.pstatusdata ? state.pstatusdata.concat(action.pstatusdata) : state.pstatusdata,\r\n                lpstatusdata: action.lpstatusdata ? state.lpstatusdata.concat({id: action.lpstatusdata[0].billId, list: action.lpstatusdata}) : state.lpstatusdata,\r\n                phistoryData: state.phistoryData.length !== 0 && action.pstatusdata ? state.phistoryData.map(el => {\r\n                    if(el.awbId === action.pstatusdata.id) {\r\n                        el[\"logisticsStatus\"] = {\"id\": el.awbId, \"status\": action.pstatusdata}\r\n                        //el[\"logisticsStatus\"] = {\"id\": action.pstatusdata.id, \"status\": action.pstatusdata.status}\r\n                    }\r\n                    return el\r\n                }) : state.phistoryData,\r\n                cphistoryData: state.cphistoryData.length !== 0 && action.lpstatusdata ? [[].concat.apply([], state.cphistoryData).map(el => {\r\n                    if(el.billId === action.lpstatusdata[0].billId) {\r\n                        el[\"livehealthStatus\"] = action.lpstatusdata\r\n                    }\r\n                    return el\r\n                })] : state.cphistoryData,\r\n                loading: false\r\n            };\r\n        case actionTypes.CP_PATIENT_ORDER_STATUS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                psuccess: action.psuccess,\r\n                pstatusdata: action.pstatusdata ? state.pstatusdata.concat(action.pstatusdata) : state.pstatusdata,\r\n                lpstatusdata: action.lpstatusdata ? state.lpstatusdata.concat({id: action.lpstatusdata[0].billId, list: action.lpstatusdata}) : state.lpstatusdata,\r\n                phistoryData: state.phistoryData.length !== 0 && action.pstatusdata ? state.phistoryData.map(el => {\r\n                    if(el.awbNo === action.pstatusdata.id) {\r\n                        el[\"logisticsStatus\"] = {\"id\": el.awbNo, \"status\": action.pstatusdata}\r\n                        //el[\"logisticsStatus\"] = {\"id\": action.pstatusdata.id, \"status\": action.pstatusdata.status}\r\n                    }\r\n                    return el\r\n                }) : state.phistoryData,\r\n                cphistoryData: state.cphistoryData.length !== 0 && action.lpstatusdata ? [[].concat.apply([], state.cphistoryData).map(el => {\r\n                    if(el.creditPartnerDetails.lhBillId === action.lpstatusdata[0].billId) {\r\n                        el[\"livehealthStatus\"] = action.lpstatusdata\r\n                    }\r\n                    return el\r\n                })] : state.cphistoryData,\r\n                loading: false\r\n            };\r\n        case actionTypes.CREDIT_PARTNER_PATIENT_ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                posuccess: action.posuccess,\r\n                porderData: state.porderData.concat(action.porderData),\r\n                cphistoryData: [[].concat.apply([], state.cphistoryData).map(el => {\r\n                    if(el.id === action.porderData[0].creditPartnerPatientId) {\r\n                        el[\"creditPartnerDetails\"] = action.porderData[0]\r\n                    }\r\n                    return el\r\n                })],\r\n                loading: false\r\n            };\r\n        case actionTypes.PATIENT_ORDER_STATUS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false,\r\n            };\r\n        case actionTypes.PIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                pinsuccess: action.pinsuccess,\r\n                pindata: action.pindata,\r\n                pinfailure: action.pinfailure,\r\n                loading: false,\r\n            };\r\n        case actionTypes.PIN_FAILURE:\r\n            return {\r\n                ...state,\r\n                pinsuccess: false,\r\n                loading: false,\r\n            };\r\n        case actionTypes.SET_USER_TYPE:\r\n            return {\r\n                ...state,\r\n                userTypeId: action.userTypeId,\r\n                loading: false\r\n            };\r\n        case actionTypes.PATIENT_INVALID_DATA:\r\n            return {\r\n                ...state,\r\n                invalidData: action.invalidData,\r\n                loading: false\r\n            }\r\n        case actionTypes.PATIENT_HISTORY_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                phistorysuccess: action.phistorysuccess,\r\n                phistoryerror: action.phistoryerror,\r\n                phistoryData: action.phistoryData,\r\n                loading: false\r\n            }\r\n        case actionTypes.PATIENT_HISTORY_DATA_FAILURE:\r\n            return {\r\n                ...state,\r\n                phistoryerror: action.phistoryerror,\r\n                loading: false\r\n            }\r\n        case actionTypes.CREDIT_PARTNER_ORDER_PATIENT_HISTORY_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                cphistorysuccess: action.cphistorysuccess,\r\n                cphistoryerror: action.cphistoryerror,\r\n                cphistoryData: [...state.cphistoryData, action.cphistoryData.creditPartnerPatients.map(el => {\r\n                    el[\"orderId\"] = action.cphistoryData.orderId\r\n                    return el\r\n                })],\r\n                phistoryData: state.phistoryData.map((el) => {\r\n                    if(el.id === action.cphistoryData.orderId) {\r\n                        el[\"creditPartnerPatients\"] = action.cphistoryData.creditPartnerPatients\r\n                        \r\n                    }\r\n                    return el\r\n                }),\r\n                loading: false\r\n            }\r\n        case actionTypes.CREDIT_PARTNER_ORDER_PATIENT_HISTORY_DATA_FAILURE:\r\n            return {\r\n                ...state,\r\n                cphistoryerror: action.cphistoryerror,\r\n                loading: false\r\n            }\r\n        case actionTypes.RESET_SUCCESS:\r\n            return {\r\n                ...state,\r\n                resetsuccess: action.resetsuccess,\r\n                resetmessage: action.resetmessage,\r\n                reseterror: action.reseterror,\r\n                loading: false\r\n            }\r\n        case actionTypes.RESET_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            }\r\n        case actionTypes.CAREER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                careerMessage: action.careerMessage,\r\n                loading: false\r\n            }\r\n        case actionTypes.CAREER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            }\r\n        case actionTypes.OC_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ocsuccess: action.ocsuccess,\r\n                ocmessage: action.ocmessage,\r\n                loading: false\r\n            }\r\n        case actionTypes.OC_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            }\r\n        case actionTypes.APSEARCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                apsearchsuccess: action.apsearchsuccess,\r\n                apsearchdata: action.apsearchdata,\r\n                loading: false\r\n            }\r\n        case actionTypes.APSEARCH_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                apsearchdata: [],\r\n                loading: false\r\n            }\r\n        case actionTypes.APSAVE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                apsavesuccess: action.apsavesuccess,\r\n                apsavemessage: action.apsavemessage,\r\n                loading: false\r\n            }\r\n        case actionTypes.APSAVE_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            }\r\n        case actionTypes.LOGISTIC_COST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                lcsuccess: action.lcsuccess,\r\n                lcdata: action.lcdata,\r\n                loading: false\r\n            }\r\n        case actionTypes.LOGISTIC_COST_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            }\r\n        case actionTypes.SAMPLE_TYPE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                stsuccess: action.stsuccess,\r\n                stdata: action.stdata,\r\n                loading: false\r\n            }\r\n        case actionTypes.SAMPLE_TYPE_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            }\r\n        case actionTypes.SAMPLE_TEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                stestsuccess: action.stestsuccess,\r\n                stestdata: action.stestdata,\r\n                loading: false\r\n            }\r\n        case actionTypes.SAMPLE_TEST_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            }\r\n        case actionTypes.GET_PA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                getPAsuccess: action.getPAsuccess,\r\n                getPAdata: action.getPAdata,\r\n                loading: false\r\n            }\r\n        case actionTypes.GET_PA_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            }\r\n        case actionTypes.EDIT_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                editordersuccess: action.editordersuccess,\r\n                editordermessage: action.editordermessage,\r\n                loading: false\r\n            }\r\n        case actionTypes.EDIT_ORDER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            }\r\n        case actionTypes.EDIT_ADD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                addEditsuccess: action.addEditsuccess,\r\n                addEditMessage: action.addEditMessage,\r\n                loading: false\r\n            }\r\n        case actionTypes.EDIT_ADD_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            }\r\n        case actionTypes.PATIENT_UPDATED_ADD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                patientupdatedAddsuccess: action.patientupdatedAddsuccess,\r\n                patientupdatedAddData: action.patientupdatedAddData,\r\n                loading: false\r\n            }\r\n        case actionTypes.EDIT_ADD_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            }\r\n        case actionTypes.USER_FORGOT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                forgotsuccess: action.forgotsuccess,\r\n                forgotdata: action.forgotdata,\r\n                loading: false\r\n            }\r\n        case actionTypes.USER_FORGOT_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            }\r\n        case actionTypes.CREDIT_BALANCE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                CBsuccess: action.CBsuccess,\r\n                CBerror: action.CBerror,\r\n                CBdata: action.CBdata,\r\n                loading: false\r\n            }\r\n        case actionTypes.CREDIT_BALANCE_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","export const LOGIN_START = 'LOGIN_START';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const SET_USER_TYPE = 'SET_USER_TYPE';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const PATIENT_SIGNUP_SUCCESS = 'PATIENT_SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const SUBMIT_PATIENT_SAMPLE = 'SUBMIT_PATIENT_SAMPLE';\r\nexport const DATA_SUCCESS = 'DATA_SUCCESS';\r\nexport const DATA_FAILURE = 'DATA_FAILURE';\r\nexport const SEARCH_DATA_SUCCESS = 'SEARCH_DATA_SUCCESS';\r\nexport const SEARCH_DATA_FAILURE = 'SEARCH_DATA_FAILURE';\r\nexport const CREDIT_PARTNER_ORDER_SUCCESS = 'CREDIT_PARTNER_ORDER_SUCCESS';\r\nexport const CREDIT_PARTNER_ORDER_FAILURE = 'CREDIT_PARTNER_ORDER_FAILURE';\r\nexport const CREDIT_PARTNER_ORDER_RESET = 'CREDIT_PARTNER_ORDER_RESET';\r\nexport const COURSE_DATA_SUCCESS = 'COURSE_DATA_SUCCESS';\r\nexport const COURSE_DATA_FAILURE = 'COURSE_DATA_FAILURE';\r\nexport const PATIENT_ORDER_SUCCESS = 'PATIENT_ORDER_SUCCESS';\r\nexport const PATIENT_ORDER_FAILURE = 'PATIENT_ORDER_FAILURE';\r\nexport const PATIENT_ORDER_STATUS_SUCCESS = 'PATIENT_ORDER_STATUS_SUCCESS';\r\nexport const CP_PATIENT_ORDER_STATUS_SUCCESS = 'CP_PATIENT_ORDER_STATUS_SUCCESS';\r\nexport const PATIENT_ORDER_STATUS_FAILURE = 'PATIENT_ORDER_STATUS_FAILURE';\r\nexport const PATIENT_ORDER_RESET = 'PATIENT_ORDER_RESET';\r\nexport const PIN_SUCCESS = 'PIN_SUCCESS';\r\nexport const PIN_FAILURE = 'PIN_FAILURE';\r\nexport const PATIENT_INVALID_DATA = 'PATIENT_INVALID_DATA';\r\nexport const PATIENT_HISTORY_DATA_SUCCESS = 'PATIENT_HISTORY_DATA_SUCCESS';\r\nexport const PATIENT_HISTORY_DATA_FAILURE = 'PATIENT_HISTORY_DATA_FAILURE';\r\nexport const CREDIT_PARTNER_ORDER_PATIENT_HISTORY_DATA_SUCCESS = 'CREDIT_PARTNER_ORDER_PATIENT_HISTORY_DATA_SUCCESS';\r\nexport const CREDIT_PARTNER_ORDER_PATIENT_HISTORY_DATA_FAILURE = 'CREDIT_PARTNER_ORDER_PATIENT_HISTORY_DATA_FAILURE';\r\nexport const CREDIT_PARTNER_PATIENT_ORDER_DETAILS_SUCCESS = 'CREDIT_PARTNER_PATIENT_ORDER_DETAILS_SUCCESS';\r\nexport const RESET_SUCCESS = 'RESET_SUCCESS';\r\nexport const RESET_FAIL = 'RESET_FAIL';\r\nexport const COURSE_EW_DATA_SUCCESS = 'COURSE_EW_DATA_SUCCESS';\r\nexport const COURSE_EW_DATA_FAILURE = 'COURSE_EW_DATA_FAILURE';\r\nexport const CAREER_SUCCESS = 'CAREER_SUCCESS';\r\nexport const CAREER_FAILURE = 'CAREER_FAILURE';\r\nexport const OC_SUCCESS = 'OC_SUCCESS';\r\nexport const OC_FAILURE = 'OC_FAILURE';\r\nexport const APSEARCH_SUCCESS = 'APSEARCH_SUCCESS';\r\nexport const APSEARCH_FAILURE = 'APSEARCH_FAILURE';\r\nexport const APSAVE_SUCCESS = 'APSAVE_SUCCESS';\r\nexport const APSAVE_FAILURE = 'APSAVE_FAILURE';\r\nexport const LOGISTIC_COST_SUCCESS = 'LOGISTIC_COST_SUCCESS';\r\nexport const LOGISTIC_COST_FAILURE = 'LOGISTIC_COST_FAILURE';\r\nexport const SAMPLE_TYPE_SUCCESS = 'SAMPLE_TYPE_SUCCESS';\r\nexport const SAMPLE_TYPE_FAILURE = 'SAMPLE_TYPE_FAILURE';\r\nexport const GET_PA_SUCCESS = 'GET_PA_SUCCESS';\r\nexport const GET_PA_FAILURE = 'GET_PA_FAILURE';\r\nexport const SAMPLE_TEST_SUCCESS = 'SAMPLE_TEST_SUCCESS';\r\nexport const SAMPLE_TEST_FAILURE = 'SAMPLE_TEST_FAILURE';\r\nexport const EDIT_ADD_SUCCESS = 'EDIT_ADD_SUCCESS';\r\nexport const EDIT_ADD_FAILURE = 'EDIT_ADD_FAILURE';\r\nexport const EDIT_ORDER_SUCCESS = 'EDIT_ORDER_SUCCESS';\r\nexport const EDIT_ORDER_FAILURE = 'EDIT_ORDER_FAILURE';\r\nexport const PATIENT_UPDATED_ADD_SUCCESS = 'PATIENT_UPDATED_ADD_SUCCESS';\r\nexport const PATIENT_UPDATED_ADD_FAILURE = 'PATIENT_UPDATED_ADD_FAILURE';\r\nexport const ENROLL_DATA_SUCCESS = 'ENROLL_DATA_SUCCESS';\r\nexport const ENROLL_DATA_FAILURE = 'ENROLL_DATA_FAILURE';\r\nexport const WISHLIST_DATA_SUCCESS = 'WISHLIST_DATA_SUCCESS';\r\nexport const WISHLIST_DATA_FAILURE = 'WISHLIST_DATA_FAILURE';\r\nexport const USER_FORGOT_SUCCESS = 'USER_FORGOT_SUCCESS';\r\nexport const USER_FORGOT_FAILURE = 'USER_FORGOT_FAILURE';\r\nexport const CREDIT_BALANCE_SUCCESS = 'CREDIT_BALANCE_SUCCESS';\r\nexport const CREDIT_BALANCE_FAILURE = 'CREDIT_BALANCE_FAILURE';","import { createStore, applyMiddleware } from 'redux';\r\nimport reducer from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import store from \"../../redux/store\";\r\nimport axios from 'axios';\r\n\r\nclass HomeApi {\r\n\r\n    // static getHomeContent() {\r\n    //     return HplServices.get('/homes').then(response => {\r\n    //         // store.dispatch(changeName(response));\r\n    //         console.log(response);\r\n    //         return response;\r\n    //     }, error => {\r\n    //         console.log(error);\r\n    //         return error;\r\n    //     })\r\n    // };\r\n\r\n\r\n    static getHomeContent() {\r\n        return axios.get('/homes')\r\n            .then( response => {\r\n                console.log(response.data);\r\n                return response.data;\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n                return error;\r\n        } );\r\n    };\r\n\r\n    static getAboutUsContent(){\r\n        return axios.get('/abouts')\r\n            .then( response => {\r\n                console.log(response.data);\r\n                return response.data;\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n                return error;\r\n        } );\r\n    };\r\n\r\n    static getServiceContent(){\r\n        return axios.get('/servicepages')\r\n            .then( response => {\r\n                console.log(response.data);\r\n                return response.data;\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n                return error;\r\n        } );\r\n    };\r\n\r\n    static getHomeTeamContent(){\r\n        return axios.get('/hometeamnews')\r\n            .then( response => {\r\n                console.log(response.data);\r\n                return response.data;\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n                return error;\r\n        } );\r\n    };\r\n\r\n    static getTeamContent(){\r\n        return axios.get('/teams')\r\n            .then( response => {\r\n                console.log(response.data);\r\n                return response.data;\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n                return error;\r\n        } );\r\n    };\r\n\r\n    static getContactContent(){\r\n        return axios.get('/contacts')\r\n            .then( response => {\r\n                console.log(response.data);\r\n                return response.data;\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n                return error;\r\n        } );\r\n    };\r\n\r\n    static getCareerContent(){\r\n        return axios.get('/careers')\r\n            .then( response => {\r\n                console.log(response.data);\r\n                return response.data;\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n                return error;\r\n        } );\r\n    }\r\n\r\n    static getTestListContent(){\r\n        return axios.get('/listoftestsoffereds')\r\n            .then( response => {\r\n                console.log(response.data);\r\n                return response.data;\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n                return error;\r\n        } );\r\n    }\r\n\r\n    static getResearchMaterialContent(){\r\n        return axios.get('/researchmaterials')\r\n            .then( response => {\r\n                console.log(response.data);\r\n                return response.data;\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n                return error;\r\n        } );\r\n    }\r\n\r\n    static getInsightResearchContent(){\r\n        return axios.get('/insightresearches')\r\n            .then( response => {\r\n                console.log(response.data);\r\n                return response.data;\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n                return error;\r\n        } );\r\n    }\r\n\r\n    static getAboutCOPContent(){\r\n        return axios.get('/aboutcops')\r\n            .then( response => {\r\n                console.log(response.data);\r\n                return response.data;\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n                return error;\r\n        } );\r\n    }\r\n\r\n}\r\n\r\nexport default HomeApi;\r\n\r\n","import * as actionTypes from './actionTypes';\r\nimport LoginRegisterApi from '../../services/API/LoginRegisterApi';\r\nimport HomeApi from '../../services/API/HomeApi';\r\n\r\nexport const loginStart = () => {\r\n    return {\r\n        type: actionTypes.LOGIN_START\r\n    }\r\n}\r\n\r\nexport const loginSuccess = (token, user, userTypeId) => {\r\n    return {\r\n        type: actionTypes.LOGIN_SUCCESS,\r\n        token: token,\r\n        user: user,\r\n        userTypeId: userTypeId,\r\n        loading: false\r\n    }\r\n}\r\n\r\nexport const patientInvalidLogin = (invalidData) => {\r\n    return {\r\n        type: actionTypes.PATIENT_INVALID_DATA,\r\n        invalidData: invalidData,\r\n        loading: false\r\n    }\r\n}\r\n\r\nexport const loginFail = (error) => {\r\n    return {\r\n        type: actionTypes.LOGIN_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const signupSuccess = (success, message, error, invalidFlag) => {\r\n    return {\r\n        type: actionTypes.SIGNUP_SUCCESS,\r\n        success: success,\r\n        message: message,\r\n        error: error,\r\n        invalidFlag: invalidFlag,\r\n        loading: false\r\n    }\r\n}\r\n\r\nexport const resetSuccess = (resetsuccess, resetmessage, reseterror) => {\r\n    return {\r\n        type: actionTypes.RESET_SUCCESS,\r\n        resetsuccess: resetsuccess,\r\n        resetmessage: resetmessage,\r\n        reseterror: reseterror,\r\n        loading: false\r\n    }\r\n}\r\n\r\nexport const resetFail = (error) => {\r\n    return {\r\n        type: actionTypes.RESET_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const patientSignupSuccess = (successflag, message, patientSignUpError) => {\r\n    return {\r\n        type: actionTypes.PATIENT_SIGNUP_SUCCESS,\r\n        successflag: successflag,\r\n        message: message,\r\n        patientSignUpError: patientSignUpError,\r\n        loading: false\r\n    }\r\n}\r\n\r\nexport const signupFail = (error) => {\r\n    return {\r\n        type: actionTypes.SIGNUP_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const userDataSuccess = (success, data) => {\r\n    return {\r\n        type: actionTypes.DATA_SUCCESS,\r\n        success: success,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport const userDataFailure = (error) => {\r\n    return {\r\n        type: actionTypes.DATA_FAILURE,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const userEnrollDataSuccess = (enrollSuccess, enrollData) => {\r\n    return {\r\n        type: actionTypes.ENROLL_DATA_SUCCESS,\r\n        enrollSuccess: enrollSuccess,\r\n        enrollData: enrollData\r\n    }\r\n}\r\n\r\nexport const userEnrollDataFailure = (error) => {\r\n    return {\r\n        type: actionTypes.ENROLL_DATA_FAILURE,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const userWishlistDataSuccess = (wishlistSuccess, wishlistData) => {\r\n    return {\r\n        type: actionTypes.WISHLIST_DATA_SUCCESS,\r\n        wishlistSuccess: wishlistSuccess,\r\n        wishlistData: wishlistData\r\n    }\r\n}\r\n\r\nexport const userWishlistDataFailure = (error) => {\r\n    return {\r\n        type: actionTypes.WISHLIST_DATA_FAILURE,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const patientHistoryDataSuccess = (success, error, phistoryData) => {\r\n    return {\r\n        type: actionTypes.PATIENT_HISTORY_DATA_SUCCESS,\r\n        phistorysuccess: success,\r\n        phistoryerror: error,\r\n        phistoryData: phistoryData\r\n    }\r\n}\r\n\r\nexport const patientHistoryDataFailure = (error) => {\r\n    return {\r\n        type: actionTypes.PATIENT_HISTORY_DATA_FAILURE,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const creditPartnerOrderPatientHistoryDataSuccess = (cphistorysuccess, cphistoryerror, cphistoryData) => {\r\n    return {\r\n        type: actionTypes.CREDIT_PARTNER_ORDER_PATIENT_HISTORY_DATA_SUCCESS,\r\n        cphistorysuccess: cphistorysuccess,\r\n        cphistoryerror: cphistoryerror,\r\n        cphistoryData: cphistoryData\r\n    }\r\n}\r\n\r\nexport const creditPartnerOrderPatientHistoryDataFailure = (error) => {\r\n    return {\r\n        type: actionTypes.CREDIT_PARTNER_ORDER_PATIENT_HISTORY_DATA_FAILURE,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const creditPartnerOrderSuccess = (cpsuccess, cperror, cplimiterror, cpmessage) => {\r\n    return {\r\n        type: actionTypes.CREDIT_PARTNER_ORDER_SUCCESS,\r\n        cpsuccess: cpsuccess,\r\n        cperror: cperror,\r\n        cplimiterror: cplimiterror,\r\n        cpmessage: cpmessage\r\n    }\r\n}\r\n\r\nexport const creditPartnerOrderFailure = (cperror) => {\r\n    return {\r\n        type: actionTypes.CREDIT_PARTNER_ORDER_FAILURE,\r\n        cperror: cperror,\r\n    }\r\n}\r\n\r\nexport const creditpartnerOrderReset = () => {\r\n    return {\r\n        type: actionTypes.CREDIT_PARTNER_ORDER_RESET\r\n    }\r\n}\r\n\r\nexport const searchPatientSuccess = (success, searchData) => {\r\n    return {\r\n        type: actionTypes.SEARCH_DATA_SUCCESS,\r\n        success: success,\r\n        searchData: searchData\r\n    }\r\n}\r\n\r\nexport const searchPatientFailure = () => {\r\n    return {\r\n        type: actionTypes.SEARCH_DATA_FAILURE,\r\n    }\r\n}\r\n\r\nexport const patientOrderSuccess = (pordersuccess, pordermessage) => {\r\n    return {\r\n        type: actionTypes.PATIENT_ORDER_SUCCESS,\r\n        pordersuccess: pordersuccess,\r\n        pordermessage: pordermessage\r\n    }\r\n}\r\n\r\nexport const patientOrderFailure = (pordererror) => {\r\n    return {\r\n        type: actionTypes.PATIENT_ORDER_FAILURE,\r\n        pordererror: pordererror,\r\n    }\r\n}\r\n\r\nexport const patientOrderReset = () => {\r\n    return {\r\n        type: actionTypes.PATIENT_ORDER_RESET\r\n    }\r\n}\r\n\r\nexport const courseDataSuccess = (coursedata) => {\r\n    return {\r\n        type: actionTypes.COURSE_DATA_SUCCESS,\r\n        coursedata: coursedata,\r\n    }\r\n}\r\n\r\nexport const courseDataFailure = (error) => {\r\n    return {\r\n        type: actionTypes.COURSE_DATA_FAILURE,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const courseEWSuccess = (courseEWdata) => {\r\n    return {\r\n        type: actionTypes.COURSE_EW_DATA_SUCCESS,\r\n        courseEWdata: courseEWdata,\r\n    }\r\n}\r\n\r\nexport const courseEWFailure = (courseEWdataerror) => {\r\n    return {\r\n        type: actionTypes.COURSE_EW_DATA_FAILURE,\r\n        courseEWdataerror: courseEWdataerror\r\n    }\r\n}\r\n\r\nexport const patientOrderStatusSuccess = (psuccess, pstatusdata, lpstatusdata) => {\r\n    return {\r\n        type: actionTypes.PATIENT_ORDER_STATUS_SUCCESS,\r\n        psuccess: psuccess,\r\n        pstatusdata: pstatusdata,\r\n        lpstatusdata: lpstatusdata\r\n    }\r\n}\r\n\r\nexport const CPpatientOrderStatusSuccess = (psuccess, pstatusdata, lpstatusdata) => {\r\n    return {\r\n        type: actionTypes.CP_PATIENT_ORDER_STATUS_SUCCESS,\r\n        psuccess: psuccess,\r\n        pstatusdata: pstatusdata,\r\n        lpstatusdata: lpstatusdata\r\n    }\r\n}\r\n\r\nexport const creditpartnerPatientOrderDetailsSuccess = (posuccess, porderData) => {\r\n    return {\r\n        type: actionTypes.CREDIT_PARTNER_PATIENT_ORDER_DETAILS_SUCCESS,\r\n        posuccess: posuccess,\r\n        porderData: porderData\r\n    }\r\n}\r\n\r\nexport const patientOrderStatusFailure = (error) => {\r\n    return {\r\n        type: actionTypes.PATIENT_ORDER_STATUS_FAILURE,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const careerSuccess = (careerMessage) => {\r\n    return {\r\n        type: actionTypes.CAREER_SUCCESS,\r\n        careerMessage: careerMessage\r\n    }\r\n}\r\n\r\nexport const careerFailure = (error) => {\r\n    return {\r\n        type: actionTypes.CAREER_FAILURE,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const orderCompleteSuccess = (ocsuccess, ocmessage) => {\r\n    return {\r\n        type: actionTypes.OC_SUCCESS,\r\n        ocsuccess: ocsuccess,\r\n        ocmessage: ocmessage\r\n    }\r\n}\r\n\r\nexport const orderCompleteFailure = (error) => {\r\n    return {\r\n        type: actionTypes.OC_FAILURE,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const apSearchSuccess = (apsearchsuccess, apsearchdata) => {\r\n    return {\r\n        type: actionTypes.APSEARCH_SUCCESS,\r\n        apsearchsuccess: apsearchsuccess,\r\n        apsearchdata: apsearchdata\r\n    }\r\n}\r\n\r\nexport const apSearchFailure = (error) => {\r\n    return {\r\n        type: actionTypes.APSEARCH_FAILURE,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const apSaveSuccess = (apsavesuccess, apsavemessage) => {\r\n    return {\r\n        type: actionTypes.APSAVE_SUCCESS,\r\n        apsavesuccess: apsavesuccess,\r\n        apsavemessage: apsavemessage\r\n    }\r\n}\r\n\r\nexport const apSaveFailure = (error) => {\r\n    return {\r\n        type: actionTypes.APSAVE_FAILURE,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const logisticCostSuccess = (lcsuccess, lcdata) => {\r\n    return {\r\n        type: actionTypes.LOGISTIC_COST_SUCCESS,\r\n        lcsuccess: lcsuccess,\r\n        lcdata: lcdata\r\n    }\r\n}\r\n\r\nexport const logisticCostFailure = (error) => {\r\n    return {\r\n        type: actionTypes.LOGISTIC_COST_FAILURE,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const sampleTypeSuccess = (stsuccess, stdata) => {\r\n    return {\r\n        type: actionTypes.SAMPLE_TYPE_SUCCESS,\r\n        stsuccess: stsuccess,\r\n        stdata: stdata\r\n    }\r\n}\r\n\r\nexport const sampleTypeFailure = (error) => {\r\n    return {\r\n        type: actionTypes.SAMPLE_TYPE_FAILURE,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const sampleTestSuccess = (stestsuccess, stestdata) => {\r\n    return {\r\n        type: actionTypes.SAMPLE_TEST_SUCCESS,\r\n        stestsuccess: stestsuccess,\r\n        stestdata: stestdata\r\n    }\r\n}\r\n\r\nexport const sampleTestFailure = (error) => {\r\n    return {\r\n        type: actionTypes.SAMPLE_TEST_FAILURE,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const getPAddSuccess = (getPAsuccess, getPAdata) => {\r\n    return {\r\n        type: actionTypes.GET_PA_SUCCESS,\r\n        getPAsuccess: getPAsuccess,\r\n        getPAdata: getPAdata\r\n    }\r\n}\r\n\r\nexport const getPAddFailure = (error) => {\r\n    return {\r\n        type: actionTypes.GET_PA_FAILURE,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const editOrderSuccess = (editordersuccess, editordermessage) => {\r\n    return {\r\n        type: actionTypes.EDIT_ORDER_SUCCESS,\r\n        editordersuccess: editordersuccess,\r\n        editordermessage: editordermessage\r\n    }\r\n}\r\n\r\nexport const editOrderFailure = (error) => {\r\n    return {\r\n        type: actionTypes.EDIT_ORDER_FAILURE,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const editAddSuccess = (addEditsuccess, addEditMessage) => {\r\n    return {\r\n        type: actionTypes.EDIT_ADD_SUCCESS,\r\n        addEditsuccess: addEditsuccess,\r\n        addEditMessage: addEditMessage\r\n    }\r\n}\r\n\r\nexport const editAddFailure = (error) => {\r\n    return {\r\n        type: actionTypes.EDIT_ADD_FAILURE,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const patientUpdatedAddSuccess = (patientupdatedAddsuccess, patientupdatedAddData) => {\r\n    return {\r\n        type: actionTypes.PATIENT_UPDATED_ADD_SUCCESS,\r\n        patientupdatedAddsuccess: patientupdatedAddsuccess,\r\n        patientupdatedAddData: patientupdatedAddData\r\n    }\r\n}\r\n\r\nexport const patientUpdatedAddFailure = (error) => {\r\n    return {\r\n        type: actionTypes.PATIENT_UPDATED_ADD_FAILURE,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const login = (username, password, token) => {\r\n    return dispatch => {\r\n        dispatch(loginStart());\r\n        LoginRegisterApi.reduxLogin(username, password, token);\r\n    }\r\n}\r\n\r\nexport const patientLogin = (patientLoginForm) => {\r\n    return dispatch => {\r\n        dispatch(loginStart());\r\n        LoginRegisterApi.reduxPatientLogin(patientLoginForm);\r\n    }\r\n}\r\n\r\nexport const signup = (formData) => {\r\n    return dispatch => {\r\n        dispatch(loginStart());\r\n        LoginRegisterApi.reduxSignup(formData);\r\n    }\r\n}\r\n\r\nexport const patientsignup = (patientData) => {\r\n    return dispatch => {\r\n        dispatch(loginStart());\r\n        LoginRegisterApi.reduxPatientSignUp(patientData);\r\n    }\r\n}\r\n\r\nexport const userCheck = (userCheckFormData) => {\r\n    return dispatch => {\r\n        dispatch(loginStart());\r\n        LoginRegisterApi.reduxUserCheck(userCheckFormData);\r\n    }\r\n}\r\n\r\nexport const patientOtpRequest = (patientForm) => {\r\n    return dispatch => {\r\n        dispatch(loginStart());\r\n        LoginRegisterApi.reduxPatientOtpRequest(patientForm);\r\n    }\r\n}\r\n\r\nexport const patientForgotPassword = (patientForm) => {\r\n    return dispatch => {\r\n        dispatch(loginStart());\r\n        LoginRegisterApi.reduxPatientForgotPassword(patientForm);\r\n    }\r\n}\r\n\r\nexport const patientResetPassword = (patientForm) => {\r\n    return dispatch => {\r\n        dispatch(loginStart());\r\n        LoginRegisterApi.reduxPatientResetPassword(patientForm);\r\n    }\r\n}\r\n\r\nexport const setUserType = (userId) => {\r\n    return {\r\n        type: actionTypes.SET_USER_TYPE,\r\n        userTypeId: userId\r\n    }\r\n}\r\n\r\nexport const getReports = (dipatch) => {\r\n    return dispatch => {\r\n        LoginRegisterApi.reduxgetReports();\r\n    }\r\n}\r\n\r\nexport const pinSuccess = (pinsuccess, pindata, pinfailure) => {\r\n    return {\r\n        type: actionTypes.PIN_SUCCESS,\r\n        pinsuccess: pinsuccess,\r\n        pindata: pindata,\r\n        pinfailure: pinfailure,\r\n    }\r\n}\r\n\r\nexport const pinFailure = (pinfailure) => {\r\n    return {\r\n        type: actionTypes.PIN_FAILURE,\r\n        pinfailure: pinfailure,\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('userTypeId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            //dispatch(logout());\r\n        } else {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            const userTypeId = localStorage.getItem('userTypeId');\r\n            dispatch(loginSuccess(token, user, userTypeId));\r\n        }\r\n    }\r\n}\r\n\r\nexport const patientTestSampleDetails = (patientTestDetails) => {\r\n    return dispatch => {\r\n        LoginRegisterApi.reduxTestSampleDetails(patientTestDetails);\r\n    }\r\n}\r\n\r\nexport const searchPatient = (id,data) => {\r\n    return dispatch => {\r\n        LoginRegisterApi.reduxSearchPatient(id,data);\r\n    }\r\n}\r\n\r\nexport const bulkPatientSampleDetails = (id,bulkPatientTestDetails,courierCost) => {\r\n    return dispatch => {\r\n        //dispatch(loginStart());\r\n        LoginRegisterApi.reduxBulkTestSampleDetails(id,bulkPatientTestDetails,courierCost);\r\n    }\r\n}\r\n\r\nexport const pinVerification = (pincode) => {\r\n    return dispatch => {\r\n        LoginRegisterApi.reduxPinVerification(pincode);\r\n    }\r\n}\r\n\r\n\r\nexport const courseEnroll = (userId, cId) => {\r\n    return dispatch => {\r\n        LoginRegisterApi.reduxCourseEnroll(userId, cId);\r\n    }\r\n}\r\n\r\nexport const courseWishlist = (userId, cId) => {\r\n    return dispatch => {\r\n        LoginRegisterApi.reduxCourseWishlist(userId, cId);\r\n    }\r\n}\r\n\r\nexport const courseData = () => {\r\n    return dispatch => {\r\n        LoginRegisterApi.reduxcourseData();\r\n    }\r\n}\r\n\r\nexport const courseDataOpen = () => {\r\n    return dispatch => {\r\n        LoginRegisterApi.reduxcourseDataOpen();\r\n    }\r\n}\r\n\r\nexport const courseAndWishlist = (id) => {\r\n    return dispatch => {\r\n        LoginRegisterApi.reduxcourseAndWishlist(id);\r\n    }\r\n}\r\n\r\nexport const patientOrderList =  (id) => {\r\n    return dispatch => {\r\n        return LoginRegisterApi.reduxPatientOrderList(id);\r\n    }\r\n}\r\n\r\nexport const patientGetOrderStatus = (billId) => {\r\n    return dispatch => {\r\n        return LoginRegisterApi.reduxPatientGetOrderStatus(billId);\r\n    }\r\n}\r\n\r\nexport const CPpatientGetOrderStatus = (billId) => {\r\n    return dispatch => {\r\n        return LoginRegisterApi.reduxCPPatientGetOrderStatus(billId);\r\n    }\r\n}\r\n\r\nexport const patientGetOrderLogisticsStatus = (awbId) => {\r\n    return dispatch => {\r\n        return LoginRegisterApi.reduxPatientGetOrderLogisticsStatus(awbId);\r\n    }\r\n}\r\n\r\nexport const CPpatientGetOrderLogisticsStatus = (awbId) => {\r\n    return dispatch => {\r\n        return LoginRegisterApi.reduxCPPatientGetOrderLogisticsStatus(awbId);\r\n    }\r\n}\r\n\r\nexport const patientOrderData = (id) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(patientOrderList(id)).then(() => {\r\n          const ordersArr = getState().phistoryData;\r\n            ordersArr.forEach(order => {\r\n                if(order.awbId !== \"\") {\r\n                // dispatch(patientOrderStatusSuccess(true))\r\n                //     const logisticsStatusArr = getState().pstatusdata;\r\n                //     console.log(logisticsStatusArr);\r\n                    dispatch(patientGetOrderLogisticsStatus(order.awbId))\r\n                }\r\n                \r\n            });\r\n        }).then(() => {\r\n            const ordersArr = getState().phistoryData;\r\n              ordersArr.forEach(order => {\r\n                if(order.lhBillId !== 0) {\r\n                //   dispatch(patientOrderStatusSuccess(true))\r\n                //       const logisticsStatusArr = getState().pstatusdata;\r\n                //       console.log(logisticsStatusArr);\r\n                  \r\n                  dispatch(patientGetOrderStatus(order.lhBillId));\r\n              }\r\n              });\r\n          });\r\n      };\r\n}\r\n\r\nexport const creditPartnerOrderList = (id) => {\r\n    return dispatch => {\r\n        return LoginRegisterApi.reduxCreditPartnerOrderList(id);\r\n            \r\n    }\r\n}\r\n\r\nexport const creditPartnerOrderPatientsList = (ordersArr) => (dispatch) => {\r\n    return Promise.all(ordersArr.map((order, index) => {\r\n        return LoginRegisterApi.reduxCreditPartnerOrderPatientsList(order.id);\r\n    }));\r\n    // return dispatch => {\r\n    //     return LoginRegisterApi.reduxCreditPartnerOrderPatientsList(id);\r\n    // }\r\n}\r\n\r\nexport const creditPartnerPatientOrderDetails = (patientOrder) => (dispatch) => {\r\n    return Promise.all(patientOrder.map((order, index) => {\r\n        return LoginRegisterApi.reduxCreditPartnerPatientOrderDetails(order.orderId, order.id)\r\n    }));\r\n}\r\n\r\nexport const creditPartnerOrderHistoryData = (id) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(creditPartnerOrderList(id)).then(() => {\r\n          const ordersArr = getState().phistoryData;\r\n                dispatch(creditPartnerOrderPatientsList(ordersArr)).then(() => {\r\n                    //this callback will run after getting patients for each order\r\n                    const patientsArr = getState().cphistoryData;\r\n                    const ordersArr = getState().phistoryData;\r\n                    const patientsOrderArr = [].concat.apply([], getState().cphistoryData);\r\n        \r\n                    console.log(patientsOrderArr);\r\n                    dispatch(creditPartnerPatientOrderDetails(patientsOrderArr)).then(() => {\r\n                        //this callback will run after getting order details for each patient\r\n\r\n                        const porderData = getState().porderData;\r\n                        console.log(porderData);\r\n                            porderData.forEach(porder => {\r\n                            if(porder.lhBillId !== 0){\r\n                            dispatch(CPpatientGetOrderStatus(porder.lhBillId));\r\n                            }\r\n                        });\r\n                         console.log(\"IT IS FINISHED\");\r\n                    });\r\n\r\n                })\r\n        }).then(() => {\r\n            const ordersArr = getState().phistoryData;\r\n              ordersArr.forEach(order => {\r\n                if(order.awbNo !== null){\r\n                dispatch(CPpatientGetOrderLogisticsStatus(order.awbNo))\r\n                }\r\n              });\r\n          })\r\n      };\r\n}\r\n\r\n\r\n// export const creditPartnerPatientOrderData = () => {\r\n//     return (dispatch, getState) => {\r\n//         const ordersArr = getState().phistoryData;\r\n//         const patientsArr = getState().cphistoryData;\r\n//         const patientsOrderArr = [].concat.apply([], getState().cphistoryData);\r\n        \r\n//         console.log(patientsOrderArr);\r\n        \r\n//         if(ordersArr.length === patientsArr.length) {\r\n\r\n              \r\n            // dispatch(creditPartnerPatientOrderDetails(patientsOrderArr)).then((data) => {\r\n            //     const porderData = getState().porderData;\r\n            //     console.log(porderData);\r\n            //         porderData.forEach(porder => {\r\n            //         dispatch(patientGetOrderStatus(porder.lhBillId));\r\n            //     });\r\n            //     // console.log(\"IT IS FINISHED\");\r\n            // });\r\n          \r\n//         }\r\n        \r\n//       };\r\n// }\r\n\r\n// export const creditPartnerPatientStatus = () => {\r\n//     return (dispatch, getState) => {\r\n//         const porderData = getState().porderData;\r\n//         console.log(porderData);\r\n//     }\r\n// }\r\n\r\nexport const careerForm = (form) => {\r\n    return dispatch => {\r\n        LoginRegisterApi.reduxCareerForm(form);\r\n    }\r\n}\r\n\r\nexport const completeOrder = (orderId) => {\r\n    return dispatch => {\r\n        LoginRegisterApi.reduxCompleteOrder(orderId).then(() => {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n            dispatch(patientOrderData(user.id));\r\n          });\r\n    }\r\n}\r\n\r\nexport const adminPatientSearch = (name, mobile) => {\r\n    return dispatch => {\r\n        LoginRegisterApi.reduxAdminPatientSearch(name, mobile);\r\n    }\r\n}\r\n\r\nexport const adminSavePatientDetails = (id, data) => {\r\n    return dispatch => {\r\n        LoginRegisterApi.reduxAdminSavePatientDetails(id, data);\r\n    }\r\n}\r\n\r\nexport const PayNowOrder =  (orderId, courierCost,admin) => {\r\n    return dispatch => {\r\n        return LoginRegisterApi.reduxPayNowOrder(orderId, courierCost, admin);\r\n    }\r\n}\r\n\r\nexport const logisticCost =  () => {\r\n    return dispatch => {\r\n        return LoginRegisterApi.reduxLogisticCost();\r\n    }\r\n}\r\n\r\nexport const sampleType =  () => {\r\n    return dispatch => {\r\n        return LoginRegisterApi.reduxSampleType();\r\n    }\r\n}\r\n\r\nexport const sampleTest =  (id) => {\r\n    return dispatch => {\r\n        return LoginRegisterApi.reduxSampleTest(id);\r\n    }\r\n}\r\n\r\nexport const getPatientAddress =  (userId) => {\r\n    return dispatch => {\r\n        return LoginRegisterApi.reduxGetPatientAddress(userId);\r\n    }\r\n}\r\n\r\nexport const submitEditOrder =  (data) => {\r\n    return dispatch => {\r\n        return LoginRegisterApi.reduxSubmitEditOrder(data);\r\n    }\r\n}\r\n\r\nexport const patientEditAddress = (updatedAddress) => {\r\n    return dispatch => {\r\n        return LoginRegisterApi.reduxPatientEditAddress(updatedAddress);\r\n    }\r\n}\r\n\r\n\r\nexport const getPatientUpdatedAddress = (id) => {\r\n    return dispatch => {\r\n        return LoginRegisterApi.reduxGetPatientUpdatedAddress(id);\r\n    }\r\n}\r\n\r\n// .then(() => {\r\n//     const patientsArr = getState().cphistoryData;\r\n    //     patientsArr[0].creditPartnerPatients.forEach(patient => {\r\n    //         dispatch(creditPartnerPatientOrderDetails(order.awbNo))\r\n    //   });\r\n//   })\r\n\r\nexport const userForgotPassword = (username) => {\r\n    return dispatch => {\r\n        dispatch(loginStart());\r\n        LoginRegisterApi.reduxUserForgotPassword(username);\r\n    }\r\n}\r\n\r\nexport const userForgotSuccess = (forgotsuccess, forgotdata) => {\r\n    return {\r\n        type: actionTypes.USER_FORGOT_SUCCESS,\r\n        forgotsuccess: forgotsuccess,\r\n        forgotdata: forgotdata\r\n    }\r\n}\r\n\r\nexport const userForgotFailure = (error) => {\r\n    return {\r\n        type: actionTypes.USER_FORGOT_FAILURE,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const creditBalance =  (id) => {\r\n    return dispatch => {\r\n        return LoginRegisterApi.reduxCreditBalance(id);\r\n    }\r\n}\r\n\r\nexport const creditBalanceSuccess = (CBsuccess, CBerror, CBdata) => {\r\n    return {\r\n        type: actionTypes.CREDIT_BALANCE_SUCCESS,\r\n        CBsuccess: CBsuccess,\r\n        CBerror: CBerror,\r\n        CBdata: CBdata\r\n    }\r\n}\r\n\r\nexport const creditBalanceFailure = (error) => {\r\n    return {\r\n        type: actionTypes.CREDIT_BALANCE_FAILURE,\r\n        error: error,\r\n    }\r\n}","import axios from 'axios';\r\naxios.defaults.baseURL = 'http://35.154.61.193:1337/';\r\n\r\nclass HplServices {\r\n\r\n    static getaxios(endpoint) {\r\n        return axios.get(endpoint)\r\n            .then( response => {\r\n                console.log(response.data);\r\n                return response.data;\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n            return error;\r\n        } );\r\n    }\r\n\r\n    static postaxios(endpoint, data, config) {\r\n        return axios.post(endpoint, data, config)\r\n            .then( response => {\r\n                console.log(response.data);\r\n                return response.data;\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n                throw error;\r\n        } );\r\n    }\r\n\r\n}\r\n\r\nexport default HplServices;","import store from \"../../redux/store\";\r\nimport axios from 'axios';\r\nimport {\r\n    changeName,\r\n    loginStart,\r\n    loginSuccess,\r\n    loginFail,\r\n    signupSuccess,\r\n    patientSignupSuccess,\r\n    signupFail,\r\n    userDataFailure,\r\n    userDataSuccess,\r\n    searchPatientSuccess,\r\n    searchPatientFailure,\r\n    creditPartnerOrderSuccess,\r\n    creditPartnerOrderFailure,\r\n    courseDataSuccess, \r\n    courseDataFailure,\r\n    patientOrderSuccess,\r\n    patientOrderFailure,\r\n    patientOrderStatusSuccess,\r\n    patientOrderStatusFailure,\r\n    pinSuccess,\r\n    patientInvalidLogin,\r\n    patientHistoryDataSuccess,\r\n    patientHistoryDataFailure,\r\n    pinFailure,\r\n    resetSuccess,\r\n    resetFail,\r\n    courseEWSuccess,\r\n    courseEWFailure,\r\n    creditPartnerOrderPatientHistoryDataSuccess,\r\n    creditPartnerOrderPatientHistoryDataFailure,\r\n    careerSuccess,\r\n    careerFailure,\r\n    creditpartnerPatientOrderDetailsSuccess,\r\n    creditPartnerPatientStatus,\r\n    pordermessage,\r\n    orderCompleteSuccess,\r\n    orderCompleteFailure,\r\n    apSearchSuccess,\r\n    apSearchFailure,\r\n    apSaveSuccess,\r\n    apSaveFailure,\r\n    logisticCostSuccess,\r\n    logisticCostFailure,\r\n    sampleTypeSuccess,\r\n    sampleTypeFailure,\r\n    getPAddSuccess,\r\n    getPAddFailure,\r\n    sampleTestSuccess,\r\n    sampleTestFailure,\r\n    editAddSuccess, \r\n    editAddFailure,\r\n    editOrderSuccess,\r\n    editOrderFailure,\r\n    patientUpdatedAddSuccess,\r\n    patientUpdatedAddFailure,\r\n    userEnrollDataSuccess,\r\n    userEnrollDataFailure,\r\n    userWishlistDataSuccess,\r\n    userWishlistDataFailure,\r\n    userForgotSuccess,\r\n    userForgotFailure,\r\n    CPpatientOrderStatusSuccess,\r\n    creditBalanceSuccess,\r\n    creditBalanceFailure,\r\n} from \"../../redux/actions/actions\";\r\nimport HplServices from \"../services\";\r\n\r\nclass LoginRegisterApi {\r\n\r\n    static reduxLogin(email, password, token) {\r\n\r\n        let url;\r\n        const loginData = {\r\n            email: email,\r\n            password: password,\r\n        };\r\n\r\n        if(token) {\r\n            loginData.token = token\r\n        } \r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            }\r\n        };\r\n        \r\n        if(token){\r\n        url = 'http://35.154.61.193:8090/api/auth/signin/' + token;\r\n        }\r\n        else{\r\n        url = 'http://35.154.61.193:8090/api/auth/signin';  \r\n        }\r\n\r\n        axios.post(url, loginData)\r\n            .then( response => {\r\n                let userCopy = {\r\n                    ...response.data.user\r\n                }\r\n                \r\n                if(response.data.status === \"403\"){\r\n                    store.dispatch(patientInvalidLogin(response.data.status));\r\n                }\r\n                else if(response.data.status === \"601\"){\r\n                    store.dispatch(patientInvalidLogin(response.data.status));\r\n                }\r\n                else if(response.data.status === \"200\"){\r\n                localStorage.setItem('token', response.data.accessToken);\r\n                localStorage.setItem('lhtoken', response.data.lhToken);\r\n                localStorage.setItem('user', JSON.stringify(userCopy));\r\n                localStorage.setItem('userTypeId', response.data.user.userTypeId);\r\n                store.dispatch(loginSuccess(response.data.accessToken, response.data.user, response.data.user.userTypeId));\r\n                }\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(loginFail(error.message));\r\n        } );\r\n\r\n        // HplServices.postaxios(url, loginData, config).then(response => {\r\n        //     // localStorage.setItem('token', response.data.idToken);\r\n        //     // localStorage.setItem('userId', response.data.userId);\r\n        //     store.dispatch(loginSuccess(response.accessToken, response.user, response.message));\r\n        // }).catch(err => {\r\n        //     console.log(err);\r\n        //     store.dispatch(loginFail(err.message));\r\n        // });\r\n    }\r\n\r\n    static reduxSignup(formData) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/auth/signup';\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            }\r\n        };\r\n\r\n        axios.post(url, formData)\r\n            .then( response => {\r\n                let successFlag = response.data.status === \"200\" ? true : false;\r\n                let errorFlag = response.data.status === \"400\" ? true : false;\r\n                store.dispatch(signupSuccess(successFlag, response.data.message, errorFlag));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(signupFail(error));\r\n        } );\r\n\r\n        // HplServices.postaxios(url, formData, config).then(response => {\r\n        //     // localStorage.setItem('token', response.data.idToken);\r\n        //     // localStorage.setItem('userId', response.data.userId);\r\n        //     store.dispatch(signupSuccess(response.success, response.message));\r\n        // }).catch(err => {\r\n        //     console.log(err);\r\n        //     store.dispatch(signupFail(err));\r\n        // });\r\n\r\n    }\r\n\r\n    static reduxUserCheck(userCheckForm) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/auth/checkUser';\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            }\r\n        };\r\n\r\n        let formData = new FormData(); \r\n\r\n        formData.append('mobile', '8879919770');   //append the values with key, value pair\r\n        formData.append('countryCode', '91');\r\n        formData.append('developerId', '0aea8dc0-6675-11e9-a923-1681be663d3e');\r\n\r\n        axios.post(url, userCheckForm)\r\n            .then( response => {\r\n                console.log(response);\r\n                let successFlag = response.data.code === 200 ? true : false;\r\n                let errorFlag = response.data.code === 404 ? true : false;\r\n                store.dispatch(signupSuccess(successFlag, response.data.message, errorFlag));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(signupFail(error.message));\r\n        } );\r\n\r\n    //     const data = new URLSearchParams(userCheckForm);\r\n    //     fetch(url, {\r\n    //         method: 'post',\r\n    //         body: data\r\n    //       }, config)\r\n    //   .then(res => res.json())\r\n    //   .then(\r\n    //     (result) => {\r\n    //       console.log(result);\r\n    //     },\r\n    //     // Note: it's important to handle errors here\r\n    //     // instead of a catch() block so that we don't swallow\r\n    //     // exceptions from actual bugs in components.\r\n    //     (error) => {\r\n    //         console.log(error);\r\n    //     }\r\n    //   )\r\n    }\r\n\r\n    static reduxPatientOtpRequest(patientForm) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/auth/requestOTP';\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            }\r\n        };\r\n\r\n        axios.post(url, patientForm)\r\n            .then( response => {\r\n                let successFlag = response.data.code === 200 ? true : false;\r\n                let errorFlag = response.data.code === 401 ? true : false;\r\n                store.dispatch(signupSuccess(successFlag, response.data.message, errorFlag));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(signupFail(error.message));\r\n        } );\r\n\r\n    }\r\n\r\n    static reduxPatientForgotPassword(patientForm) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/auth/requestOTPforForgotPassword';\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            }\r\n        };\r\n\r\n        axios.post(url, patientForm, config)\r\n            .then( response => {\r\n                let successFlag = response.data.status === \"200\" ? true : false;\r\n                let errorFlag = response.data.status === \"404\" ? true : false;\r\n                let invalidFlag = response.data.status === \"400\" ? true : false;\r\n                store.dispatch(signupSuccess(successFlag, response.data.message, errorFlag, invalidFlag));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(signupFail(error.message));\r\n        } );\r\n\r\n    }\r\n\r\n    static reduxPatientResetPassword(patientForm) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/auth/ResetPassword';\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            }\r\n        };\r\n\r\n        axios.post(url, patientForm, config)\r\n            .then( response => {\r\n                let successFlag = response.data.status === \"200\" ? true : false;\r\n                let errorFlag = response.data.status === \"400\" ? true : false;\r\n                store.dispatch(resetSuccess(successFlag, response.data.message, errorFlag));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(resetFail(error.message));\r\n        } );\r\n\r\n    }\r\n\r\n    static reduxPatientSignUp(patientData) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/auth/signup';\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            }\r\n        };\r\n\r\n        axios.post(url, patientData)\r\n            .then( response => {\r\n                let successFlag = response.data.status === \"200\" ? true : false;\r\n                let errorFlag = response.data.status === \"400\" ? true : false;\r\n\r\n                store.dispatch(patientSignupSuccess(successFlag, response.data.message, errorFlag));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(signupFail(error.message));\r\n        } );\r\n\r\n    }\r\n\r\n    static reduxPatientLogin(patientLoginForm) {\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            }\r\n        };\r\n\r\n        let url = 'http://35.154.61.193:8090/api/auth/signin';\r\n\r\n        axios.post(url, patientLoginForm)\r\n            .then( response => {\r\n                let userCopy = {\r\n                   ...response.data.user\r\n                }\r\n\r\n                if(response.data.status === \"403\"){\r\n                    store.dispatch(patientInvalidLogin(response.data.status));\r\n                }\r\n                else if(response.data.status === \"601\"){\r\n                    store.dispatch(patientInvalidLogin(response.data.status));\r\n                }\r\n                else if(response.data.status === \"200\"){\r\n                localStorage.setItem('token', response.data.accessToken);\r\n                localStorage.setItem('lhtoken', response.data.lhToken);\r\n                localStorage.setItem('user', JSON.stringify(userCopy));\r\n                localStorage.setItem('userTypeId', response.data.user.userTypeId);\r\n                store.dispatch(loginSuccess(response.data.accessToken, response.data.user, response.data.user.userTypeId));\r\n                }\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(loginFail(error.message));\r\n        } );\r\n    }\r\n\r\n    static reduxTestSampleDetails(patientTestDetails) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/order/saveOrder';\r\n\r\n        let token = localStorage.getItem('token');\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n\r\n        axios.post(url, patientTestDetails, config)\r\n            .then( response => {\r\n                let successFlag = response.data.status === \"200\" ? true : false;\r\n                store.dispatch(patientOrderSuccess(successFlag, response.data.message));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(patientOrderFailure(error.message));\r\n        } );\r\n\r\n    }\r\n\r\n    static reduxSearchPatient(id,data) {\r\n\r\n    let url = 'http://35.154.61.193:8090/api/data/getCreditPartnerPatientByName/'+id+'/'+data;\r\n\r\n        let token = localStorage.getItem('token');\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n\r\n        axios.get(url, config)\r\n            .then( response => {\r\n                store.dispatch(searchPatientSuccess(response.data.code === 200 ? true : false, response.data.object));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(searchPatientFailure());\r\n        } );\r\n\r\n    }\r\n\r\n    static reduxBulkTestSampleDetails(id,bulkPatientTestDetails,courierCost) {\r\n        \r\n        let url;\r\n        if(courierCost === true){\r\n            url = 'http://35.154.61.193:8090/api/order/placeBulkOrder/'+id+'?parceledByCreditPartner=1';\r\n        }\r\n        else{\r\n            url = 'http://35.154.61.193:8090/api/order/placeBulkOrder/'+id;\r\n        }\r\n\r\n        let token = localStorage.getItem('token');\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n\r\n        axios.post(url, bulkPatientTestDetails, config)\r\n            .then( response => {\r\n                let successFlag = response.data.code === 200 ? true : false;\r\n                let errorFlag = response.data.code === 400 ? true : false;\r\n                let limitError = response.data.code === 422 ? true : false;\r\n                store.dispatch(creditPartnerOrderSuccess(successFlag, errorFlag, limitError, response.data.object));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(creditPartnerOrderFailure(true));\r\n        } );\r\n\r\n    }\r\n\r\n    static reduxPinVerification(pincode) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/order/searchPincode/'+pincode;\r\n    \r\n        let token = localStorage.getItem('token');\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        axios.get(url, config)\r\n            .then( response => {\r\n                localStorage.setItem('pincode', response.data.pincode);\r\n                let successFlag = response.data.object === \"Yes\" ? true : false;\r\n                let invalidFlag = response.data.object === \"Invalid\" ? true : false;\r\n                let errorFlag = response.data.object === \"No\" ? true : false;\r\n                \r\n                store.dispatch(pinSuccess(successFlag, invalidFlag, errorFlag));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(pinFailure());\r\n        } );\r\n    \r\n    }\r\n\r\n    static reduxOrderHistory(id) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/order/getPatientsAllOrder/'+ id;\r\n    \r\n        let token = localStorage.getItem('token');\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        axios.get(url, config)\r\n            .then( response => {\r\n                store.dispatch(userDataSuccess(response.success, response.data, response.error));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(userDataFailure(error.message));\r\n        } );\r\n    }\r\n\r\n    static reduxcourseData() {\r\n\r\n        var user = JSON.parse(localStorage.getItem('user'));\r\n\r\n        let url = 'http://35.154.61.193:8090/api/trainee/getCourses/'+ user.id;\r\n    \r\n        let token = localStorage.getItem('token');\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        axios.get(url, config)\r\n            .then( response => {\r\n                store.dispatch(courseDataSuccess(response.data));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(courseDataFailure(error.message));\r\n        });\r\n    }\r\n\r\n    static reduxcourseAndWishlist(id) {\r\n\r\n        var user = JSON.parse(localStorage.getItem('user'));\r\n\r\n        let url = 'http://35.154.61.193:8090/api/trainee/getCoursesAndWishlist/'+ id;\r\n    \r\n        let token = localStorage.getItem('token');\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        axios.get(url, config)\r\n            .then( response => {\r\n                store.dispatch(courseEWSuccess(response.data));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(courseEWFailure(error.message));\r\n        });\r\n    }\r\n\r\n    static reduxcourseDataOpen() {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/auth/getCourses';\r\n    \r\n        let token = localStorage.getItem('token');\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        axios.get(url)\r\n            .then( response => {\r\n                store.dispatch(courseDataSuccess(response.data));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(courseDataFailure(error.message));\r\n        });\r\n    }\r\n\r\n    static reduxCourseEnroll(userId, courseId) {\r\n        \r\n        const coursesEnrolled = {\r\n            userId: userId,\r\n            courseId: courseId\r\n        };\r\n\r\n        let url = 'http://35.154.61.193:8090/api/trainee/enroll';\r\n    \r\n        let token = localStorage.getItem('token');\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        axios.post(url, coursesEnrolled, config)\r\n            .then( response => {\r\n                let successFlag = response.data.status === \"200\" ? true : false;\r\n                store.dispatch(userEnrollDataSuccess(successFlag , response.data.message));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(userEnrollDataFailure(error.message));\r\n        });\r\n    }\r\n\r\n    static reduxCourseWishlist(userId, courseId) {\r\n        \r\n        const coursesEnrolled = {\r\n            userId: userId,\r\n            courseId: courseId\r\n        };\r\n\r\n        let url = 'http://35.154.61.193:8090/api/trainee/wishlist';\r\n    \r\n        let token = localStorage.getItem('token');\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        axios.post(url, coursesEnrolled, config)\r\n            .then( response => {\r\n                let successFlag = response.data.status === \"200\" ? true : false;\r\n                store.dispatch(userWishlistDataSuccess(successFlag, response.data.message, response.error));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(userWishlistDataFailure(error.message));\r\n        });\r\n    }\r\n\r\n    static reduxPatientOrderList(id) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/order/getPatientsAllOrder/'+id;\r\n    \r\n        let token = localStorage.getItem('token');\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        return axios.get(url, config)\r\n            .then( response => {\r\n                let successFlag = response.data.code === 200 ? true : false;\r\n                let errorFlag = response.data.code === 400 ? true : false;\r\n                store.dispatch(patientHistoryDataSuccess(successFlag, errorFlag, response.data.object));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(patientHistoryDataFailure(error.message));\r\n        });\r\n    }\r\n\r\n    static reduxCreditPartnerOrderList(id) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/order/getCreditPartnerOrders/'+id;\r\n    \r\n        let token = localStorage.getItem('token');\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        return axios.get(url, config)\r\n            .then( response => {\r\n                let successFlag = response.data.code === 200 ? true : false;\r\n                let errorFlag = response.data.code === 400 ? true : false;\r\n                store.dispatch(patientHistoryDataSuccess(successFlag, errorFlag, response.data.object));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(patientHistoryDataFailure(error.message));\r\n        });\r\n    }\r\n    \r\n\r\n    static reduxCreditPartnerOrderPatientsList(id) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/order/getCreditPartnerOrderPatients/'+id;\r\n    \r\n        let token = localStorage.getItem('token');\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        return axios.get(url, config)\r\n            .then( response => {\r\n                let successFlag = response.data.code === 200 ? true : false;\r\n                let errorFlag = response.data.code === 400 ? true : false;\r\n                console.log(\"CreditPartnerOrderPatientsList\");\r\n                console.log(response.data.object);\r\n                store.dispatch(creditPartnerOrderPatientHistoryDataSuccess(successFlag, errorFlag, response.data.object));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(creditPartnerOrderPatientHistoryDataFailure(error.message));\r\n        });\r\n    }\r\n    \r\n\r\n    static reduxCreditPartnerPatientOrderDetails(orderId, patientId) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/order/getCreditPartnerPatientOrderDetails/'+ orderId + '/' + patientId;\r\n    \r\n        let token = localStorage.getItem('token');\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        return axios.get(url, config)\r\n            .then( response => {\r\n                let successFlag = response.data.code === 200 ? true : false;\r\n                let errorFlag = response.data.code === 400 ? true : false;\r\n                store.dispatch(creditpartnerPatientOrderDetailsSuccess(successFlag, response.data.object));\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n        });\r\n    }\r\n\r\n    static reduxPatientGetOrderStatus(billId) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/order/getOrderStatus/'+ billId;\r\n    \r\n        let token = localStorage.getItem('token');\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        return axios.get(url, config)\r\n            .then( response => {\r\n                store.dispatch(patientOrderStatusSuccess(response.data.code, null, response.data.reportDetails));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(patientOrderStatusFailure(error));\r\n        });\r\n    }\r\n\r\n    static reduxCPPatientGetOrderStatus(billId) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/order/getOrderStatus/'+ billId;\r\n    \r\n        let token = localStorage.getItem('token');\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        return axios.get(url, config)\r\n            .then( response => {\r\n                store.dispatch(CPpatientOrderStatusSuccess(response.data.code, null, response.data.reportDetails));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(patientOrderStatusFailure(error));\r\n        });\r\n    }\r\n\r\n    static reduxPatientGetOrderLogisticsStatus(awbNo) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/order/logisticsOrderStatus/'+ awbNo;\r\n    \r\n        let token = localStorage.getItem('token');\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        return axios.get(url, config)\r\n            .then( response => {\r\n                let statusArr = {id: awbNo, status: response.data.object};\r\n                Object.assign(response.data, {statusArr: statusArr});\r\n\r\n                store.dispatch(patientOrderStatusSuccess(response.data.code, statusArr, null));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(patientOrderStatusFailure(error));\r\n        });\r\n    }\r\n\r\n    static reduxCPPatientGetOrderLogisticsStatus(awbNo) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/order/logisticsOrderStatus/'+ awbNo;\r\n    \r\n        let token = localStorage.getItem('token');\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        return axios.get(url, config)\r\n            .then( response => {\r\n                let statusArr = {status: response.data.object};\r\n                Object.assign(response.data, {statusArr: statusArr});\r\n\r\n                store.dispatch(patientOrderStatusSuccess(response.data.code, statusArr, null));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(patientOrderStatusFailure(error));\r\n        });\r\n    }\r\n\r\n    static reduxCareerForm(form) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/auth/upload';\r\n\r\n        const formData = new FormData(form);\r\n        formData.append('name', form.name)\r\n        formData.append('file', form.file)\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'multipart/form-data',\r\n            }\r\n        };\r\n    \r\n        axios.post(url, formData, config)\r\n            .then( response => {\r\n                store.dispatch(careerSuccess(response.data));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(careerFailure(error));\r\n        });\r\n    }\r\n\r\n    static reduxCompleteOrder(orderId) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/order/completeOrder/'+ orderId;\r\n\r\n        let token = localStorage.getItem('token');\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        return axios.get(url, config)\r\n            .then( response => {\r\n                let successFlag = response.data.status === \"200\" ? true : false;\r\n                store.dispatch(orderCompleteSuccess(successFlag, response.data.message));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(orderCompleteFailure(error));\r\n        });\r\n    }\r\n\r\n    static reduxAdminPatientSearch(name, mobile) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/data/admin/searchPatient/'+ name + '/' + '91'+mobile;\r\n\r\n        let token = localStorage.getItem('token');\r\n\r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        axios.get(url, config)\r\n            .then( response => {\r\n                let successFlag = response.status === 200 ? true : false;\r\n                store.dispatch(apSearchSuccess(successFlag, response.data));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(apSearchFailure(error));\r\n        });\r\n    }\r\n\r\n    static reduxAdminSavePatientDetails(id, data) {\r\n\r\n        let details = Object.values(data)[0];\r\n\r\n        let url = 'http://35.154.61.193:8090/api/order/saveAdminOrder';\r\n\r\n        let token = localStorage.getItem('token');\r\n        \r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        axios.post(url, details, config)\r\n            .then( response => {\r\n                let successFlag = response.data.status === \"200\" ? true : false;\r\n                store.dispatch(apSaveSuccess(successFlag, response.data.message));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(apSaveFailure(error));\r\n        });\r\n    }\r\n\r\n    static reduxPayNowOrder(orderId, courierCost, admin) {\r\n        \r\n        let url; \r\n\r\n        if(admin === 1){\r\n            url = 'http://35.154.61.193:8090/api/order/payNow/' + orderId + '?parceledByCustomer=' + courierCost;\r\n        }\r\n        else{\r\n            url = 'http://35.154.61.193:8090/api/order/payNow/' + orderId;\r\n        }\r\n        \r\n        let token = localStorage.getItem('token');\r\n        \r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        axios.get(url, config)\r\n            .then( response => {\r\n                let successFlag = response.data.status === \"200\" ? true : false;\r\n                store.dispatch(patientOrderSuccess(successFlag, response.data.message));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(patientOrderFailure(error));\r\n        });\r\n    }\r\n\r\n    static reduxLogisticCost() {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/data/logisticCost';\r\n\r\n        let token = localStorage.getItem('token');\r\n        \r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        axios.get(url, config)\r\n            .then( response => {\r\n                let successFlag = response.status === 200 ? true : false;\r\n                store.dispatch(logisticCostSuccess(successFlag, response.data));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(logisticCostFailure(error));\r\n        });\r\n    }\r\n\r\n    static reduxSampleType() {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/data/sample';\r\n\r\n        let token = localStorage.getItem('token');\r\n        \r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        axios.get(url, config)\r\n            .then( response => {\r\n                let successFlag = response.status === 200 ? true : false;\r\n                store.dispatch(sampleTypeSuccess(successFlag, response.data));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(sampleTypeFailure(error));\r\n        });\r\n    }\r\n\r\n    static reduxSampleTest(id) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/data/sampleTest/' + id;\r\n\r\n        let token = localStorage.getItem('token');\r\n        \r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        axios.get(url, config)\r\n            .then( response => {\r\n                let successFlag = response.status === 200 ? true : false;\r\n                store.dispatch(sampleTestSuccess(successFlag, response.data));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(sampleTestFailure(error));\r\n        });\r\n    }\r\n\r\n    static reduxGetPatientAddress(userId) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/data/getPatientAddresses/' + userId;\r\n\r\n        let token = localStorage.getItem('token');\r\n        \r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        axios.get(url, config)\r\n            .then( response => {\r\n                let successFlag = response.status === 200 ? true : false;\r\n                store.dispatch(getPAddSuccess(successFlag, response.data));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(getPAddFailure(error));\r\n        });\r\n    }\r\n\r\n    static reduxSubmitEditOrder(data) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/order/editOrder';\r\n\r\n        let token = localStorage.getItem('token');\r\n        \r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        axios.post(url, data, config)\r\n            .then( response => {\r\n                let successFlag = response.data.status === \"200\" ? true : false;\r\n                store.dispatch(editOrderSuccess(successFlag, response.data.message));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(editOrderFailure(error));\r\n        });\r\n    }\r\n\r\n    static reduxPatientEditAddress(updatedAddress) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/user/updatePatientAddress';\r\n\r\n        let token = localStorage.getItem('token');\r\n        \r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        return axios.post(url, updatedAddress, config)\r\n            .then( response => {\r\n                let successFlag = response.data.status === \"200\" ? true : false;\r\n                store.dispatch(editAddSuccess(successFlag, response.data.message));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(editAddFailure(error));\r\n        });\r\n    }\r\n\r\n    static reduxGetPatientUpdatedAddress(id) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/data/getPatientAddress/' + id;\r\n\r\n        let token = localStorage.getItem('token');\r\n        \r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        return axios.get(url, config)\r\n            .then( response => {\r\n                let successFlag = response.data.status === \"200\" ? true : false;\r\n                store.dispatch(patientUpdatedAddSuccess(successFlag, response.data.data));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(patientUpdatedAddFailure(error));\r\n        });\r\n    }\r\n\r\n    static reduxUserForgotPassword(username) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/auth/forgotpassword?email=' + username;\r\n\r\n        let token = localStorage.getItem('token');\r\n        \r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        axios.get(url)\r\n            .then( response => {\r\n                let successFlag = response.status === 200 ? true : false;\r\n                store.dispatch(userForgotSuccess(successFlag, response.data));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(userForgotFailure(error));\r\n        });\r\n    }\r\n\r\n    static reduxCreditBalance(id) {\r\n\r\n        let url = 'http://35.154.61.193:8090/api/user/getUpdatedCreditAmount/' + id;\r\n\r\n        let token = localStorage.getItem('token');\r\n        \r\n        var config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token ,\r\n            }\r\n        };\r\n    \r\n        axios.get(url, config)\r\n            .then( response => {\r\n                let successFlag = response.data.status === \"200\" ? true : false;\r\n                let errorFlag = response.data.status === \"400\" ? true : false;\r\n                store.dispatch(creditBalanceSuccess(successFlag, errorFlag, response.data.data));\r\n            })\r\n            .catch( error => {\r\n                store.dispatch(creditBalanceFailure(error));\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default LoginRegisterApi;","import React, { Component } from 'react';\r\nimport { Link, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport './Login.css';\r\nimport { Button, Alert } from 'reactstrap';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\nimport LoginRegisterApi from '../../services/API/LoginRegisterApi';\r\nimport queryString from 'query-string';\r\n\r\nimport * as actions from '../../redux/actions/actions';\r\nimport { Spinner, Row, Col } from 'react-bootstrap';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      validationMessages: [],\r\n      form: this.defaultForm(),\r\n      loading: false,\r\n      visible : false\r\n    };\r\n  }\r\n\r\n\r\ndefaultForm = () => {\r\n  return {\r\n      email: '',\r\n      password: '',\r\n      username: '',\r\n  }\r\n}\r\n\r\ninputChangedHandler(e) {\r\n\r\n  const updatedForm = {\r\n    ...this.state.form,\r\n    [e.target.name]: e.target.value\r\n  }\r\n  let validationMessages = [];\r\n  this.setState({\r\n    form: updatedForm, \r\n    validationMessages\r\n  });\r\n    \r\n}\r\n\r\n\r\n  submitHandler = (event) => {\r\n    console.log(\"login clicked!\");\r\n    event.preventDefault();\r\n\r\n    let params = queryString.parse(this.props.location.search)\r\n\r\n    if(this.props.userTypeId === 1) {\r\n      this.props.onLogin(this.state.form.email, this.state.form.password)\r\n      \r\n    }\r\n    else if(this.props.userTypeId === 2) {\r\n      this.props.onPatientLogin(this.state.form.username, this.state.form.password)\r\n      \r\n    }\r\n    else {\r\n      this.props.onLogin(this.state.form.email, this.state.form.password, params.token)\r\n    }\r\n    // {\r\n    //   this.props.userTypeId === 2 ? \r\n    //   this.props.onPatientLogin(this.state.form.username, this.state.form.password) : \r\n    //   {\r\n    //     this.props.userTypeId === 3 ? this.props.onLogin(this.state.form.email, this.state.form.password, params.token) :\r\n    //   this.props.onLogin(this.state.form.email, this.state.form.password)\r\n    //   }\r\n    // }\r\n\r\n    this.setState({\r\n      visible: true\r\n    }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({\r\n          visible: false\r\n        })\r\n      }, 5000)\r\n    });\r\n    \r\n  }\r\n\r\nrender() {\r\n\r\n  if(this.props.user) {\r\n    let userId = Number(this.props.userTypeId);\r\n\r\n    if(userId === 1) {\r\n      this.props.history.push('/creditpartnerHome');\r\n    }else if(userId === 2) {\r\n      this.props.history.push('/patientHome');\r\n    }else if (userId === 3){\r\n      this.props.history.push('/traineeHome');\r\n    }else{\r\n      this.props.history.push('/adminHome');\r\n    }\r\n  }\r\nreturn (\r\n  <React.Fragment>\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n          <div class=\"col-md-6 offset-md-3 text-center\">\r\n            <div className=\"container-box text-center\">\r\n              <div class=\"logo\">\r\n                <img src={logo} className=\"tthomelogo\"/>\r\n              </div>\r\n              {/* <h4>Centre for Oncopathology </h4> */}\r\n              <h2>Sign In</h2>\r\n              <div className=\"login-box-inner\">\r\n                <form onSubmit={this.submitHandler}>\r\n                  <div class=\"form-group\">\r\n                  {\r\n                    this.props.userTypeId === 2 ? \r\n                    <span class=\"has-float-label\">\r\n                      <input class=\"form-control\" id=\"username\" name=\"username\" type=\"text\" placeholder=\"Mobile No.\" value={this.state.form.username} onChange={(event) => this.inputChangedHandler(event)}/>\r\n                      <label for=\"username\" className=\"patientLabel\">Mobile No.</label>\r\n                    </span>\r\n                    :\r\n                    <span class=\"has-float-label\">\r\n                      <input class=\"form-control\" id=\"username\" name=\"email\" type=\"text\" placeholder=\"Username\" value={this.state.form.email} onChange={(event) => this.inputChangedHandler(event)}/>\r\n                      <label for=\"username\" className=\"patientLabel\">Username</label>\r\n                    </span>\r\n                  }\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <span class=\"has-float-label\">\r\n                      <input class=\"form-control\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"Password\" value={this.state.form.password} onChange={(event) => this.inputChangedHandler(event)}/>\r\n                      <label for=\"password\" className=\"patientLabel\">Password</label>\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"register-text forgotpass-text\" style={{textAlign: 'left'}}><span>\r\n                  <Link to=\"/forgotpassword\">Forgot Password ?</Link></span></div>\r\n                  <Button className=\"button-lightred\" size=\"lg\" style={{width: '190px'}} >Submit</Button>{' '}\r\n                  {this.props.loading ? \r\n                                <Row>\r\n                                <Col md={12} className=\"mt-3 text-center\">\r\n                                    <Spinner animation=\"border\" variant=\"danger\" className=\"text-center\" />\r\n                                </Col>\r\n                                </Row>\r\n                                 : null}\r\n\r\n                  {\r\n                    this.props.userTypeId === 1 ? \r\n                    null\r\n                    :\r\n                    <div className=\"register-text\">\r\n                      <span>New User ? &nbsp;</span>\r\n\r\n                      {\r\n                        this.props.userTypeId === 2 ? \r\n                      <span><Link to=\"/patient-request-otp\">Register here.</Link></span> : \r\n                      <span><Link to=\"/register-form\">Register here.</Link></span>\r\n                      }\r\n\r\n                    </div>\r\n                  }\r\n                  \r\n                  {this.props.invalidData === \"403\" ?\r\n                    <Alert className=\"mt-3\" color=\"danger\" isOpen={this.state.visible}>Invalid Credentials</Alert>\r\n                    : null }\r\n                  {this.props.invalidData === \"601\" ?\r\n                    <Alert className=\"mt-3\" color=\"danger\" isOpen={this.state.visible}>User not registered. Please register.</Alert>\r\n                    : null }\r\n                  <h5>{this.props.success}</h5>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n      </div>\r\n      {/* <div className=\"privacy-text\"><span>Terms</span> | <span>Privacy</span></div> */}\r\n    </div>\r\n    </React.Fragment>\r\n);\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      loading: state.loading,\r\n      error: state.error,\r\n      success: state.success,\r\n      userTypeId: state.userTypeId,\r\n      isAuthenticated: state.token !== null,\r\n      token: state.token,\r\n      user: state.user,\r\n      invalidData: state.invalidData\r\n      // isAuthenticated: state.token !== null,\r\n      // authRedirectPath: state.auth.authRedirectPath\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      onLogin: (username, password, token) => dispatch(actions.login(username, password, token)),\r\n      onPatientLogin: (username, password) => dispatch(actions.patientLogin(username, password)),\r\n      // onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Col, Row, Button } from 'reactstrap';\r\n\r\nconst UserForgotSuccess = (props) => (\r\n    <Container className=\"text-center\">\r\n        <Row className=\"pt-3 pb-3\">\r\n          <Col><p>{props.message}</p></Col>\r\n        </Row>\r\n        <Row className=\"pt-3 pb-3\">\r\n          <Col><p className=\"red-font raleway-light font-size\">{props.forgotdata}<br />\r\n          <br /></p></Col>\r\n        </Row>\r\n        {/* <Row className=\"pb-3\">\r\n          <Col><p className=\"red-font raleway-light \">To learn more about how Tata Trusts collects, uses, shares and protects your <br /> personal data please read Tata Trusts' Privacy Policy. </p><br />\r\n          </Col>\r\n        </Row> */}\r\n        {/* <Row>\r\n            <Col>\r\n                <Link to={{pathname: \"/resetpassword\", \r\n                state: {\r\n                    username: props.username\r\n                }\r\n  }}><Button className=\"button-lightred mt-0 mb-5\" size=\"md\" style={{width: '160px', fontSize: '18px'}} >Next</Button></Link>\r\n            </Col>\r\n        </Row> */}\r\n    </Container>\r\n);\r\n\r\nexport default UserForgotSuccess;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport { Button } from 'reactstrap';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\nimport './ForgotPassword.css';\r\nimport { connect } from 'react-redux';\r\nimport UserForgotSuccess from './ForgotPasswordSuccess';\r\n\r\nclass ForgotPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      };\r\n  }\r\n\r\n  handleForgotPassword = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      username: event.target.value,\r\n    });\r\n  }\r\n\r\n  forgotPasswordSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n      this.props.onForgotPassword(this.state.username);\r\n  }\r\n\r\nrender() {\r\nreturn (\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 offset-md-3 text-center\">\r\n        <div className=\"container-box text-center\">\r\n          <div class=\"logo\">\r\n            <img src={logo} className=\"tthomelogo\"/>\r\n          </div>\r\n          {/* <h4>Centre for Oncopathology </h4> */}\r\n          {this.props.forgotsuccess ? \r\n          <UserForgotSuccess username={this.state.username} forgotdata={this.props.forgotdata}/> :\r\n          <React.Fragment>\r\n          <h2>Forgot Password</h2>\r\n          \r\n          {/* <div className=\"register-text\"><span>Already a member ? &nbsp;</span><span>\r\n            <Link to=\"/login\">Sign In.</Link></span></div> */}\r\n\r\n          <div className=\"login-box-inner\">\r\n            <form onSubmit={this.forgotPasswordSubmitHandler}>\r\n            <div class=\"form-group\">\r\n              <span class=\"has-float-label\">\r\n                <input required class=\"form-control\" id=\"username\" name=\"username\" type=\"email\" placeholder=\"Username\"\r\n                  value={this.state.username} onChange={(event) => this.handleForgotPassword(event)}/>\r\n                <label for=\"username\" className=\"patientLabel\">Username</label>\r\n              </span>\r\n            </div>\r\n            \r\n            <Button className=\"button-lightred\" size=\"lg\" style={{width: '190px'}}>Next</Button>{' '}\r\n\r\n            {/* <div className=\"register-text\"><span>New User ? &nbsp;</span><span>\r\n            <Link to=\"/register\">Register here.</Link></span></div> */}\r\n            </form>\r\n          </div>\r\n          </React.Fragment>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n    {/* <div className=\"privacy-text\"><span>Terms</span> | <span>Privacy</span></div> */}\r\n  </div>\r\n);\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      userTypeId: state.userTypeId,\r\n      forgotsuccess: state.forgotsuccess,\r\n      forgotdata: state.forgotdata,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      onForgotPassword: (username) => dispatch(actions.userForgotPassword(username))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPassword);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Col, Row, Button } from 'reactstrap';\r\n\r\nconst UserResetSuccess = (props) => (\r\n    <Container className=\"text-center\">\r\n        <Row className=\"pt-3 pb-3\">\r\n          <Col><p className=\"red-font raleway-light font-size\">{props.resetmessage}<br />Kindly Log In.\r\n           <br /></p></Col>\r\n        </Row>\r\n        {/* <Row className=\"pb-3\">\r\n          <Col><p className=\"red-font raleway-light\">To learn more about how Tata Trusts collects, uses, shares and protects your <br /> personal data please read Tata Trusts' Privacy Policy. </p><br />\r\n          </Col>\r\n        </Row> */}\r\n        <Row>\r\n            <Col>\r\n                <Link to=\"/login\"><Button className=\"button-lightred mt-0\" size=\"md\" style={{width: '160px'}} >Log In</Button>{' '}</Link>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n);\r\n\r\nexport default UserResetSuccess;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Alert } from 'reactstrap';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport UserResetSuccess from './ResetPasswordSuccess';\r\nimport queryString from 'query-string';\r\n\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        form: this.defaultForm(),\r\n        resetPasswordCheck: false,\r\n        visible: false,\r\n      };\r\n  }\r\n\r\n  defaultForm = () => {\r\n    return {\r\n        username: 'sanchita.kadge@adrosonic.com',\r\n        password: '',\r\n        confirm_password: '',\r\n        verifyKey: '8d3391d9-26c2-4df9-b269-8f50d5ccde29',\r\n    }\r\n  }\r\n\r\n  handleResetPassword(e){\r\n    let validationMessages = [];\r\n\r\n    const updatedForm = {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value\r\n      }\r\n      this.setState({form: updatedForm, validationMessages});\r\n  }\r\n\r\n  resetPasswordSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const updatedPatientForm = {\r\n        ...this.state.form,\r\n    }\r\n\r\n    if(this.state.form.password === this.state.form.confirm_password){\r\n      this.setState({\r\n        resetPasswordCheck: false\r\n      })\r\n      this.props.onResetPassword(updatedPatientForm);\r\n    }\r\n    else{\r\n      this.setState({\r\n        resetPasswordCheck: true\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      visible: true\r\n    }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({\r\n          visible: false\r\n        })\r\n      }, 5000)\r\n  });\r\n    \r\n  }\r\n\r\nrender() {\r\nreturn (\r\n  <div class=\"container\">\r\n  <div class=\"row\">\r\n      <div class=\"col-md-6 offset-md-3 text-center\">\r\n        <div className=\"container-box text-center\">\r\n          <div class=\"logo\">\r\n            <img src={logo} className=\"tthomelogo\"/>\r\n          </div>\r\n          {/* <h4>Centre for Oncopathology </h4> */}\r\n            {this.props.resetsuccess ?\r\n            <UserResetSuccess resetmessage={this.props.resetmessage}/> :  \r\n            <React.Fragment>\r\n              <h2>Reset Password</h2>\r\n              \r\n                <div className=\"login-box-inner\">\r\n                <form onSubmit={this.resetPasswordSubmitHandler}>\r\n                <div class=\"form-group\">\r\n                    <span class=\"has-float-label\">\r\n                      <input required class=\"form-control\" id=\"username\" name=\"username\" type=\"email\" placeholder=\"Username\" \r\n                      value={this.state.form.username} onChange={(event) => this.handleResetPassword(event)} />\r\n                      <label for=\"username\" className=\"patientLabel\">Username</label>\r\n                    </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <span class=\"has-float-label\">\r\n                      <input required class=\"form-control\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"Password\" \r\n                      value={this.state.form.password} onChange={(event) => this.handleResetPassword(event)} />\r\n                      <label for=\"password\" className=\"patientLabel\">Password</label>\r\n                    </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <span class=\"has-float-label\">\r\n                      <input required class=\"form-control\" id=\"confirm_password\" name=\"confirm_password\" type=\"password\" placeholder=\"Confirm Password\" \r\n                      value={this.state.form.confirm_password} onChange={(event) => this.handleResetPassword(event)} />\r\n                      <label for=\"confirm_password\" className=\"patientLabel\">Confirm Password</label>\r\n                    </span>\r\n                </div>\r\n                {/* <div class=\"form-group\">\r\n                    <span class=\"has-float-label\">\r\n                      <input required class=\"form-control\" id=\"verifyKey\" name=\"verifyKey\" type=\"number\" placeholder=\"OTP\" \r\n                      value={this.state.form.verifyKey} onChange={(event) => this.handleResetPassword(event)}/>\r\n                      <label for=\"verifyKey\">OTP</label>\r\n                    </span>\r\n                </div> */}\r\n\r\n                {this.state.resetPasswordCheck === true ? \r\n                  <Alert className=\"mt-4\" color=\"danger\" isOpen={this.state.visible}>Password don't match.</Alert>\r\n                  : null\r\n                  }\r\n\r\n                  <Button className=\"button-lightred\" size=\"lg\" style={{width: '190px'}}>Submit</Button>{' '}\r\n                   {this.props.reseterror ? \r\n                    <Alert className=\"mt-4\" color=\"danger\" isOpen={this.state.visible}>{this.props.resetmessage}</Alert>\r\n                    : null\r\n                   }\r\n\r\n                </form>\r\n              </div>\r\n            </React.Fragment>\r\n            }\r\n            </div>\r\n            \r\n            </div>\r\n        </div>\r\n        {/* <div className=\"privacy-text\"><span>Terms</span> | <span>Privacy</span></div> */}\r\n      </div>\r\n);\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userTypeId: state.userTypeId,\r\n        resetsuccess: state.resetsuccess,\r\n        resetmessage: state.resetmessage,\r\n        reseterror: state.reseterror,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n        onResetPassword: (patientForm) => dispatch(actions.patientResetPassword(patientForm))\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPassword);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\nimport './Registration.css';\r\n\r\nimport doc from '../../assets/Doc.PNG';\r\nimport patient from '../../assets/Patient.PNG';\r\nimport trainee from '../../assets/Trainee.PNG';\r\n\r\nimport * as actions from '../../redux/actions/actions';\r\n\r\nclass RegisterUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n\r\nrender() {\r\nreturn (\r\n    <React.Fragment>\r\n    <div class=\"row\">\r\n        <div class=\"col-12 text-center\">\r\n            <span style={{fontSize: '20px'}}>Who are you ?</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"row mb-5 users-avatar\">\r\n        <div class=\"col text-center\" onClick={() => this.props.onSetUser(2)}>\r\n            <Link to=\"/patient-login\">\r\n                <img src={patient} />\r\n                <div style={{fontSize: '20px'}} className=\"red-font\">Patient</div>\r\n            </Link>\r\n        </div>\r\n        \r\n        <div class=\"col text-center\" onClick={() => this.props.onSetUser(1)}>\r\n            <Link to=\"/login\">\r\n                <img src={doc} />\r\n                <div style={{fontSize: '20px'}} className=\"red-font\">Credit Partner</div>\r\n            </Link>\r\n        </div>\r\n\r\n        {/* <div class=\"col text-center\">\r\n            <Link to=\"/register-form\">\r\n                <img src={trainee} />\r\n                <div style={{fontSize: '20px'}} className=\"red-font\">Trainee</div>\r\n            </Link>\r\n        </div> */}\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-12 col-md-8\">\r\n            {/* <span style={{fontSize: '15px'}}>Difficult to decide ? Read more about choosing your role here.</span> */}\r\n        </div>\r\n        \r\n    </div>\r\n    </React.Fragment>\r\n);\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userTypeId: state.userTypeId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSetUser: (userId) => dispatch(actions.setUserType(userId))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterUser);","import React from 'react';\r\nimport { Row, Col, Button, Container, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\n\r\nconst ModalComponent = (props) => (\r\n    <Modal isOpen={props.modal} toggle={props.togglemodal} className={props.className}>\r\n    <ModalHeader toggle={props.togglemodal}>{props.title}</ModalHeader>\r\n    <ModalBody>\r\n      {props.children}\r\n    </ModalBody>\r\n    </Modal>\r\n);\r\n\r\nexport default ModalComponent;","export const convertToDateFormat = (isoDate) => {\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    var dateValue = new Date(isoDate);\r\n\r\n    let date = dateValue.getDate();\r\n\r\n    let month = monthNames[dateValue.getMonth() + 1];\r\n\r\n    let year = dateValue.getFullYear();\r\n\r\n    let separator = ' ';\r\n\r\n\r\n    let lastdate = date.toString().slice(-1);\r\n    let extended;\r\n\r\n\r\n\r\n    switch (lastdate) {\r\n\r\n\r\n        case \"1\":\r\n            extended = 'st';\r\n            break;\r\n        case \"2\":\r\n            extended = 'nd';\r\n            break;\r\n        case \"3\":\r\n            extended = 'rd';\r\n            break;\r\n        default:\r\n            extended = 'th';\r\n            break;\r\n    }\r\n\r\n\r\n\r\n    return `${date}${extended}${separator}${month},${separator}${year}`\r\n\r\n\r\n}\r\n\r\nexport const convertToDateYYYYMMDD = (fulldate) => {\r\n    // var dateValue = new Date(fulldate);\r\n\r\n    var t = fulldate.split(/[-T:.+]/);\r\n    var d = new Date(t[0], t[1]-1, t[2], t[3], t[4], t[5]);\r\n    var actiondate = d.getDate();\r\n    var actionmonth = d.getMonth() + 1;\r\n    if(actionmonth < 10) { actionmonth = '0' + actionmonth;}\r\n    var actionyear = d.getFullYear();\r\n\r\n    // let date = dateValue.getDate();\r\n    // let month = dateValue.getMonth() + 1;\r\n    // if(month < 10) { month = '0' + month;}\r\n    // let year = dateValue.getFullYear();\r\n\r\n    let separator = '-';\r\n\r\n    return `${actionyear}${separator}${actionmonth}${separator}${actiondate}`\r\n\r\n}\r\n\r\nexport const convertToDateDDMMYYYY = (fulldate) => {\r\n  // var dateValue = new Date(fulldate);\r\n\r\n  var t = fulldate.split(/[-T:.+]/);\r\n  var d = new Date(t[0], t[1]-1, t[2], t[3], t[4], t[5]);\r\n  var actiondate = d.getDate();\r\n  var actionmonth = d.getMonth() + 1;\r\n  if(actionmonth < 10) { actionmonth = '0' + actionmonth;}\r\n  var actionyear = d.getFullYear();\r\n\r\n  // let date = dateValue.getDate();\r\n  // let month = dateValue.getMonth() + 1;\r\n  // if(month < 10) { month = '0' + month;}\r\n  // let year = dateValue.getFullYear();\r\n\r\n  let separator = '-';\r\n\r\n  return `${actiondate}${separator}${actionmonth}${separator}${actionyear}`\r\n\r\n}\r\n\r\nexport const convertDOB = (fulldate) => {\r\n  var dateValue = new Date(fulldate);\r\n\r\n  let date = dateValue.getDate();\r\n  let month = dateValue.getMonth() + 1;\r\n  if(month < 10) { month = '0' + month;}\r\n  let year = dateValue.getFullYear();\r\n\r\n  let separator = '-';\r\n\r\n  return `${year}${separator}${month}${separator}${date}`\r\n\r\n}\r\n\r\nexport const sortByColumn = (a, colIndex, reverse) => {\r\n    if (reverse == true) {\r\n      a.sort(sortFunction).reverse();\r\n    } else {\r\n      a.sort(sortFunction);\r\n    }\r\n  \r\n    function sortFunction(a, b) {\r\n      if (a[colIndex] === b[colIndex]) {\r\n        return 0;\r\n      } else {\r\n        return (a[colIndex] < b[colIndex]) ? -1 : 1;\r\n      }\r\n    }\r\n    return a;\r\n  }\r\n\r\nexport const convertToTimeHHMMSS = (fulldate) => {\r\n  // var timeValue = new Date(fulldate);\r\n\r\n  var t = fulldate.split(/[-T:.+]/);\r\n  var timeValue = new Date(t[0], t[1]-1, t[2], t[3], t[4], t[5]);\r\n\r\n  let timeHour = timeValue.getHours();\r\n  if(timeHour < 10) { timeHour = '0' + timeHour;} \r\n\r\n  let timeMin = timeValue.getMinutes();\r\n  if(timeMin < 10) { timeMin = '0' + timeMin;} \r\n\r\n  let timeSec = timeValue.getSeconds();\r\n  if(timeSec < 10) { timeSec = '0' + timeSec;}\r\n\r\n  let separator = ':';\r\n\r\n  return `${timeHour}${separator}${timeMin}${separator}${timeSec}`\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Col, Row, Button } from 'reactstrap';\r\n\r\nconst RegisterSuccess = (props) => (\r\n    <Container className=\"text-center\">\r\n        <Row className=\"pt-3 pb-3\">\r\n          <Col><h5 className=\"red-font font-size\">Thank you, Registration process completed. <br /> Kindly click the link provided in the email to login.</h5></Col>\r\n        </Row>\r\n        {/* <Row>\r\n            <Col>\r\n                <Link to=\"/login\"><Button className=\"button-lightred mt-0\" size=\"md\" style={{width: '160px'}} >Log In</Button>{' '}</Link>\r\n            </Col>\r\n        </Row> */}\r\n    </Container>\r\n);\r\n\r\nexport default RegisterSuccess;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, Alert } from 'reactstrap';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\nimport './Registration.css';\r\nimport ModalComponent from '../../components/modal/modal';\r\nimport DatePicker from \"react-date-picker\";\r\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\nimport { convertDOB } from '../functions';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport RegisterSuccess from './RegisterSuccess';\r\nimport RegisterUser from './RegisterUser';\r\n\r\nclass RegisterForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      form: this.defaultForm(),\r\n      visible: false,\r\n      modal: false,\r\n      validationMessages: null\r\n    };\r\n  }\r\n\r\n\r\ndefaultForm = () => {\r\n  return {\r\n      userTypeId: this.props.userTypeId ? Number(this.props.userTypeId) : 3,\r\n      firstName: '',\r\n      lastName: '',\r\n      countryCode: '91',\r\n      contactNo: '',\r\n      gender:'',\r\n      emailId: '',\r\n      address: '',\r\n      dob: '',\r\n      state: '',\r\n      city: '',\r\n      pin:'',\r\n      password: '',\r\n      age: '22',\r\n  }\r\n}\r\n\r\ninputChangedHandler(e) {\r\n  let validationMessages = [];\r\n\r\n    if (e.target.type === \"number\") {\r\n      e.target.value = e.target.value.slice(0,10);\r\n    } \r\n    \r\n    if(e.target.type === \"number\" && e.target.value.length < 10){\r\n      validationMessages.push(\"Required 10 digits number, match requested format.\");\r\n      this.setState({validationMessages});\r\n    }\r\n    else {\r\n      validationMessages = [];\r\n      this.setState({validationMessages});\r\n    }\r\n\r\n  const updatedForm = {\r\n    ...this.state.form,\r\n    [e.target.name]: e.target.value\r\n  }\r\n  this.setState({form: updatedForm, validationMessages});\r\n    \r\n}\r\n\r\nhandleChange(date) {\r\n  //let convertedDate = convertToDateYYYYMMDD(date);\r\n  const updatedFormDate = {\r\n    ...this.state.form,\r\n    dob: date\r\n  }\r\n  let validationMessages = [];\r\n  this.setState({\r\n    form: updatedFormDate, validationMessages\r\n  });\r\n}\r\n\r\n\r\n  submitHandler = (event) => {\r\n    console.log(\"login clicked!\");\r\n    event.preventDefault();\r\n\r\n    const updatedFormDateandAddress = {\r\n      designation:\"Mr\",\r\n      firstName: this.state.form.firstName,\r\n      lastName: this.state.form.lastName,\r\n      emailId: this.state.form.emailId,\r\n      contactNo: this.state.form.contactNo,\r\n      countryCode: this.state.form.countryCode,\r\n      userTypeId: this.props.userTypeId ? Number(this.props.userTypeId) : 3,\r\n      gender:this.state.form.gender,\r\n      age: this.state.form.age,\r\n      password:this.state.form.password,\r\n      dob: convertDOB(this.state.form.dob),\r\n      address: {\r\n        line1: this.state.form.address,\r\n        line2:\"Marol\",\r\n        city:this.state.form.city,\r\n        state:this.state.form.state,\r\n        pincode:this.state.form.pin\r\n      }\r\n    }\r\n    this.props.onSignUp(updatedFormDateandAddress);\r\n\r\n    this.setState({\r\n      visible: true\r\n    }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({\r\n          visible: false\r\n        })\r\n      }, 5000)\r\n    });\r\n\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n\r\n  checkRegisterFormDetails = () => {\r\n\r\n    let flag = null;\r\n    if(flag || flag === null){\r\n            if(this.state.form.firstName !== \"\" && this.state.form.lastName !== \"\" && this.state.form.emailId !== \"\"\r\n            && this.state.form.contactNo !== \"\" && this.state.form.gender !== \"\" && this.state.form.dob !== \"\" && this.state.form.password !== \"\" \r\n            && this.state.form.countryCode !== \"\" && this.state.form.address !== \"\" && this.state.form.state !== \"\" && this.state.form.city !== \"\"\r\n            && this.state.form.pin !== \"\") {\r\n                flag = true;\r\n            }\r\n            else {\r\n                flag = false;\r\n            }\r\n    }\r\n    console.log(flag);\r\n    return flag;\r\n}\r\n\r\nrender() {\r\n\r\nreturn (\r\n  \r\n  <div class=\"container\">\r\n  <div class=\"row\">\r\n  <div class=\"col-12 text-center\">\r\n    <div className=\"register-box\">\r\n      <div class=\"logo\">\r\n        <img src={logo} className=\"tthomelogo\"/>\r\n      </div>\r\n      {/* <h4 className=\"red-font raleway-light\">Centre for Oncopathology </h4> */}\r\n      \r\n      <div className=\"register-container-box login-box-inner\">\r\n      {this.props.success ? \r\n        <RegisterSuccess message = {this.props.message} /> \r\n      :\r\n      <React.Fragment>\r\n        <div class=\"row\">\r\n            <div class=\"col-11 register-heading\">\r\n                <span>Register</span>\r\n                <span>Already have an account ?</span><Link to=\"/login\"><span>Sign In</span></Link>\r\n            </div>\r\n        {/* <div class=\"col-1\">\r\n            <Link to=\"/register\" ><div>X</div></Link>\r\n        </div> */}\r\n        </div>\r\n        <div class=\"row\">\r\n      <div class=\"col-12 text-center mb-5\">\r\n          <span style={{fontSize: '18px'}}>Enter Your Details</span>\r\n      </div>\r\n      {/* <p className=\"red-font ml-4 mb-4\">*Fields are mandatory</p> */}\r\n  </div>     \r\n    <Form>\r\n      <Row form>\r\n        <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n          <FormGroup>\r\n            <Label for=\"fname\"><span className=\"starSize\">*</span>First Name</Label>\r\n            <Input type=\"text\" maxLength={25} value={this.state.form.firstName} name=\"firstName\" placeholder=\"First Name\" onChange={(event) => this.inputChangedHandler(event)} required/>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col md={3} className=\"ml-md-3 ml-lg-5 mr-md-3 mr-lg-5\">\r\n          <Label for=\"lname\"><span className=\"starSize\">*</span>Last Name</Label>\r\n          <FormGroup>\r\n            <Input type=\"text\" maxLength={25} value={this.state.form.lastName} name=\"lastName\" placeholder=\"Second Name\" onChange={(event) => this.inputChangedHandler(event)} required/>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col md={3} className=\"ml-md-3 ml-lg-5 \">\r\n          <FormGroup>\r\n            <Label for=\"mobile\"><span className=\"starSize\">*</span>Mobile Number</Label>\r\n            <Row>\r\n            <Col xs={2} sm={2} md={2} lg={2} className=\"text-center\" style={{paddingRight: '0px'}}>\r\n            <Input type=\"text\" value={this.state.form.countryCode} name=\"countryCode\" onChange={(event) => this.inputChangedHandler(event)} required style={{padding: '0px'}}/>\r\n            </Col>\r\n            <Col xs={10} sm={10} md={10} lg={10} className=\"contactInitialTextNumber\">\r\n            <Input type=\"number\" value={this.state.form.contactNo} name=\"contactNo\" placeholder=\"Mobile Number\" onChange={(event) => this.inputChangedHandler(event)} required/>\r\n            </Col>\r\n            </Row>\r\n            <p className=\"red-font mt-3\">{this.state.validationMessages}</p>\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row form>\r\n      <Col sm={3} className=\"ml-md-3 ml-lg-3 mr-md-3 mr-lg-5\">\r\n      <FormGroup tag=\"fieldset\">\r\n        <legend className=\"col-form-label\"><span className=\"starSize\">*</span>Gender :</legend>\r\n        <Col>\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input type=\"radio\" name=\"gender\" value=\"M\" checked={this.state.form.gender === \"M\"} onChange={(event) => this.inputChangedHandler(event)}/>{' '}\r\n              Male\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input type=\"radio\" name=\"gender\" value=\"F\" checked={this.state.form.gender === \"F\"} onChange={(event) => this.inputChangedHandler(event)}/>{' '}\r\n             Female\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup check >\r\n            <Label check>\r\n              <Input type=\"radio\" name=\"gender\" value=\"Other\" checked={this.state.form.gender === \"Other\"} onChange={(event) => this.inputChangedHandler(event)}/>{' '}\r\n              Other\r\n            </Label>\r\n          </FormGroup>\r\n        </Col>\r\n      </FormGroup>\r\n      </Col>\r\n      <Col md={3} className=\"ml-md-3 ml-lg-5 mr-md-3 mr-lg-5\">\r\n          <FormGroup>\r\n            <Label for=\"email\"><span className=\"starSize\">*</span>Email</Label>\r\n            <Input type=\"email\" maxLength={45} value={this.state.form.emailId} name=\"emailId\" placeholder=\"Email Address\" onChange={(event) => this.inputChangedHandler(event)} required/>\r\n          </FormGroup>\r\n      </Col>\r\n      <Col md={3} className=\"ml-md-3 ml-lg-5 mr-md-3 mr-lg-5\">\r\n          <FormGroup>\r\n            <Label for=\"address\"><span className=\"starSize\">*</span>Street Address</Label>\r\n            <Input type=\"text\" maxLength={45} value={this.state.form.address} name=\"address\" placeholder=\"Street Address\" onChange={(event) => this.inputChangedHandler(event)}/>\r\n          </FormGroup>\r\n      </Col>\r\n      </Row>\r\n      <Row form>\r\n      <Col md={3} className=\"ml-md-3 ml-lg-3 mr-md-3 mr-lg-5\">\r\n      <Label for=\"state\"><span className=\"starSize\">*</span>Date of Birth :</Label>\r\n      <FormGroup className=\"mt-1\">\r\n        <DatePicker\r\n          value={this.state.form.dob}\r\n          onChange={(date) => this.handleChange(date)}\r\n          maxDate={new Date()}\r\n          // className=\"datepicker\"\r\n          // dateFormat=\"yyyy-MM-dd\"\r\n        />\r\n        \r\n          {/* <Input\r\n            type=\"date\"\r\n            name=\"dob\"\r\n            id=\"exampleDate\"\r\n            placeholder=\"date placeholder\"\r\n            value={this.state.form.dob}\r\n            onChange={(event) => this.inputChangedHandler(event)}\r\n          /> */}\r\n      </FormGroup>\r\n      </Col>\r\n        <Col md={3} className=\"ml-md-3 ml-lg-5\">\r\n        <FormGroup>\r\n            <Label for=\"state\"><span className=\"starSize\">*</span>Password</Label>\r\n            <Input type=\"password\" maxLength={15} value={this.state.form.password} name=\"password\" placeholder=\"Password\" onChange={(event) => this.inputChangedHandler(event)} required/>\r\n          </FormGroup>\r\n      </Col>\r\n      </Row>\r\n      <Row form>\r\n        <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n          <FormGroup>\r\n            <Label for=\"state\"><span className=\"starSize\">*</span>State</Label>\r\n            <Input type=\"text\" maxLength={45} value={this.state.form.state} name=\"state\" placeholder=\"State\" onChange={(event) => this.inputChangedHandler(event)}/>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col md={3} className=\"ml-md-3 ml-lg-5 mr-md-3 mr-lg-5\">\r\n          <Label for=\"city\"><span className=\"starSize\">*</span>City</Label>\r\n          <FormGroup>\r\n            <Input type=\"text\" maxLength={45} value={this.state.form.city} name=\"city\" placeholder=\"City\" onChange={(event) => this.inputChangedHandler(event)}/>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col md={3} className=\"ml-md-3 ml-lg-5 \">\r\n          <FormGroup>\r\n            <Label for=\"pin\"><span className=\"starSize\">*</span>Pincode</Label>\r\n            <Input type=\"text\" maxLength={6} value={this.state.form.pin} name=\"pin\" placeholder=\"Pincode\" onChange={(event) => this.inputChangedHandler(event)}/>\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Button disabled={this.checkRegisterFormDetails(this.state.form) ? false : true} className=\"button-lightred mt-0\" size=\"md\" style={{width: '120px'}} onClick={this.toggleModal}>Submit</Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {this.checkRegisterFormDetails(this.state.form) ?\r\n      null :\r\n      <h5 style={{color: 'red'}} className=\"mt-3\">Fields marked with  <span className=\"starSize\"> * </span>  are required.</h5>\r\n      }\r\n\r\n      {this.props.error ?\r\n      <Alert className=\"mt-4\" color=\"danger\" isOpen={this.state.visible}>Email Id / Mobile No. already exists.</Alert>\r\n      : null\r\n      }\r\n    </Form> \r\n\r\n    <ModalComponent modal={this.state.modal} toggleModal={this.toggleModal}>\r\n      <h5>Are you sure you what to submit the form ?</h5>\r\n      <Button color=\"success\" onClick={this.submitHandler}>Yes</Button>\r\n      <Button color=\"danger\" onClick={this.toggleModal} className=\"ml-3\">No</Button>\r\n    </ModalComponent>\r\n\r\n    </React.Fragment>\r\n      }\r\n        {/* <RegisterForm /> */}\r\n        {/* <RegisterSuccess /> */}\r\n      </div>\r\n      \r\n\r\n    </div>\r\n    \r\n  </div>\r\n</div>\r\n  {/* <div className=\"privacy-text\"><span>Terms</span> | <span>Privacy</span></div> */}\r\n</div>\r\n  \r\n \r\n);\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      userTypeId: state.userTypeId,\r\n      success: state.success,\r\n      message: state.message,\r\n      error: state.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      onSignUp: (formData) => dispatch(actions.signup(formData))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'reactstrap';\r\n\r\nimport RegisterUser from './RegisterUser';\r\nimport RegisterForm from './RegisterForm';\r\n\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\nimport './Registration.css';\r\nimport RegisterSuccess from './RegisterSuccess';\r\n\r\nclass Registration extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n\r\n\r\nrender() {\r\nreturn (\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 text-center\">\r\n            <div className=\"register-box\">\r\n              <div class=\"logo\">\r\n                <img src={logo} className=\"tthomelogo\"/>\r\n              </div>\r\n              {/* <h4 className=\"red-font raleway-light\">Centre for Oncopathology </h4> */}\r\n\r\n              <div className=\"register-container-box login-box-inner\">\r\n                <div class=\"row\">\r\n                    {/* <div class=\"col-11 register-heading\">\r\n                        <span>Register</span>\r\n                        <span>Already have an account ?</span><Link to=\"/login\"><span>Sign In</span></Link>\r\n                    </div> */}\r\n                <div class=\"col-12 text-right\">\r\n                    <Link to=\"/\" ><div>X</div></Link>\r\n                </div>\r\n                </div>\r\n                    <RegisterUser userSelection={this.handleUserSelection} />\r\n                {/* <RegisterSuccess /> */}\r\n              </div>\r\n\r\n\r\n            </div>\r\n            \r\n          </div>\r\n      </div>\r\n      {/* <div className=\"privacy-text\"><span>Terms</span> | <span>Privacy</span></div> */}\r\n    </div>\r\n);\r\n}\r\n}\r\n\r\n\r\nexport default Registration;","import React, {Component} from 'react';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\nimport './navbar.css';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n  DropdownItem\r\n} from 'reactstrap';\r\n\r\nclass NavbarComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          isOpen: false,\r\n          activeTabClassName: window.location.pathname,\r\n          openMenu: false\r\n        };\r\n      }\r\n      toggle = () => {\r\n        this.setState({\r\n          isOpen: !this.state.isOpen\r\n        });\r\n      }\r\n\r\n      toggleMobileMenu = () => {\r\n        this.setState({\r\n          openMenu: !this.state.openMenu\r\n        });\r\n      }\r\n      \r\n\r\n    render() {\r\n      let isAuthenticated = localStorage.getItem('userTypeId') !== null;\r\n      let userTypeId = localStorage.getItem('userTypeId');\r\n\r\n\r\n        return(\r\n            <React.Fragment>\r\n              <nav class=\"menu\" onClick={this.toggleMobileMenu}>\r\n  <ol className={this.state.openMenu ? 'mobile_menu' : ''}>\r\n  {userTypeId === \"2\" ?\r\n      <li class=\"menu-item\"><a href=\"/patientHome\" className={(this.state.activeTabClassName === \"/patientHome\") ? \"active\" : \"\"}>Home</a></li>\r\n:null}\r\n{userTypeId === \"1\" ?\r\n  <li class=\"menu-item\"><a href=\"/creditpartnerHome\" className={(this.state.activeTabClassName === \"/creditpartnerHome\") ? \"active\" : \"\"}>Home</a></li>\r\n:null}\r\n{userTypeId === \"3\" ?\r\n  <li class=\"menu-item\"><a href=\"/traineeHome\" className={(this.state.activeTabClassName === \"/traineeHome\") ? \"active\" : \"\"}>Home</a></li>\r\n:null}\r\n    <li class=\"menu-item\"><a href=\"/\" className={(this.state.activeTabClassName === \"/\") ? \"active\" : \"\"}>About Us</a>\r\n    <ol class=\"sub-menu\">\r\n      <li class=\"menu-item\"><a href=\"/aboutCOP\">About COP</a></li>\r\n    </ol>\r\n    </li>\r\n    <li class=\"menu-item\">\r\n      <a href=\"/joinTeam\" className={(this.state.activeTabClassName === \"/joinTeam\") || (this.state.activeTabClassName === \"/careers\") ? \"active\" : \"\"}>Team</a>\r\n    </li>\r\n    <li class=\"menu-item\">\r\n      <a href=\"#\" className={(this.state.activeTabClassName === \"/testslist\") || (this.state.activeTabClassName === \"/antibodies\")? \"active\" : \"\"}>Lab Services</a>\r\n      <ol class=\"sub-menu\">\r\n        <li class=\"menu-item\"><a href=\"/testslist\">List of Tests Offered</a></li>\r\n        <li class=\"menu-item\"><a href=\"/antibodies\">List of Antibodies</a></li>\r\n        {!isAuthenticated ?\r\n        <li class=\"menu-item\"><a href=\"/register\">Order a Test</a></li>\r\n        : null\r\n        }\r\n      </ol>\r\n    </li>\r\n    {(userTypeId === \"3\" || userTypeId === null) ? \r\n    <li class=\"menu-item\">\r\n      <a href=\"/trainingAcademy\" className={(this.state.activeTabClassName === \"/trainingAcademy\") ? \"active\" : \"\"}>Training Academy</a>\r\n      {/* <ol class=\"sub-menu\">\r\n        <li class=\"menu-item\"><a href=\"/courses-offered\">Courses Offered</a></li>\r\n        <li class=\"menu-item\"><a href=\"#0\">Timetable</a></li>\r\n        {!isAuthenticated ?\r\n        <li class=\"menu-item\"><a href=\"/login\">Trainee Sign In</a></li>\r\n        : null\r\n        }\r\n      </ol> */}\r\n    </li> : null\r\n    }\r\n    {/* <li class=\"menu-item\"><a href=\"#0\">Accreditations</a></li> */}\r\n    <li class=\"menu-item\">\r\n      <a href=\"#0\" className={(this.state.activeTabClassName === \"/researchMaterial\") ? \"active\" : \"\"}>Insights</a>\r\n      <ol class=\"sub-menu\">\r\n        {/* <li class=\"menu-item\"><a href=\"#0\">Case of the Week</a></li> */}\r\n        <li class=\"menu-item\"><a href=\"/researchMaterial\">Research Material</a></li>\r\n      </ol>\r\n    </li>\r\n    <li class=\"menu-item\"><a href=\"/contactUs\" className={(this.state.activeTabClassName === \"/contactUs\") ? \"active\" : \"\"}>Contact Us</a></li>\r\n    \r\n  </ol>\r\n</nav>\r\n        </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavbarComponent;","import React, {Component} from 'react';\r\nimport './home.css';\r\nimport { Row, Col, Container, Card, Spinner, Button } from 'reactstrap';\r\n\r\nclass HomePageSection1 extends Component {\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n            <Container>\r\n            <Row>\r\n                <Col md={{ size:12 }}>\r\n                  <p className=\"homeHeader\">{this.props.title} \r\n                  <a href=\"/aboutCOP\">\r\n          <Button className=\"button-lightred ml-3\" size=\"md\" style={{width: '110px', marginTop: '-10px'}} >...Know More</Button>\r\n          </a></p>\r\n                </Col>\r\n            </Row>\r\n            </Container>\r\n            <hr/>\r\n            <Container>\r\n            <p className=\"homeSubHeader mt-5\">Key Objectives</p>\r\n            <Row className=\"mb-5\"> \r\n              {this.props.homekey ? this.props.homekey.map((data) => {\r\n                  return <Col lg={4} md={4} sm={12} xs={12}>\r\n                  <Card className=\"homeKeyCard text-center\">\r\n                     <p>{data.key_title}</p>\r\n                     <hr/>\r\n                     <p className=\"mt-4\">{data.key_content}</p>\r\n                  </Card>\r\n                </Col>\r\n                }) : <Spinner color=\"danger\" />\r\n              }\r\n            </Row>\r\n            </Container>\r\n            <hr/>\r\n            <Container>\r\n            <p className=\"homeSubHeader mt-5\">Values</p>\r\n            <Row className=\"mt-4 mb-5\">\r\n              {this.props.homevalue ? this.props.homevalue.map((data) => {\r\n                  return <Col lg={3} md={6} sm={12} xs={12}>\r\n                    <Card className=\"valuesCard\">\r\n                        <Row>\r\n                            <Col className=\"homeValueNo\" xs={2}>{data.value_number}</Col>\r\n                            <Col className=\"homeValue pt-2\" xs={10}>{data.value_text}</Col>\r\n                        </Row>\r\n                    </Card>\r\n                    </Col>\r\n                }) : <Spinner color=\"danger\" />\r\n              }\r\n            </Row>\r\n            </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePageSection1;\r\n","import React, {Component} from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport './footer.css';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n               <Container fluid noGutters={true}>\r\n                   <Row className=\"footerbg\">\r\n                       <Col md={3}>\r\n                         <p className=\"footerSubTitle\">\r\n                         Copyright 2019 Alamelu Charitable Foundation\r\n                           {/* Copyright &#169; 2019. All Rights Reserved. */}\r\n                         </p>\r\n                       </Col>\r\n                       {/* <Col md={2}>\r\n                         <p className=\"footerTitle\"></p>\r\n                       </Col> */}\r\n                       <Col md={6} className=\"text-center\">\r\n                         <p className=\"footerSubTitle\">\r\n                         <a href=\"https://tatatrustbucket.s3.ap-south-1.amazonaws.com/tatatrustspdf/Legal+disclaimer.pdf\" target=\"_blank\">Legal Disclaimer</a> | \r\n                         <a href=\"/contactUs\">Contact Us</a> | \r\n                         <a href=\"/careers\">Career</a></p>\r\n                       </Col>\r\n                       {/* <Col md={1}> */}\r\n                         {/* <p className=\"footerSubTitle\">FOLLOW US</p> */}\r\n                       {/* </Col> */}\r\n                       <Col md={3}>\r\n                         {/* <a href=\"https://www.facebook.com/TataTrusts/\" target=\"_blank\"><div className=\"social-icons-ui\"><i class=\"fa fa-2x fa-facebook\" aria-hidden=\"true\"></i></div></a>\r\n                         <a href=\"https://www.youtube.com/channel/UCJZegu67KvGLUpxKleMDTLA\" target=\"_blank\"><div className=\"social-icons-ui\"><i class=\"fa fa-2x fa-youtube-play\" aria-hidden=\"true\"></i></div></a>\r\n                         <a href=\"https://twitter.com/tatatrusts\" target=\"_blank\"><div className=\"social-icons-ui\"><i class=\"fa fa-2x fa-twitter\" aria-hidden=\"true\"></i></div></a> */}\r\n                         <a target=\"_blank\" href=\"https://www.adrosonic.com\"><p className=\"poweredText\">Powered By ADROSONIC<sup>®</sup></p></a>\r\n                       </Col>\r\n                   </Row>\r\n               </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport redLogo from '../../assets/TataTrustsNewLogo.png';\r\nimport './subFooter.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass SubFooter extends Component {\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n               {/* <Container fluid>\r\n                   <Row className=\"mt-5 mb-4\">\r\n                       <Col md={3} className=\"text-center mt-4\">\r\n                          <img src={redLogo} className=\"tthomelogo\"/>\r\n                          <p className=\"mt-3 subFooterLogoText\"></p>\r\n                       </Col>\r\n                       <Col md={3}>\r\n                         <p className=\"ml-4 subFooterListHeader\">MORE ABOUT US</p>\r\n                         <hr/>\r\n                         <ul className=\"subFooterList\">\r\n                             <li><Link to={\"/\"}>About Us</Link></li>\r\n                             <li><Link to={\"/contactUs\"}>Contact Us</Link></li>\r\n                             <li><Link to={\"/careers\"}>Careers</Link></li>\r\n                             <li>Media</li>\r\n                             <li>Accreditation</li>\r\n                         </ul>\r\n                       </Col>\r\n                       <Col md={3}>\r\n                          <p className=\"ml-4 subFooterListHeader\">LINKS</p>\r\n                          <hr/>\r\n                          <ul className=\"subFooterList\">\r\n                            <li>Our Partners</li>\r\n                            <li>Our Services</li>\r\n                            <li><Link to={\"/researchMaterial\"}>Research Material</Link></li>\r\n                          </ul>\r\n                       </Col>\r\n                       <Col md={3}>\r\n                         \r\n                       </Col>\r\n                   </Row>\r\n               </Container> */}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SubFooter;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nimport * as actions from '../../redux/actions/actions';\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount () {\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render () {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React from 'react';\r\nimport { Row, Col, Button, Container } from 'reactstrap';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\nimport LogoutComponent from '../../containers/logout/logout';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TitlebarComponent = (props) => (\r\n     <React.Fragment>\r\n       <Container fluid>\r\n        <Row noGutters={true}>\r\n          <Col xs={12} sm={6} lg={4} className=\"mt-2 mb-2\"></Col>\r\n          <Col xs={12} sm={6} lg={4} className=\"text-center mt-1 mb-1\">\r\n          <Link to=\"/\"><img src={logo} className=\"tthomelogo\"/></Link>\r\n          </Col>\r\n          {/* <Col xs=\"12 pl-3\" lg=\"2\" className=\"text-center mb-1 pr-3 text-lg-right\"><span id=\"demo-2\" className=\"navSearch mt-lg-3\"><input type=\"Search\" /></span> </Col> */}\r\n          <Col xs={12} sm={12} lg={4} className=\"text-center mt-2 pr-3 mb-2 text-lg-right\">\r\n          {!props.loggedinpatient ?\r\n          <React.Fragment>\r\n          <a href=\"/register\">\r\n          <Button className=\"button-lightred mt-3\" size=\"md\" style={{width: '150px'}} >Order a Test</Button>{' '}\r\n          </a>\r\n          {/* <a href=\"/antibodies\">\r\n          <Button className=\"button-lightred mt-3\" size=\"md\" style={{width: '150px'}} >List of Antibodies</Button>{' '}\r\n          </a> */}\r\n          </React.Fragment>\r\n          : \r\n          <a href=\"/logout\">\r\n          <div className=\"mr-5 mt-3 mb-3 red-font\" style={{fontSize: '18px', fontWeight: '600'}}>Logout</div>\r\n          </a>\r\n         }\r\n        </Col>\r\n        </Row>\r\n        {/* <Row>\r\n          <Col className=\"text-right mb-3\">\r\n          <span className=\"mr-5 mb-3\">12-09-19 V-3.5</span>\r\n          </Col>\r\n        </Row> */}\r\n        </Container>\r\n      </React.Fragment>\r\n);\r\n\r\nexport default TitlebarComponent;","import React, {Component} from 'react';\r\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\r\n\r\nclass PaginationComponent extends Component {\r\n    render() {\r\n        let currentPage = this.props.currentPage;\r\n        return(\r\n            <React.Fragment>\r\n      \r\n        <div className=\"pagination-wrapper\">\r\n          \r\n          <Pagination aria-label=\"Page navigation example\">\r\n            \r\n            <PaginationItem disabled={currentPage <= 0}>\r\n              \r\n              <PaginationLink\r\n                onClick={e => this.props.handleClick(e, currentPage - 1)}\r\n                previous\r\n                href=\"#\"\r\n              />\r\n              \r\n            </PaginationItem>\r\n\r\n            {[...Array(this.props.pagesCount)].map((page, i) => \r\n              <PaginationItem active={i === currentPage} key={i}>\r\n                <PaginationLink onClick={e => this.props.handleClick(e, i)} href=\"#\" style={{zIndex: '0'}}>\r\n                  {i + 1}\r\n                </PaginationLink>\r\n              </PaginationItem>\r\n            )}\r\n\r\n            <PaginationItem disabled={currentPage >= this.props.pagesCount - 1}>\r\n              \r\n              <PaginationLink\r\n                onClick={e => this.props.handleClick(e, currentPage + 1)}\r\n                next\r\n                href=\"#\"\r\n              />\r\n              \r\n            </PaginationItem>\r\n            \r\n          </Pagination>\r\n          \r\n        </div>\r\n\r\n      </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PaginationComponent;","import React, {Component} from 'react';\r\nimport { Container, Table } from 'reactstrap';\r\nimport { Spinner, Row, Col } from 'reactstrap';\r\nimport { InputGroup, InputGroupText, InputGroupAddon, Input } from 'reactstrap';\r\nimport Footer from '../../components/footer/footer';\r\nimport TitlebarComponent from '../../components/navbar/titlebar';\r\nimport Navbar from '../../components/navbar/navbar';\r\nimport HomeApi from '../../services/API/HomeApi';\r\nimport SubFooter from '../../components/subFooter/subFooter';\r\nimport { sortByColumn } from '../functions';\r\nimport PaginationComponent from '../../components/pagination/pagination';\r\n\r\nclass TestsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          testtableheader: [],\r\n          testtabledata: [],\r\n          loading: false,\r\n          filter: null,\r\n          toggle: false,\r\n          activeColumn: 0,\r\n          lastActiveColumn: 0,\r\n          currentPage: 0,\r\n        }\r\n        this.pageSize = 10;\r\n    }\r\n\r\n    componentDidMount(){\r\n      HomeApi.getTestListContent().then(res => {\r\n        console.log(res);\r\n        this.setState({ \r\n            testtableheader: res[0].listoftestsheaders,\r\n            testtabledata: res[0].listoftestsoffereddata,\r\n            loading: false,\r\n            filter: null\r\n         });\r\n      });\r\n    }\r\n\r\n    updateSearch = (inputValue) => {\r\n      let filter = this.state.filter;\r\n\r\n      this.setState({\r\n          filter: inputValue\r\n      });\r\n    }\r\n\r\n    handleSearchChange = (event) => {\r\n        this.updateSearch(event.target.value);\r\n    }\r\n\r\n    filter = (data) => {\r\n      if (!this.state.filter) {\r\n        return data;\r\n      }\r\n        return data.filter((data) => data.test_name.toLowerCase().indexOf(this.state.filter.toLowerCase()) >=0 ||\r\n                                        data.department.toLowerCase().indexOf(this.state.filter.toLowerCase()) >= 0 ||\r\n                                        data.test_spec.toLowerCase().indexOf(this.state.filter.toLowerCase()) >= 0 ||\r\n                                        data.test_charge.toString().indexOf(this.state.filter) >= 0\r\n    )\r\n    }\r\n\r\n    handleClick = (title, key) => {\r\n      let arrayCopy = [...this.state.testtabledata];\r\n    if(key === 0 || key === 2 || key === 4){\r\n      if (this.state.activeColumn === key) {\r\n        let toggle = !this.state.toggle\r\n        this.setState({\r\n          toggle: toggle,\r\n          activeColumn: key,\r\n          testtabledata: sortByColumn(arrayCopy, title, toggle)\r\n        })\r\n      } else {\r\n        this.setState({\r\n          activeColumn: key,\r\n          testtabledata: sortByColumn(arrayCopy, title, false)\r\n        })\r\n      }\r\n    }\r\n    }\r\n    handlePatientTrackClick = (e, index) => {\r\n    \r\n      e.preventDefault();\r\n  \r\n      this.setState({\r\n        currentPage: index\r\n      });\r\n      \r\n    }\r\n\r\n\r\n    render() {\r\n\r\n      const { currentPage } = this.state;\r\n      const paginationArray = [];\r\n      const paginationNumberArray = [];\r\n\r\n      if(this.state.testtabledata) {\r\n        this.state.testtabledata.map((data) => {\r\n          return paginationNumberArray.push(data) \r\n        })\r\n\r\n        this.pagesCount = Math.ceil(paginationNumberArray.length / this.pageSize);\r\n\r\n        paginationNumberArray.map((el, key) => {\r\n          el[\"srno\"] = key + 1;\r\n        })\r\n      }\r\n\r\n      let isAuthenticated = localStorage.getItem('token') ? true : false;\r\n\r\n        let list = <Spinner animation=\"border\" variant=\"danger\" />\r\n        if (!this.state.loading) {\r\n            list = <Table className=\"testlistTable\" striped responsive>\r\n            <thead>\r\n              <tr>\r\n                {this.state.testtableheader ? this.state.testtableheader.map((data, key) => {\r\n                    return <th onClick={() => this.handleClick(data.table_sort_name, key)} className=\"cursor\">{data.table_header}{(key === 0 || key === 2 || key === 4) ? (this.state.toggle && this.state.activeColumn === key) ? \"↓\": \"↑\" : \"\"}</th>\r\n                }) : <Spinner color=\"danger\" />\r\n              }\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.testtabledata ? this.filter(this.state.testtabledata).slice(\r\n              currentPage * this.pageSize,\r\n              (currentPage + 1) * this.pageSize\r\n            ).map((data) => {\r\n                  return  <tr>\r\n                            <td>{data.test_name}</td>\r\n                            {/* <td>{data.test_id}</td> */}\r\n                            <td>{data.department}</td>\r\n                            <td>{data.test_spec}</td>\r\n                            <td>{data.test_charge}</td>\r\n                            {/* <td>{data.test_duration}</td> */}\r\n                          </tr>\r\n                }) : <Spinner color=\"danger\" />\r\n              }\r\n            </tbody>\r\n          </Table>\r\n        }\r\n        return(\r\n          <React.Fragment>\r\n            <TitlebarComponent loggedinpatient={isAuthenticated} />\r\n               <Navbar />\r\n               <Container style={{marginBottom: '180px'}}>\r\n               <Row className=\"mt-5\">\r\n                 <Col><h2>Lists of Tests Offered</h2>\r\n                 </Col>\r\n               </Row>\r\n               <Row className=\"mt-5\">\r\n                 <Col md=\"3\">\r\n                 <InputGroup size=\"lg\">\r\n                  <InputGroupAddon addonType=\"prepend\">Search</InputGroupAddon>\r\n                  <Input value={this.state.filter} onChange={this.handleSearchChange} type=\"text\" className=\"coursesSearch\"/>\r\n                </InputGroup>\r\n                 </Col>\r\n                 <Col md=\"9\" className=\"text-right\">\r\n                <p>Please find our Test Requisition Form&nbsp;\r\n                <a href=\"https://tatatrustbucket.s3.ap-south-1.amazonaws.com/tatatrustspdf/Test+Requisition+Form.pdf\" target=\"_blank\">\r\n                here</a>\r\n                </p>\r\n\r\n                <p>For discounted pricing, please see instructions&nbsp;\r\n                <a href=\"https://tatatrustbucket.s3.ap-south-1.amazonaws.com/tatatrustspdf/Discounted+pricing+application+.pdf\" target=\"_blank\">\r\n                here</a>\r\n                </p>\r\n\r\n                <p>For details on sample collection, please refer our primary sample collection manual&nbsp;\r\n                <a href=\"https://tatatrustbucket.s3.ap-south-1.amazonaws.com/tatatrustspdf/Primary+Sample+Collection+Manual_13_01_20v1.pdf\" target=\"_blank\">\r\n                here</a>\r\n                </p>\r\n                \r\n                 </Col>\r\n               </Row>\r\n               <Row className=\"mt-5 mb-5\">\r\n                 <Col className=\"text-center\">\r\n                 {list} \r\n                 </Col>\r\n               </Row>\r\n               <PaginationComponent currentPage={this.state.currentPage} handleClick={this.handlePatientTrackClick} pagesCount={this.pagesCount} />\r\n             </Container>\r\n             {/* <hr/>\r\n             <SubFooter /> */}\r\n               <Footer />\r\n          </React.Fragment> \r\n        )\r\n    }\r\n}\r\n\r\nexport default TestsList;\r\n","import React, {Component} from 'react';\r\nimport Navbar from '../../components/navbar/navbar';\r\nimport HomePageSection1 from '../homePageSection1/homeSection1';\r\nimport Footer from '../../components/footer/footer';\r\nimport SubFooter from '../../components/subFooter/subFooter';\r\n\r\nimport HomeApi from '../../services/API/HomeApi';\r\nimport { Spinner, Container } from 'react-bootstrap';\r\nimport TitlebarComponent from '../../components/navbar/titlebar';\r\nimport TestsList from '../testsList/testsList';\r\n\r\nclass HomeContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: null,\r\n            loading: true,\r\n            tatatruststitle: null,\r\n            tatatrustssubtitle: null,\r\n            content: null,\r\n            abouttitle: null,\r\n            aboutsubtitle: null,\r\n            aboutcontent: [],\r\n            servicecontent: [],\r\n            hometeamtitle: null,\r\n            hometeambuttontext: null, \r\n            hometeamcontent: [],\r\n            homekey: [],\r\n            homevalue: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        HomeApi.getHomeContent().then(res => {\r\n            console.log(res);\r\n            if(res.message !== \"Network Error\" ) {\r\n            this.setState({ \r\n                title: res[0].home_title,\r\n                homevalue: res[0].homevalues,\r\n                homekey: res[0].homekeys,\r\n                tatatruststitle: res[0].tatatrusts_title,\r\n                tatatrustssubtitle: res[0].tatatrusts_sub_title,\r\n                content: res[0].home_content,\r\n                loading: false,\r\n             });\r\n            }\r\n          });\r\n\r\n        // HomeApi.getAboutUsContent().then( data => {\r\n        //     console.log(data);\r\n        //     this.setState({\r\n        //         abouttitle: data[1].aboutus_title,\r\n        //         aboutsubtitle: data[1].aboutus_sub_title,\r\n        //         aboutcontent: data[1].about_id,\r\n        //         loading: false,\r\n        //     });\r\n        // });\r\n\r\n        HomeApi.getServiceContent().then( data => {\r\n            this.setState({\r\n                servicecontent: data,\r\n                loading: false,\r\n            });\r\n        });\r\n\r\n        // HomeApi.getHomeTeamContent().then( data => {\r\n        //     console.log(data);\r\n        //     this.setState({\r\n        //         hometeamtitle: data[0].hometeam_title,\r\n        //         hometeambuttontext: data[0].hometeam_button_text,\r\n        //         hometeamcontent: data[0].hometeam_newId,\r\n        //         loading: false,\r\n        //     });\r\n        // });\r\n    }\r\n\r\n\r\n    render() {\r\n        let isAuthenticated = localStorage.getItem('token') ? true : false;\r\n\r\n        let home = <Spinner animation=\"border\" variant=\"danger\" />\r\n        if (!this.state.loading) {\r\n            home = <React.Fragment>\r\n                    <HomePageSection1 {...this.state} />\r\n            </React.Fragment>\r\n        }\r\n        return(\r\n\r\n            this.state.title !== null && this.state.homevalue.length !== 0 && this.state.homekey.length !== 0 && this.state.tatatruststitle !== null \r\n            && this.state.tatatrustssubtitle !== null && this.state.content !== null ? \r\n            <React.Fragment>\r\n               <TitlebarComponent loggedinpatient={isAuthenticated} />\r\n               <Navbar />\r\n                    {home}\r\n               {/* <hr/>\r\n               <SubFooter /> */}\r\n               <Footer />\r\n            </React.Fragment>\r\n            : \r\n            <Container>\r\n              <h2 className=\"text-center mt-5\">The site can not be reached. \r\n              Please check your internet connection or try after connecting to a different network. </h2>\r\n            </Container>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default HomeContainer;\r\n\r\n","import axios from 'axios';\r\n\r\nclass MediaApi {\r\n\r\n    static getMediaContent() {\r\n        return axios.get('/media')\r\n            .then( response => {\r\n                console.log(response.data);\r\n                return response.data;\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n                return error;\r\n        } );\r\n    };\r\n\r\n\r\n\r\n}\r\n\r\nexport default MediaApi;\r\n","import React, {Component} from 'react';\r\nimport './media.css';\r\nimport { Row, Col, Container } from 'reactstrap';\r\nimport Navbar from '../../components/navbar/navbar';\r\n\r\nimport { Carousel, Spinner } from 'react-bootstrap';\r\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\r\nimport dummyImg from '../../assets/dummy.jpg';\r\nimport MediaApi from '../../services/API/MediaApi';\r\n\r\n\r\nimport { convertToDateFormat } from '../functions';\r\n\r\nclass Media extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        MediaApi.getMediaContent().then(res => {\r\n            console.log(res);\r\n            this.setState({ \r\n                mediaYoutubeVideoLink: res[0].media_youtube_video_link,\r\n                mediaEventtypes: res[0].mediaeventtypes,\r\n                mediaNewsTypes: res[0].medianewstypes,\r\n                loading: false\r\n             });\r\n             \r\n          });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar/>\r\n                <Container className=\"container-box mt-3 media-background mb-3\">\r\n                    <Row className=\"pt-3 pl-3 pr-3 pb-0\">\r\n                        <Col md={10}>\r\n                            <h1 className=\"red-font\">Social</h1>\r\n                        </Col>\r\n                        <Col md={2} className=\"mt-3\">\r\n                            <h5>10th April 2019</h5>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"p-3\">\r\n                        <Col md={4}>\r\n                        <a class=\"twitter-timeline\" data-width=\"300\" data-height=\"500\" data-theme=\"light\" data-link-color=\"#E95F28\" href=\"https://twitter.com/tatatrusts?ref_src=twsrc%5Etfw\">Tweets by tatatrusts</a>\r\n                        </Col>\r\n                        <Col md={4} className=\"mt-3\">\r\n                        <h5>Upcoming Events</h5>\r\n                        <div className=\"events-timeline\">\r\n                        {this.state.mediaEventtypes ? this.state.mediaEventtypes.map((type) => {\r\n                            return <Row className=\"mb-3 pr-0 pr-md-3\">\r\n                            <Col>\r\n                            <Card body className=\"media-card\">\r\n                                <CardTitle><span>{type.media_event_title}</span><span className=\"pull-right\">{convertToDateFormat(type.media_event_date)}</span></CardTitle>\r\n                                <CardText>{type.media_event_content}</CardText>\r\n                                <p className=\"text-right red-font mb-0\">Read More</p>\r\n                            </Card>\r\n                            </Col>\r\n                            </Row>\r\n                            }) : <Spinner color=\"danger\"></Spinner>\r\n                        }\r\n                        \r\n                        </div>\r\n                        </Col>\r\n                        <Col md={4} className=\"mt-3\">\r\n                        <Row>\r\n                            <Col>\r\n                            <Card body className=\"media-card p-0 carousel-card\">\r\n                            <Carousel controls={false}>\r\n                                <Carousel.Item>\r\n                                <img\r\n                                    className=\"d-block w-100\"\r\n                                    src={dummyImg}\r\n                                    alt=\"First slide\"\r\n                                />\r\n                                </Carousel.Item>\r\n                                <Carousel.Item>\r\n                                <img\r\n                                    className=\"d-block w-100\"\r\n                                    src={dummyImg}\r\n                                    alt=\"Third slide\"\r\n                                />\r\n                                </Carousel.Item>\r\n                                <Carousel.Item>\r\n                                <img\r\n                                    className=\"d-block w-100\"\r\n                                    src={dummyImg}\r\n                                    alt=\"Third slide\"\r\n                                />\r\n                                </Carousel.Item>\r\n                                </Carousel>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <p className=\"mt-3 pl-3 pr-3\">\r\n                                        Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.\r\n                                        </p>\r\n                                        <p className=\"text-right red-font mb-0 pl-3 pr-3\">Read More</p>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        </Col>\r\n                    </Row>   \r\n                </Container>\r\n\r\n\r\n                <Container className=\"container-box mt-5 news-background mb-3\">\r\n                    <Row className=\"pt-3 pl-3 pr-3 pb-0\">\r\n                        <Col md={2}>\r\n                            <h1 className=\"red-font\">News |</h1>\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <h5 className=\"mt-3\">News from around the globe</h5>\r\n                        </Col>\r\n                        <Col md={2} className=\"mt-3\">\r\n                            <h5>10th April 2019</h5>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"p-3\">\r\n                        <Col md={7}>\r\n                        <iframe className=\"youtube-iframe\" width=\"600\" height=\"315\"\r\n                                src={this.state.mediaYoutubeVideoLink}>\r\n                        </iframe>\r\n                        </Col>\r\n                        <Col md={5} className=\"mt-3\">\r\n                        <div className=\"events-timeline\">\r\n                        {this.state.mediaNewsTypes ? this.state.mediaNewsTypes.map((type) => {\r\n                            return <Row className=\"mb-3 pr-0 pr-md-3\">\r\n                            <Col>\r\n                            <Card body className=\"media-card\">\r\n                                <CardTitle><span>{type.media_news_title}</span><span className=\"pull-right\">{convertToDateFormat(type.media_news_date)}</span></CardTitle>\r\n                                <CardText>{type.media_news_content}</CardText>\r\n                                <p className=\"text-right red-font mb-0\">Read More</p>\r\n                            </Card>\r\n                            </Col>\r\n                            </Row> \r\n                            }) : <Spinner color=\"danger\"></Spinner>\r\n                        }\r\n                        </div>\r\n                        </Col>\r\n                    </Row>   \r\n                </Container>\r\n\r\n               \r\n                \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Media;\r\n","import React from 'react';\r\nimport { Col, Collapse } from 'reactstrap';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nclass TeamToggle extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {collapse: this.props.key === 0 ? true : false};\r\n    }\r\n\r\n    toggleArrow = () => {\r\n      this.setState({ collapse: !this.state.collapse });\r\n    }\r\n    \r\n    render() {\r\n\r\n      return (\r\n      <Col lg={4} md={6} sm={12} xs={12}>\r\n            <Card className=\"teamCard\">\r\n              <Card.Img variant=\"top\" src={this.props.data.teamtype_img.url} style={{height: '190px', width: '70%', margin: 'auto'}}/>\r\n              <Card.Body className=\"text-center\">\r\n                <Card.Title>{this.props.data.teamtype_name}</Card.Title>\r\n               <Collapse toggler=\"togglerinner\" isOpen={this.state.collapse}>\r\n               <p style={{textAlign: 'justify'}}>{this.props.data.team_collapse}</p>\r\n               </Collapse>\r\n               <div id=\"togglerinner\" onClick={this.toggleArrow}>{this.state.collapse ? \r\n               <i class=\"fa fa-angle-double-up fa-2x\"></i> : <i class=\"fa fa-angle-double-down fa-2x\"></i>} \r\n               </div>\r\n              </Card.Body>\r\n            </Card>\r\n        </Col>\r\n      );\r\n\r\n    }\r\n}\r\n  \r\nexport default TeamToggle;\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport Navbar from '../../components/navbar/navbar';\r\nimport Footer from '../../components/footer/footer';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Spinner, UncontrolledCollapse } from 'reactstrap';\r\nimport { Card, Button, Collapse } from 'react-bootstrap';\r\nimport './team.css';\r\nimport team from '../../assets/homeSec3.jpg';\r\nimport SubFooter from '../../components/subFooter/subFooter';\r\nimport HomeApi from '../../services/API/HomeApi';\r\nimport TitlebarComponent from '../../components/navbar/titlebar';\r\nimport TeamToggle from './teamToggle';\r\n\r\n\r\nclass JoinTeam extends Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        teamtitle: null,\r\n        teamsubtitle: null,\r\n        teamcontent: [],\r\n        open: false,\r\n        loading: false,\r\n      }\r\n    }\r\n\r\n    componentDidMount(){\r\n      HomeApi.getTeamContent().then(data => {\r\n        this.setState({ \r\n            teamtitle: data[0].team_title,\r\n            teamsubtitle: data[0].team_sub_title,\r\n            teamcontent: data,\r\n         });\r\n      });\r\n    }\r\n\r\n    toggleArrow = (key) => {\r\n      switch(key) {\r\n        case key:\r\n          this.setState(prevState => ({\r\n              arrow: !prevState.arrow\r\n          }));\r\n          break;\r\n      }\r\n    }\r\n\r\n    render() {\r\n      let isAuthenticated = localStorage.getItem('token') ? true : false;\r\n       console.log(this.state.teamcontent);\r\n      const { open } = this.state;\r\n      \r\n    return(\r\n    <React.Fragment>\r\n      <TitlebarComponent loggedinpatient={isAuthenticated} />\r\n        <Navbar />\r\n        <Container>\r\n        <p className=\"teamHeader m-4\">Teams</p>\r\n        {/* <p className=\"teamSubHeader mt-5\">Directors</p> */}\r\n        {this.state.loading ? <Spinner color=\"danger\" /> :\r\n          this.state.teamcontent ? this.state.teamcontent.map((data, key) => \r\n          <React.Fragment>\r\n          <Row>\r\n            <Col xs={12} className=\"text-center\">\r\n              <p className=\"teamSubHeader mt-3\">{data.team_title}</p>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n          {data.teammember_id ? data.teammember_id.map((item) => {\r\n            return <TeamToggle data={item} key={key}/>\r\n          }) : null}\r\n          </Row>\r\n          </React.Fragment>\r\n          ) : null\r\n        }\r\n        {/* <p className=\"teamSubHeader mt-5\">Technical Experts</p> */}\r\n        <Row>\r\n          <Col lg={12} md={12} sm={12} xs={12} className=\"text-center mb-3\">\r\n                <a href=\"/careers\"><Button className=\"button-lightred\" size=\"lg\" style={{width: '190px'}} >Join Our Team</Button>{' '}\r\n                </a>\r\n          </Col>\r\n        </Row>\r\n        </Container>\r\n        {/* <hr/>\r\n        <SubFooter /> */}\r\n        <Footer />\r\n    </React.Fragment>\r\n    )\r\n    }\r\n}\r\n\r\nexport default JoinTeam;\r\n\r\n","import React, {Component} from 'react';\r\nimport Navbar from '../../components/navbar/navbar';\r\nimport Footer from '../../components/footer/footer';\r\nimport { Container, Row, Col, Card, CardBody } from 'reactstrap';\r\nimport SubFooter from '../../components/subFooter/subFooter';\r\nimport HomeApi from '../../services/API/HomeApi';\r\nimport TitlebarComponent from '../../components/navbar/titlebar';\r\n\r\nclass CareerNew extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let isAuthenticated = localStorage.getItem('token') ? true : false;\r\n        return(\r\n\r\n            <React.Fragment>\r\n               <TitlebarComponent loggedinpatient={isAuthenticated} />\r\n               <Navbar />\r\n               <Container>\r\n               <h2 className=\"text-center\" style={{marginTop: '100px', marginBottom: '285px'}}> Sorry, there are no positions available at this time. Please check-in again later.</h2>\r\n               </Container>\r\n               <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CareerNew;\r\n","import React, {Component} from 'react';\r\nimport Navbar from '../../components/navbar/navbar';\r\nimport Footer from '../../components/footer/footer';\r\nimport { Container, Row, Col, Card, CardBody } from 'reactstrap';\r\nimport './contact.css';\r\nimport SubFooter from '../../components/subFooter/subFooter';\r\nimport HomeApi from '../../services/API/HomeApi';\r\nimport TitlebarComponent from '../../components/navbar/titlebar';\r\n\r\nclass ContactUs extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          contacttitle: null,\r\n          contactcardtitle: null,\r\n          contactaddress: null,\r\n          contactphone: null,\r\n          contactemail: null,\r\n          addressline1: null,\r\n          addressline2: null,\r\n          addressline3: null,\r\n        }\r\n    }\r\n  \r\n    componentDidMount(){\r\n        HomeApi.getContactContent().then(data => {\r\n          this.setState({ \r\n              contacttitle: data[0].contact_title,\r\n              contactcardtitle: data[0].contact_card_title,\r\n              contactaddress: data[0].contact_address,\r\n              addressline1: data[0].address_line1,\r\n              addressline2: data[0].address_line2,\r\n              addressline3: data[0].address_line3,\r\n              contactphone: data[0].contact_phone,\r\n              contactemail: data[0].contact_email,\r\n           });\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let isAuthenticated = localStorage.getItem('token') ? true : false;\r\n        return(\r\n\r\n            <React.Fragment>\r\n               <TitlebarComponent loggedinpatient={isAuthenticated} />\r\n               <Navbar />\r\n               <p className=\"red-font ml-5 mt-4 contactHeader\">{this.state.contacttitle}</p>\r\n               <Container>\r\n                    <Card className=\"m-lg-5 mb-md-5 mt-md-4 mb-5 contactCardBorder\">\r\n                        <CardBody className=\"contactCardBody\">\r\n                            <Row>\r\n                                {/* <Col md={7} className=\"p-4\" noGutters={true}>\r\n                                <p className=\"ml-4\">Send us a Message</p>\r\n                                <div class=\"contactInputBox\">\r\n                                    <input placeholder=\"Name\" type=\"text\" autocomplete=\"off\" />\r\n                                    <label for=\"name\">Name:</label>\r\n                                </div>\r\n                                <div class=\"contactInputBox\">\r\n                                    <input placeholder=\"Email Address\" type=\"email\" autocomplete=\"off\" />\r\n                                    <label for=\"email\">Email Address:</label>\r\n                                </div>\r\n                                <div class=\"contactInputBox\">\r\n                                    <input placeholder=\"Phone\" type=\"text\" autocomplete=\"off\" />\r\n                                    <label for=\"phone\">Phone:</label>\r\n                                </div>\r\n                                <label className=\"mt-3 ml-4 contactMessageTitle\" for=\"message\">Message:</label>\r\n                                <div>\r\n                                    <textarea className=\"ml-4 mt-2 contactMessageBox\" type=\"text\" autocomplete=\"off\" />\r\n                                </div>\r\n                                <button type=\"submit\" className='contactSubmitButton mt-4 ml-4'>Submit</button>\r\n                                </Col> */}\r\n                                <Col md={{size:'6', offset: '3'}} className=\"contactNextColumn\" noGutters={true}>\r\n                                    <h4 className=\"contactNextColumnHeader text-center mt-5 mb-5\">{this.state.contactcardtitle}</h4>\r\n                                    <div className=\"mb-5\">\r\n                                        <Row>\r\n                                            <Col xs={1}>\r\n                                                <span>\r\n                                                <i class=\"fa fa-2x fa-map-marker contactIconsColor mr-3 ml-3\" aria-hidden=\"true\"></i>\r\n                                                </span>\r\n                                            </Col>\r\n                                            <Col xs={10} className=\"ml-1\">\r\n                                                <span className=\"contactWhiteClass\">{this.state.contactaddress}<br/>\r\n                                                {this.state.addressline1}<br/>\r\n                                                {this.state.addressline2}<br/>\r\n                                                {this.state.addressline3}\r\n                                                </span>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {/* <span>\r\n                                            <i class=\"fa fa-2x fa-map-marker contactIconsColor mr-3 ml-3\" aria-hidden=\"true\"></i>\r\n                                        </span>\r\n                                        <span className=\"contactWhiteClass\">{this.state.contactaddress}<br/>\r\n                                        {this.state.addressline1}<br/>\r\n                                        {this.state.addressline2}<br/>\r\n                                        {this.state.addressline3}\r\n                                        </span> */}\r\n                                    </div>\r\n                                    <div className=\"mb-5\">\r\n                                        <span>\r\n                                            <i class=\"fa fa-2x fa-phone contactIconsColor mr-3 ml-3\" aria-hidden=\"true\"></i>\r\n                                        </span>\r\n                                        <span className=\"contactWhiteClass\">{this.state.contactphone}</span>\r\n                                    </div>\r\n                                    <div className=\"mb-5\">\r\n                                        <span>\r\n                                            <i class=\"fa fa-2x fa-at contactIconsColor mr-3 ml-3\" aria-hidden=\"true\"></i>\r\n                                        </span>\r\n                                        <span className=\"contactWhiteClass\">{this.state.contactemail}</span>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n               </Container>\r\n               {/* <hr/>\r\n               <SubFooter /> */}\r\n               <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactUs;\r\n","import React, {Component} from 'react';\r\nimport Navbar from '../../components/navbar/navbar';\r\nimport Footer from '../../components/footer/footer';\r\nimport { Container, Row, Col, Card, CardBody } from 'reactstrap';\r\nimport SubFooter from '../../components/subFooter/subFooter';\r\nimport HomeApi from '../../services/API/HomeApi';\r\nimport TitlebarComponent from '../../components/navbar/titlebar';\r\n\r\nclass ResearchNew extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let isAuthenticated = localStorage.getItem('token') ? true : false;\r\n        return(\r\n\r\n            <React.Fragment>\r\n               <TitlebarComponent loggedinpatient={isAuthenticated} />\r\n               <Navbar />\r\n               <Container>\r\n               <h2 className=\"text-center\" style={{marginTop: '100px', marginBottom: '285px'}}> Coming soon</h2>\r\n               </Container>\r\n               <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResearchNew;\r\n","import React from 'react';\r\nimport { Collapse, Table, Row, Col} from 'reactstrap';\r\nimport { convertToDateYYYYMMDD, convertToTimeHHMMSS, convertToDateDDMMYYYY } from '../../functions';\r\n\r\nclass TrackSampleDataCol extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {collapse : false};\r\n    }\r\n\r\n    toggleCard = () => {\r\n        this.setState({ collapse: !this.state.collapse });     \r\n    }\r\n\r\n    render() {\r\n        var d = new Date();\r\n      return (\r\n        <React.Fragment>\r\n            <Row className=\"mt-3\">\r\n               <Col md={1} xs={4} className=\"text-center\">{this.props.order.srno}</Col>\r\n               <Col md={2} xs={4} className=\"text-center\">{this.props.order.id}</Col>\r\n               <Col md={2} xs={4} className=\"text-center\">{convertToDateDDMMYYYY(this.props.order.createdOn)}</Col>\r\n               {this.props.order.parceledByCustomer === 1 ? \r\n               <Col md={2} xs={4} className=\"text-center\">Not Applicable</Col> \r\n               : \r\n               this.props.order.awbId !== \"\" && this.props.order.logisticsStatus ? \r\n               this.props.order.logisticsStatus.status.status === \"Incorrect Waybill number or No Information\" && this.props.order.pickUpTime ? \r\n               <Col>Sample pickup scheduled on {convertToDateDDMMYYYY(this.props.order.pickUpTime)} between 4:00 PM to 7:00 PM</Col> :\r\n               <Col md={2} xs={4} className=\"text-center\">{this.props.order.logisticsStatus.status.status}</Col> \r\n               : null\r\n            //    this.props.order.awbId !== \"\" ?\r\n            //    this.props.order.logisticsStatus ?\r\n            //    this.props.order.logisticsStatus.status.status === \"Incorrect Waybill number or No Information\" ?\r\n            //    this.props.order.pickUpTime ? <Col>Sample pickup scheduled on {convertToDateDDMMYYYY(this.props.order.pickUpTime)} at {convertToTimeHHMMSS(this.props.order.pickUpTime)}</Col>: \r\n            //    <Col>-</Col> : \r\n            //     <Col md={2} xs={4} className=\"text-center\">{this.props.order.logisticsStatus.status.status}</Col> : \r\n            //     <Col>-</Col>  \r\n            //    :\r\n            //    this.props.order.parceledByCustomer === 1 || this.props.order.parceledByCustomer === 0?\r\n            //    <Col md={2} xs={4} className=\"text-center\">{this.props.order.logisticStatus.status}</Col> :\r\n            //    <Col md={2} xs={4} className=\"text-center\">{this.props.order.logisticsStatus}</Col>\r\n               }\r\n               {/* {this.props.pstatusdata === \"Incorrect Waybill number or No Information\" && this.props.order.pickUpTime ? \r\n               <Col md={2} xs={4} className=\"text-center\">\r\n                    <div>{convertToDateYYYYMMDD(this.props.order.pickUpTime)}</div>\r\n                    <div>{convertToTimeHHMMSS(this.props.order.pickUpTime)}</div>\r\n               </Col>\r\n               :\r\n               <Col md={2} xs={4} className=\"text-center\">{this.props.order.logisticStatus.status}</Col> \r\n               } */}\r\n               {/* {this.props.order.awbId ? \r\n               <Col md={2} xs={4} className=\"text-center\">{this.props.order.logisticsStatus.status}</Col> : \r\n               <Col md={2} xs={4} className=\"text-center\">{this.props.order.logisticsStatus.status}</Col>\r\n               } */}\r\n               {/* <Col md={2} xs={4} className=\"text-center\">{this.props.order.logisticStatus.status}</Col> */}\r\n               {/* <Col md={2} xs={4} className=\"text-center\">{this.props.order.logisticsStatus}</Col> */}\r\n               {/* {this.props.order.isLogisticServiceable === 1 ? \r\n               <Col md={2} xs={4} className=\"text-center\">{this.props.order.logisticsStatus}</Col> :\r\n               <Col md={2} xs={4} className=\"text-center\">NA</Col>\r\n               } */}\r\n               <Col md={5} xs={12} className=\"text-center\">\r\n                {this.props.order.sampleStatus.desc === \"Sample Not Received\" ? \r\n                <p>{this.props.order.sampleStatus.desc}</p> :\r\n               this.props.order.logisticsStatus === \"SHIPMENT DELIVERED\" || (this.props.order.parceledByCustomer === 1 && this.props.order.logisticStatus.status) || this.props.order.parceledByCustomer === 0?  \r\n               <div onClick={this.toggleCard}>\r\n               <Collapse toggler=\"togglerinner\" isOpen={this.state.collapse}>\r\n                    <Table bordered responsive>\r\n                        <thead>\r\n                            <th>Test Name</th>\r\n                            <th>Status</th>\r\n                        </thead>\r\n                        {this.props.order.livehealthStatus ? this.props.order.livehealthStatus.map((t) =>\r\n                        <tbody>\r\n                            <td style={{wordWrap: 'break-word'}}>{t[\"Test Name\"]}</td>\r\n                            <td>{t.status}</td>\r\n                        </tbody> \r\n                    ) : null}\r\n                    </Table>\r\n                </Collapse>\r\n                {this.state.collapse ? \r\n                    <i class=\"fa fa-angle-double-up fa-2x\"></i> : \r\n                    <i class=\"fa fa-angle-double-down fa-2x\"></i>\r\n                }\r\n               </div> \r\n               : \"-\" }\r\n               </Col>     \r\n            </Row>\r\n            <hr/>\r\n        </React.Fragment>  \r\n        );\r\n    }\r\n\r\n}\r\n  \r\n\r\nexport default TrackSampleDataCol;\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport { Container, Table } from 'reactstrap';\r\nimport { Spinner, Row, Col } from 'reactstrap';\r\nimport { InputGroup, InputGroupText, InputGroupAddon, Input, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport HomeApi from '../../../services/API/HomeApi';\r\nimport { sortByColumn } from '../../functions';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../redux/actions/actions';\r\nimport { convertToDateYYYYMMDD, convertToDateDDMMYYYY } from '../../functions';\r\nimport { ListGroupItem } from 'react-bootstrap';\r\nimport TrackSampleDataCol from './trackSampleDataCol';\r\nimport PaginationComponent from '../../../components/pagination/pagination';\r\n\r\n\r\nclass TrackSampleTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          testtabledata: [],\r\n          loading: false,\r\n          filter: null,\r\n          toggle: false,\r\n          activeColumn: 0,\r\n          lastActiveColumn: 0,\r\n          modal: false,\r\n          currentPage: 0\r\n        }\r\n        this.pageSize = 10;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      //this.props.onPatientOrderList(this.props.user.id);\r\n      this.setState({\r\n        //modal:nextProps.pstatusdata ? true : false,\r\n        testtabledata:this.props.trackData\r\n      })\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n      this.setState({\r\n          testtabledata:nextProps.phistoryData\r\n      })\r\n    }\r\n\r\n    handlePatientTrackClick = (e, index) => {\r\n    \r\n      e.preventDefault();\r\n  \r\n      this.setState({\r\n        currentPage: index\r\n      });\r\n      \r\n    }\r\n    \r\n    toggle = () => {\r\n      this.setState(prevState => ({\r\n        modal: !prevState.modal\r\n      }));\r\n    }\r\n\r\n    updateSearch = (inputValue) => {\r\n      let filter = this.state.filter;\r\n\r\n      this.setState({\r\n          filter: inputValue\r\n      });\r\n    }\r\n\r\n    handleSearchChange = (event) => {\r\n        this.updateSearch(event.target.value);\r\n    }\r\n\r\n    filter = (data) => {\r\n      if (!this.state.filter) {\r\n        return data;\r\n      }\r\n      return data.filter((data) => data.id.toString().indexOf(this.state.filter) >= 0 ||\r\n                                   convertToDateDDMMYYYY(data.createdOn).toLowerCase().indexOf(this.state.filter.toLowerCase()) >= 0 ||\r\n                                    data.logisticStatus.status.toLowerCase().indexOf(this.state.filter) >= 0\r\n    )\r\n      \r\n    }\r\n\r\n    handleClick = (title, key) => {\r\n      let arrayCopy = [...this.state.testtabledata];\r\n    if(key === 1 || key === 2 || key === 3){\r\n      if (this.state.activeColumn === key) {\r\n        let toggle = !this.state.toggle\r\n        this.setState({\r\n          toggle: toggle,\r\n          activeColumn: key,\r\n          testtabledata: sortByColumn(arrayCopy, title, toggle)\r\n        })\r\n      } else {\r\n        this.setState({\r\n          activeColumn: key,\r\n          testtabledata: sortByColumn(arrayCopy, title, false)\r\n        })\r\n      }\r\n    }\r\n    }\r\n\r\n    render() {\r\n\r\n      const paginationArray = [];\r\n      const paginationNumberArray = [];\r\n\r\n      console.log(\"Patient Order Data\");\r\n      console.log(this.props.phistoryData);\r\n\r\n      console.log(\"Patient logistics Statuses\");\r\n      console.log(this.props.pstatusdata);\r\n\r\n      console.log(\"Patient livehealth Statuses\");\r\n      console.log(this.props.lpstatusdata);\r\n\r\n      if(this.props.phistoryData && this.props.pstatusdata && this.props.lpstatusdata.length !== 0) {\r\n        this.props.phistoryData.forEach((o) => {\r\n          o[\"livehealthStatus\"] = [];\r\n            // this.props.pstatusdata.forEach((p) => {\r\n            //     if(o.awbId === p.id) {\r\n            //         o[\"logisticsStatus\"] = p.status;\r\n            //     }\r\n            // })\r\n            this.props.lpstatusdata.forEach((p) => {\r\n              if(o.lhBillId === p.id) {\r\n                o[\"livehealthStatus\"] = p.list;\r\n              }\r\n          })\r\n        })\r\n      }  \r\n\r\n      const { currentPage } = this.state;\r\n\r\n      if(this.state.testtabledata) {\r\n        this.state.testtabledata.map((data) => {\r\n          return data.paymentStatus.status === \"SUCCESS\" ? \r\n              paginationNumberArray.push(data) : null\r\n        })\r\n\r\n        this.pagesCount = Math.ceil(paginationNumberArray.length / this.pageSize);\r\n\r\n        paginationNumberArray.map((el, key) => {\r\n          el[\"srno\"] = key + 1;\r\n        })\r\n      }\r\n      \r\n      console.log(this.props.phistoryData);\r\n\r\n        let list = <Spinner animation=\"border\" variant=\"danger\" />\r\n        if (!this.state.loading) {\r\n          list = <React.Fragment>\r\n          <Row>\r\n            <Col md={1} xs={4} className=\"text-center\">Sr No.</Col>\r\n            <Col md={2} xs={4} className=\"text-center\" onClick={() => this.handleClick(\"id\", 1)}>\r\n            Order No. {(this.state.toggle && this.state.activeColumn === 1) ? \" ↓\": \" ↑\"}</Col>\r\n            <Col md={2} xs={4} className=\"text-center\" onClick={() => this.handleClick(\"createdOn\", 2)}>\r\n            Order Date {(this.state.toggle && this.state.activeColumn === 2) ? \" ↓\": \" ↑\"}</Col>\r\n            {/* <Col md={2} xs={4} className=\"text-center\">Pickup Date & Time</Col> */}\r\n            <Col md={2} xs={4} className=\"text-center\">Sample Status / Pickup Date & Time</Col>\r\n            <Col md={5} xs={8} className=\"text-center\">Lab Report Status</Col>\r\n          </Row><hr/>\r\n          <Row>\r\n            <Col className=\"text-center\">\r\n              {this.state.testtabledata ? this.state.testtabledata.map((data) => {\r\n              return data.paymentStatus.status === \"SUCCESS\" ? \r\n              paginationArray.push(data) : null\r\n              }) &&  \r\n              this.filter(paginationArray).slice(\r\n              currentPage * this.pageSize,\r\n              (currentPage + 1) * this.pageSize\r\n            ).map((order, key) =>\r\n                   order.paymentStatus.status === \"SUCCESS\" ?\r\n                  <TrackSampleDataCol order={order} keyValue = {key} pstatusdata={this.props.pstatusdata}/> : null\r\n                  ) : <Spinner color=\"danger\" />\r\n              }\r\n            </Col>\r\n          </Row>\r\n          </React.Fragment>\r\n        }\r\n        return(\r\n          <React.Fragment>\r\n               <Container className=\"mb-5\">\r\n               {this.state.testtabledata ?\r\n               <React.Fragment>\r\n               <Row className=\"mt-2\">\r\n                 <Col md=\"3\">\r\n                 <InputGroup size=\"lg\">\r\n                  <InputGroupAddon addonType=\"prepend\">Search</InputGroupAddon>\r\n                  <Input value={this.state.filter} onChange={this.handleSearchChange} type=\"text\" style={{zIndex: 0}}/>\r\n                </InputGroup>\r\n                 </Col>\r\n               </Row>\r\n               <Row className=\"mt-5 mb-5\">\r\n                 <Col className=\"text-center\">\r\n                 {list} \r\n                 </Col>\r\n               </Row>\r\n               <PaginationComponent currentPage={this.state.currentPage} handleClick={this.handlePatientTrackClick} pagesCount={this.pagesCount} />\r\n               </React.Fragment>\r\n             : <h5 style={{color: 'red'}} className=\"mt-5 text-center\">No orders to display</h5>\r\n              }\r\n             </Container>\r\n\r\n             <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n                <ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\r\n                  {/* <ModalBody>\r\n            {this.props.pstatusdata ? <h2>{this.props.pstatusdata[0].status}</h2> : null}\r\n                </ModalBody> */}\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.toggle}>Do Something</Button>{' '}\r\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n          </React.Fragment>\r\n              \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      loading: state.loading,\r\n      user: state.user,\r\n      phistoryData: state.phistoryData,\r\n      lpstatusdata: state.lpstatusdata\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    //onPatientOrderList: (id) => dispatch(actions.patientOrderData(id)),\r\n    //onPatientGetOrderStatus: (billId) => dispatch(actions.patientGetOrderStatus(billId))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrackSampleTable);","import React from 'react';\r\nimport { Row, Col, Button, Container, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\n\r\nconst ModalWishlistComponent = (props) => (\r\n    <Modal isOpen={props.confirmModal} toggle={props.togglemodalEnroll} className={props.className}>\r\n    <ModalHeader toggle={props.togglemodalEnroll}>{props.title}</ModalHeader>\r\n    <ModalBody>\r\n      {props.children}\r\n    </ModalBody>\r\n    </Modal>\r\n);\r\n\r\nexport default ModalWishlistComponent;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Col, Row, Button, Spinner } from 'reactstrap';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\n\r\nclass PatientPaymentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    loadingState = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n    \r\n    return (\r\n    <div class=\"container\">\r\n    <div class=\"row\">\r\n    <div class=\"col-md-6 offset-md-3 text-center\">\r\n    <div className=\"container-box text-center\">\r\n        <div class=\"logo\">\r\n            <img src={logo} className=\"tthomelogo\"/>\r\n        </div>\r\n        {/* <h4>Centre for Oncopathology </h4> */}\r\n    \r\n        <Row className=\"pt-3 pb-3\">\r\n          <Col><p className=\"red-font raleway-light font-size\">Click on the proceed button in order to complete payment for order.\r\n           <br /></p></Col>\r\n        </Row>\r\n        {/* <Row className=\"pb-3\">\r\n          <Col><p className=\"red-font raleway-light \">To learn more about how Tata Trusts collects, uses, shares and protects your <br /> personal data please read Tata Trusts' Privacy Policy. </p><br />\r\n          </Col>\r\n        </Row> */}\r\n        <Row>\r\n            <Col>\r\n            <form action=\"http://35.154.61.193:8090/payment/pay\" method=\"post\">\r\n            <input type=\"hidden\" name=\"requestString\" id=\"requestString\" value={this.props.message}/>\r\n            <input type=\"submit\" value=\"Proceed\" style={{width: '190px', fontSize: '18px'}} className=\"mb-5\" onClick={this.loadingState}/>\r\n            </form>\r\n            </Col>\r\n        </Row>\r\n\r\n        {this.state.loading ? \r\n            <Row>\r\n            <Col md={12} className=\"mt-3 text-center\">\r\n                <Spinner animation=\"border\" variant=\"danger\" className=\"text-center\" />\r\n                <p style={{color: 'red'}}>Processing Your Request. Please do not refresh or close the tab.</p>\r\n            </Col>\r\n            </Row>\r\n        : null}\r\n    </div>\r\n    </div>\r\n    </div>\r\n    {/* <div className=\"privacy-text\"><span>Terms</span> | <span>Privacy</span></div> */}\r\n    </div>\r\n        \r\n    )\r\n}\r\n}\r\nexport default PatientPaymentForm;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Col, Row, Button, Spinner } from 'reactstrap';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass PatientPaymentSuccess extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            orderOpenToggle: false\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        let orderId = this.props.data.orderId;\r\n        console.log(this.props.data.orderId);\r\n\r\n        this.props.onCompleteOrder(orderId);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.ocsuccess){\r\n            this.setState({\r\n                orderOpenToggle: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n    return (\r\n    <div class=\"container\">\r\n    <div class=\"row\">\r\n    <div class=\"col-md-6 offset-md-3 text-center\">\r\n    <div className=\"container-box text-center\">\r\n        <div class=\"logo\">\r\n            <img src={logo} className=\"tthomelogo\"/>\r\n        </div>\r\n        {/* <h4>Centre for Oncopathology </h4> */}\r\n\r\n        {this.props.ocsuccess !== null ?\r\n        \r\n        this.props.ocsuccess ?\r\n        <Row className=\"pt-3 pb-3\">\r\n          <Col><p className=\"red-font raleway-light font-size\">Order Placed Successfully, Thankyou for ordering.<br />\r\n          You can track your order in Order History section of home page.<br/>\r\n          {/* Track your order here - \r\n          <Link to={{pathname: '/patientHome', state: {orderOpenToggler: this.state.orderOpenToggle}}}>Click</Link><br/> */}\r\n          Kindly go to home page.<br /></p></Col>\r\n        </Row> :\r\n        <Row className=\"pt-3 pb-3\">\r\n        <Col><p className=\"red-font raleway-light font-size\">Order not placed, please try again.<br />Kindly go to home page.\r\n         <br /></p></Col>\r\n        </Row> \r\n        \r\n    : <Spinner animation=\"border\" variant=\"danger\" className=\"text-center\" />\r\n    }\r\n        {/* <Row className=\"pb-3\">\r\n          <Col><p className=\"red-font raleway-light \">To learn more about how Tata Trusts collects, uses, shares and protects your <br /> personal data please read Tata Trusts' Privacy Policy. </p><br />\r\n          </Col>\r\n        </Row> */}\r\n        <Row> \r\n            <Col>\r\n                <Link to=\"/patientHome\"><Button className=\"button-lightred mt-0 mb-5\" size=\"md\" style={{width: '160px', fontSize: '18px'}} >Next</Button>{' '}</Link>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    {/* <div className=\"privacy-text\"><span>Terms</span> | <span>Privacy</span></div> */}\r\n    </div>\r\n        \r\n    )\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        ocsuccess: state.ocsuccess,\r\n        ocmessage: state.ocmessage,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n        onCompleteOrder: (orderId) => dispatch(actions.completeOrder(orderId))\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientPaymentSuccess);","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Col, Row, Button } from 'reactstrap';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\n\r\nclass PatientPaymentFailure extends Component {\r\n\r\n    render() {\r\n    return (\r\n    <div class=\"container\">\r\n    <div class=\"row\">\r\n    <div class=\"col-md-6 offset-md-3 text-center\">\r\n    <div className=\"container-box text-center\">\r\n        <div class=\"logo\">\r\n            <img src={logo} className=\"tthomelogo\"/>\r\n        </div>\r\n        {/* <h4>Centre for Oncopathology </h4> */}\r\n    \r\n        <Row className=\"pt-3 pb-3\">\r\n          <Col><p className=\"red-font raleway-light font-size\">Order was unsuccessfull, payment process failed.<br />Kindly go to home page.\r\n           <br /></p></Col>\r\n        </Row>\r\n        {/* <Row className=\"pb-3\">\r\n          <Col><p className=\"red-font raleway-light \">To learn more about how Tata Trusts collects, uses, shares and protects your <br /> personal data please read Tata Trusts' Privacy Policy. </p><br />\r\n          </Col>\r\n        </Row> */}\r\n        <Row>\r\n            <Col>\r\n                <Link to=\"/patientHome\"><Button className=\"button-lightred mt-0 mb-5\" size=\"md\" style={{width: '160px', fontSize: '18px'}} >Next</Button>{' '}</Link>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    {/* <div className=\"privacy-text\"><span>Terms</span> | <span>Privacy</span></div> */}\r\n    </div>\r\n        \r\n    )\r\n}\r\n}\r\nexport default PatientPaymentFailure;","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport TitlebarComponent from '../../components/navbar/titlebar';\r\nimport { Card, CardBody, Container, Row, Col, Spinner, Button, FormGroup, Input, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport PatientPaymentForm from './patientPayForm';\r\nimport queryString from 'query-string';\r\nimport PatientPaymentSuccess from './patientPaymentSuccess';\r\nimport PatientPaymentFailure from './patientPaymentFailure';\r\nimport { convertToDateFormat, convertToDateYYYYMMDD } from '../functions';\r\n\r\nclass PatientCashReceipt extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            courierCost: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onGetPatientUpdatedAddress(this.props.user.id);\r\n        this.props.onLogisticCost();\r\n    }\r\n\r\n    payNowOrder = () => {\r\n        let orderId = this.props.location.state.order.id;\r\n        let admin = this.props.location.state.order.orderedByAdmin;\r\n        this.props.onPayNowOrder(orderId, this.state.courierCost, admin);\r\n    }\r\n\r\n    handleCourierCost = () => {\r\n        this.setState(prevState => ({\r\n            courierCost: !prevState.courierCost\r\n        }))\r\n    }\r\n\r\nrender() {\r\nconsole.log(this.props.location.state.order);\r\nconsole.log(this.props.user);\r\nlet params = queryString.parse(this.props.location.search);\r\nlet isAuthenticated = localStorage.getItem('token') ? true : false;\r\nvar date = new Date().getDate();\r\nvar month = ((new Date().getMonth() + 1) <10?'0':'') + (new Date().getMonth() + 1) ;\r\nvar year = new Date().getFullYear();\r\nvar hours = new Date().getHours();\r\nvar time = new Date();\r\nvar min = (time.getMinutes()<10?'0':'') + time.getMinutes() ;\r\n\r\nlet orderReceiptData = this.props.location.state.order;\r\n\r\nreturn (\r\n<React.Fragment>\r\n{params.paymentStatus === \"SUCCESS\" ? \r\n<PatientPaymentSuccess data={params} userId={this.props.user.id}/> :\r\nparams.paymentStatus === \"FAILURE\" ? \r\n<PatientPaymentFailure data={params} /> :\r\n\r\nthis.props.pordermessage ? \r\n<PatientPaymentForm message={this.props.pordermessage}/> :\r\n\r\n<React.Fragment>\r\n<TitlebarComponent loggedinpatient={isAuthenticated} />\r\n<Container className=\"mt-5 mb-5\">\r\n<Card className=\"collapse-box\">\r\n    <CardBody>\r\n        <Row>\r\n            <Col md={11}></Col>\r\n            <Col md={1}>\r\n                <Link to=\"/patientHome\"><div>X</div></Link>\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"mt-5 ml-3\">\r\n            <Col md={6}><h5>Patient Name: {this.props.user.firstName + ' ' + this.props.user.lastName}</h5></Col>\r\n            <Col md={6}><h5>Order ID: {orderReceiptData.id}</h5></Col>\r\n        </Row>\r\n        <Row className=\"mt-3 ml-3\">\r\n            <Col md={6}><h5>Patient ID: {this.props.user.id}</h5></Col>\r\n            <Col md={6}><h5>Date: {convertToDateYYYYMMDD(orderReceiptData.createdOn)}</h5></Col>\r\n        </Row>\r\n        {/* <Row className=\"mt-3 ml-3\">\r\n            <Col md={6}><h5>Transaction ID: </h5></Col>\r\n        </Row> */}\r\n\r\n        <Row className='mt-5'>\r\n            <Col md={3} xs={2} className=\"text-center\"><b>Sample Name</b></Col>\r\n            <Col md={6} xs={7} className=\"text-center\"><b>Test Name</b></Col>\r\n            <Col md={3} xs={3} className=\"text-center\"><b>Amount</b></Col>\r\n        </Row><hr/>\r\n        \r\n        {orderReceiptData.id ? orderReceiptData.userPatientOrderDetails.map((data) => {\r\n            return <React.Fragment>\r\n            <Row className='mt-4'>\r\n            <Col md={3} xs={2} className=\"text-center\">{data.sampleTest.sample.sampleName}</Col>\r\n            <Col md={6} xs={7} className=\"text-center\">{data.sampleTest.testName}</Col>\r\n            <Col md={3} xs={3} className=\"text-center\">&#8377; {(data.sampleTest.price).toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</Col>\r\n            </Row><hr/>\r\n            </React.Fragment>\r\n        }) : <Spinner color=\"danger\" />\r\n        }\r\n        \r\n        {this.props.patientupdatedAddsuccess ?\r\n            this.props.patientupdatedAddData.islogisticserviceable === 1 && orderReceiptData.parceledByCustomer === 0 ?\r\n        <React.Fragment>\r\n        <Row className='mt-4'>\r\n            <Col md={3} xs={2} className=\"text-center\"></Col>\r\n            <Col md={6} xs={7} className=\"text-center\"><b>Logistic Cost</b></Col>\r\n            <Col md={3} xs={3} className=\"text-center\">&#8377; {orderReceiptData.logisticAmount}</Col>\r\n        </Row><hr/>\r\n        </React.Fragment>\r\n        : null :null}\r\n\r\n        <Row className='mt-4'>\r\n            <Col md={3} xs={2} className=\"text-center\"></Col>\r\n            <Col md={6} xs={7} className=\"text-center\"><b>Grand Total</b></Col>\r\n            <Col md={3} xs={3} className=\"text-center\">&#8377; {(orderReceiptData.totalAmount).toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</Col>\r\n        </Row><hr/>\r\n\r\n        {this.props.patientupdatedAddsuccess ?\r\n        <Row>\r\n            <Col>\r\n            {this.props.patientupdatedAddData.islogisticserviceable === 0 && orderReceiptData.orderedByAdmin === 1 ?\r\n            <p className=\"mb-5 mt-5\"><b style={{fontSize: '15px'}}>Centre for Oncopathology's sample pickup services are not available at your address, in pincode - {this.props.patientupdatedAddData.pincode}. \r\n            Please use any courier service to send the sample to the Centre for Oncopathology, Mumbai.</b></p>\r\n            : null }\r\n\r\n            {this.props.patientupdatedAddData.islogisticserviceable === 1 && orderReceiptData.orderedByAdmin === 1 ?\r\n            <React.Fragment>\r\n             <p className=\"mt-5\"><b style={{fontSize: '15px'}}>Centre for Oncopathology offers sample pickup services from your address in pincode - {this.props.patientupdatedAddData.pincode}. <br/><br/>\r\n                 If you don’t wish to use our services, Select the \"No pickup service required\" checkbox below.</b></p>   \r\n            <Row className=\"mb-5\">\r\n            <Col md={12}>\r\n            <FormGroup check>\r\n            <Label check>\r\n                <Input type=\"checkbox\" value={this.state.courierCost} onChange={this.handleCourierCost}/>{' '}\r\n                No pickup service required \r\n            </Label>\r\n\r\n            </FormGroup>\r\n            </Col>\r\n            </Row>\r\n            </React.Fragment>\r\n            : null }\r\n            </Col>\r\n        </Row>\r\n        : null}\r\n\r\n        {this.props.patientupdatedAddsuccess ?\r\n            this.props.patientupdatedAddData.islogisticserviceable === 1 && this.state.courierCost === false && this.props.lcdata? \r\n            <p className=\"text-center mt-4\" style={{fontWeight: 'bold'}}>Total Charge: &#8377; {(orderReceiptData.testAmount).toLocaleString(navigator.language, { minimumFractionDigits: 0 })} (Test Charge) + &#8377; {this.props.lcdata.value} (Logistic Charge) = &#8377; {(Number((this.props.lcdata.value)) + Number((orderReceiptData.testAmount))).toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</p>\r\n            :  null :null}\r\n\r\n        {this.props.patientupdatedAddsuccess ?\r\n            (this.props.patientupdatedAddData.islogisticserviceable === 0) || (this.props.patientupdatedAddData.islogisticserviceable === 1 && this.state.courierCost === true)? \r\n            <p className=\"text-center mt-4\" style={{fontWeight: 'bold'}}>Total Charge : &#8377; {(orderReceiptData.testAmount).toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</p> \r\n            : null :null}\r\n\r\n        <Row>\r\n        <Col md={12} className=\"mt-3 text-center\">\r\n            <Button onClick={this.payNowOrder} className=\"button-lightred\" size=\"md\" style={{width: '190px', cursor: 'pointer'}} >Confirm</Button>\r\n        </Col>\r\n        </Row> \r\n\r\n            </CardBody>\r\n            </Card>\r\n            </Container>\r\n            </React.Fragment>\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        user: state.user,\r\n        pordersuccess: state.pordersuccess,\r\n        pordermessage: state.pordermessage,\r\n        pordererror: state.pordererror,\r\n        patientupdatedAddsuccess: state.patientupdatedAddsuccess,\r\n        patientupdatedAddData: state.patientupdatedAddData,\r\n        lcsuccess: state.lcsuccess,\r\n        lcdata: state.lcdata,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      onPatientOrderList: (id) => dispatch(actions.patientOrderList(id)),\r\n      onPayNowOrder: (orderId, courierCost, admin) => dispatch(actions.PayNowOrder(orderId, courierCost, admin)),\r\n      onGetPatientUpdatedAddress: (id) => dispatch(actions.getPatientUpdatedAddress(id)),\r\n      onLogisticCost: () => dispatch(actions.logisticCost()),\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientCashReceipt);","import React, {Component} from 'react';\r\nimport { Container, Table } from 'reactstrap';\r\nimport { Spinner, Row, Col } from 'reactstrap';\r\nimport { InputGroup, InputGroupText, InputGroupAddon, Input, Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport { convertToDateYYYYMMDD, sortByColumn, convertToDateDDMMYYYY } from '../functions';\r\nimport PaginationComponent from '../../components/pagination/pagination';\r\nimport PatientCashReceipt from './patientcashReceipt';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\n\r\nclass PatientOrderHistory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          testtableheader: [\r\n            {table_header: \"Sr No.\", table_sort_name: \"\"},\r\n            {table_header: \"Order No.\", table_sort_name: \"id\"},\r\n            {table_header: \"Order Date\", table_sort_name: \"createdOn\"},\r\n            {table_header: \"Payment Status\", table_sort_name: \"status\"},\r\n            {table_header: \"Action\", table_sort_name: \"\"},\r\n            {table_header: \"Update Order\", table_sort_name: \"\"},\r\n          ],\r\n          testtabledata: this.props.phistoryData,\r\n          loading: false,\r\n          filter: null,\r\n          toggle: false,\r\n          activeColumn: 0,\r\n          lastActiveColumn: 0,\r\n          currentPage: 0,\r\n          showcashreceipt: false\r\n        }\r\n        this.pageSize = 10;\r\n    }\r\n\r\n    // componentDidMount = () => {\r\n    //   this.setState({\r\n    //     testtabledata:this.props.phistoryData\r\n    //   })\r\n\r\n    // }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({\r\n            testtabledata:nextProps.phistoryData\r\n        })\r\n      }\r\n\r\n      handleOrderHistoryClick = (e, index) => {\r\n    \r\n        e.preventDefault();\r\n    \r\n        this.setState({\r\n          currentPage: index\r\n        });\r\n        \r\n      }\r\n\r\n\r\n    updateSearch = (inputValue) => {\r\n      let filter = this.state.filter;\r\n\r\n      this.setState({\r\n          filter: inputValue\r\n      });\r\n    }\r\n\r\n    handleSearchChange = (event) => {\r\n        this.updateSearch(event.target.value);\r\n    }\r\n\r\n    filter = (data) => {\r\n      if (!this.state.filter) {\r\n        return data;\r\n      }\r\n        return data.filter((data) => data.id.toString().indexOf(this.state.filter) >= 0 ||\r\n        convertToDateDDMMYYYY(data.createdOn).toLowerCase().indexOf(this.state.filter.toLowerCase()) >= 0 \r\n    )\r\n      \r\n    }\r\n\r\n    handleClick = (title, key) => {\r\n      let arrayCopy = [...this.state.testtabledata];\r\n    if(key === 1 || key === 2){\r\n      if (this.state.activeColumn === key) {\r\n        let toggle = !this.state.toggle\r\n        this.setState({\r\n          toggle: toggle,\r\n          activeColumn: key,\r\n          testtabledata: sortByColumn(arrayCopy, title, toggle)\r\n        })\r\n      } else {\r\n        this.setState({\r\n          activeColumn: key,\r\n          testtabledata: sortByColumn(arrayCopy, title, false)\r\n        })\r\n      }\r\n    }\r\n    }\r\n     \r\n    cashReceipt = (order) => {\r\n      this.props.history.push({pathname: '/patientCashReceipt', state: {order: order}})\r\n    }\r\n\r\n    invoice = (order) => {\r\n      this.props.history.push({pathname: '/patientInvoice', state: {order: order}})\r\n    }\r\n\r\n    editOrder = (order) => {\r\n      this.props.history.push({pathname: '/patientEditOrder', state: {order: order}})\r\n    }\r\n\r\n    render() {\r\n\r\n      console.log(this.props.user);\r\n      console.log(this.state.testtabledata);\r\n      const { currentPage } = this.state;\r\n\r\n      if(this.state.testtabledata) {\r\n        this.pagesCount = Math.ceil(this.state.testtabledata.length / this.pageSize);\r\n        \r\n        this.state.testtabledata.map((el, key) => {\r\n          el[\"srno\"] = key + 1;\r\n        })\r\n      }\r\n      \r\n        let list = <Spinner animation=\"border\" variant=\"danger\" />\r\n        if (!this.state.loading) {\r\n            list = <Table>\r\n            <thead>\r\n              <tr>\r\n                {this.state.testtableheader ? this.state.testtableheader.map((data, key) => {\r\n                    return <th onClick={() => this.handleClick(data.table_sort_name, key)} className=\"cursor\">{data.table_header}{(key === 1 || key === 2) ? (this.state.toggle && this.state.activeColumn === key) ? \" ↓\": \" ↑\" : \"\"}</th>\r\n                }) : <Spinner color=\"danger\" />\r\n              }\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.state.testtabledata ? this.filter(this.state.testtabledata).slice(\r\n              currentPage * this.pageSize,\r\n              (currentPage + 1) * this.pageSize\r\n            ).map((order, key) => {\r\n                return <tr>\r\n                    <td>{order.srno}</td>\r\n                    <td>{order.id}</td>\r\n                    <td>{convertToDateDDMMYYYY(order.createdOn)}</td>\r\n                    <td>{order.paymentStatus.status}</td>\r\n                    <td>{order.paymentStatus.status === \"SUCCESS\" ?\r\n                      <Button onClick={() => this.invoice(order)}>Invoice</Button>   :\r\n                      <Button onClick={() => this.cashReceipt(order)}>Confirm and Pay</Button>\r\n                    }</td>\r\n                    <td>{order.lhBillId === 0 ? \r\n                    <Button onClick={() => this.editOrder(order)} disabled>Edit</Button> :\r\n                    <Button onClick={() => this.editOrder(order)}>Edit</Button> }\r\n                    </td>\r\n                </tr>\r\n            }) : <Spinner color=\"danger\" />\r\n          }\r\n            </tbody>\r\n          </Table>\r\n        }\r\n        return(\r\n         \r\n          <React.Fragment>\r\n               <Container className=\"mb-5\">\r\n               {this.state.testtabledata ?\r\n               <React.Fragment>\r\n               <Row className=\"mt-2\">\r\n                 <Col md=\"3\">\r\n                 <InputGroup size=\"lg\">\r\n                  <InputGroupAddon addonType=\"prepend\">Search</InputGroupAddon>\r\n                  <Input value={this.state.filter} onChange={this.handleSearchChange} type=\"text\" style={{zIndex: 0}}/>\r\n                </InputGroup>\r\n                 </Col>\r\n               </Row>\r\n               <Row className=\"mt-5 mb-5\">\r\n                 <Col className=\"text-center\">\r\n                 {list} \r\n                 </Col>\r\n               </Row>\r\n               <PaginationComponent currentPage={this.state.currentPage} handleClick={this.handleOrderHistoryClick} pagesCount={this.pagesCount}></PaginationComponent>\r\n               </React.Fragment>\r\n               : <h5 style={{color: 'red'}} className=\"mt-5 text-center\">No orders to display</h5>\r\n               }\r\n             </Container>\r\n            </React.Fragment>\r\n              \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      loading: state.loading,\r\n      user: state.user,\r\n      data: state.data,\r\n      phistoryData: state.phistoryData,\r\n      pstatusdata: state.pstatusdata\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onPatientOrderList: (id) => dispatch(actions.patientOrderList(id)),\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PatientOrderHistory));","import React, {Component} from 'react';\r\nimport Picky from \"react-picky\";\r\nimport { Label, Row, Col, FormGroup, Input, Table} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/actions/actions';\r\n\r\nclass PatientPicky extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Picky\r\n                value={this.props.valueData}\r\n                options={this.props.optionData}\r\n                onChange={(undefined) => {this.props.selectMultipleOption(undefined, this.props.keyValue); document.getElementById(\"selectTestLabelPatientHome\").click()}}\r\n                open={false}\r\n                valueKey= \"id\"\r\n                labelKey=\"testName\"\r\n                multiple={true}\r\n                includeSelectAll={true}\r\n                includeFilter={true}\r\n                numberDisplayed={1}\r\n                manySelectedPlaceholder=\"%s selected\"\r\n                allSelectedPlaceholder=\"%s selected\"\r\n                dropdownHeight={600}\r\n            />\r\n        )\r\n    }\r\n}\r\n  \r\nexport default PatientPicky;\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport TitlebarComponent from '../../components/navbar/titlebar';\r\nimport Navbar from '../../components/navbar/navbar';\r\nimport { Row, Col, Container, Form, Table, UncontrolledCollapse, Button, CardBody, Card, Alert, FormGroup, Input, Label } from 'reactstrap';\r\nimport Picky from \"react-picky\";\r\nimport \"react-picky/dist/picky.css\";\r\nimport './patientHome.css';\r\nimport TrackSampleTable from './trackSample/trackSampleTable';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport HomeApi from '../../services/API/HomeApi';\r\nimport ModalComponent from '../../components/modal/modal';\r\nimport ModalWishlistComponent from '../../components/modal/modalwishlist';\r\nimport PatientOrderHistory from './patientOrderHistory';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport PatientPaymentForm from './patientPayForm';\r\nimport queryString from 'query-string';\r\nimport PatientPaymentSuccess from './patientPaymentSuccess';\r\nimport PatientPaymentFailure from './patientPaymentFailure';\r\nimport PatientPicky from './patientPicky';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\n\r\nclass PatientHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            testDetails: [\r\n                {\r\n                    value: null,\r\n                    selectedSample: '',\r\n                    selectedTests: []\r\n                }\r\n            ],\r\n            form: this.defaultForm(),\r\n            testtableheader: [],\r\n            testtabledata: [],\r\n            modal: false,\r\n            testModal: false,\r\n            toggler1: false,\r\n            toggler2: false,\r\n            toggler3: false,\r\n            toggler4: false,\r\n            address:{\r\n                line1:'',\r\n                line2:'',\r\n                city:'',\r\n                pincode:''\r\n            },\r\n            loading: false,\r\n            visible: false,\r\n            yesToggle: false,\r\n            noLGCharge: false,\r\n            callAddressUpdateAPI: true,\r\n            courierCost: false\r\n            // orderOpenToggler: this.props.location.state.orderOpenToggler,\r\n            // bigList: [{id: 1, name: 'Test Name 1'},{id: 2, name: 'Test Name 2'}, {id: 3, name: 'Test Name 3'} ]\r\n        }\r\n    }\r\n\r\n    defaultForm = () => {\r\n        return {\r\n            line1: '',\r\n            line2: '',\r\n            city: '',\r\n            pincode: '',\r\n        }\r\n      }\r\n    \r\n    componentDidMount(){\r\n        // HomeApi.getTestListContent().then(res => {\r\n        //   console.log(res);\r\n        //   this.setState({ \r\n        //       testtableheader: res[0].listoftestsheaders,\r\n        //       testtabledata: res[0].listoftestsoffereddata,\r\n        //       loading: false,\r\n        //       filter: null\r\n        //    });\r\n        // });\r\n\r\n        this.props.onSampleType();\r\n        this.props.onPatientOrderList(this.props.user.id);\r\n        this.props.onLogisticCost();\r\n        this.props.onGetPatientUpdatedAddress(this.props.user.id);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.pordersuccess) {\r\n            this.setState({\r\n                testDetails: [\r\n                ],\r\n                address:{\r\n                    line1:'',\r\n                    line2:'',\r\n                    city:'',\r\n                    pincode:''\r\n                },\r\n                loading: false,\r\n                successMsg: true\r\n            })\r\n\r\n            //this.props.onPatientOrderList(this.props.user.id);\r\n\r\n            // setTimeout(() => {\r\n            //     this.props.onpatientOrderReset();\r\n            // }, 4000);\r\n        } \r\n        \r\n        if(nextProps.patientupdatedAddsuccess){\r\n            this.setState({\r\n                form: {\r\n                    line1: this.props.patientupdatedAddData ? this.props.patientupdatedAddData.line1 : null,\r\n                    line2: this.props.patientupdatedAddData ? this.props.patientupdatedAddData.line2 : null,\r\n                    city: this.props.patientupdatedAddData ? this.props.patientupdatedAddData.city : null,\r\n                    pincode: this.props.patientupdatedAddData ? this.props.patientupdatedAddData.pincode : null\r\n                }\r\n            })\r\n        }\r\n\r\n        if(nextProps.addEditsuccess && this.state.callAddressUpdateAPI) {\r\n            this.setState({\r\n                callAddressUpdateAPI: false\r\n            })\r\n\r\n            setTimeout(() => {\r\n                this.props.onGetPatientUpdatedAddress(this.props.user.id);\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    sampleInputChangedHandler(e, key) {\r\n        \r\n        let id = e.target.value;\r\n        \r\n        if(e.target.value !== \"Select Sample\"){\r\n        this.props.onSampleTest(id);\r\n        }\r\n        \r\n        const updatedForm = [\r\n            ...this.state.testDetails.slice(0,key),\r\n            Object.assign({}, this.state.testDetails[key], {[e.target.name]: e.target.value}),\r\n            ...this.state.testDetails.slice(key+1)\r\n        ]\r\n        this.setState({\r\n          testDetails: updatedForm\r\n        });\r\n          \r\n    }\r\n\r\n    addressInputChangedHandler(e) {\r\n\r\n        const updatedForm = {\r\n          ...this.state.address,\r\n          [e.target.name]: e.target.value\r\n        }\r\n        let validationMessages = [];\r\n        this.setState({address: updatedForm, validationMessages});\r\n          \r\n      }\r\n\r\n    profileinputChangedHandler(e) {\r\n        const updatedprofileForm = {\r\n          ...this.state.form,\r\n          [e.target.name]: e.target.value\r\n        }\r\n        let validationMessages = [];\r\n        this.setState({\r\n          form: updatedprofileForm, \r\n          validationMessages\r\n        });\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        console.log(\"profile form clicked!\");\r\n        event.preventDefault();\r\n    \r\n        const updatedAddress = {\r\n          userId: this.props.user.id,\r\n          address: {\r\n              line1: this.state.form.line1,\r\n              line2: this.state.form.line2,\r\n              city: this.state.form.city,\r\n              pincode: this.state.form.pincode\r\n          }\r\n        }\r\n\r\n        this.setState({\r\n            visible: true,\r\n          }, () => {\r\n            window.setTimeout(() => {\r\n              this.props.onGetPatientUpdatedAddress(this.props.user.id);\r\n              this.setState({\r\n                visible: false\r\n              })\r\n            }, 5000)\r\n        });\r\n\r\n        this.setState(prevState => ({\r\n            modal: !prevState.modal,\r\n            callAddressUpdateAPI: true\r\n        }));\r\n    \r\n        this.props.onPatientEditAddress(updatedAddress);\r\n        \r\n    }\r\n\r\n    submitTestDetails = (event) => {\r\n        event.preventDefault();\r\n\r\n        const patientTestListIdArr = this.state.testDetails.map((el) => {\r\n            return el.selectedTests.map(function(subtest) {\r\n                return subtest.lhTestId;\r\n              })\r\n        })\r\n\r\n        var patientTestListId = [].concat.apply([],patientTestListIdArr).filter((elem, index, self) => {\r\n            return index === self.indexOf(elem);\r\n        })\r\n\r\n        let noLGChargeData = this.state.noLGCharge;\r\n        let islogisticserviceable;\r\n        if(noLGChargeData === false){\r\n            // this.setState({\r\n            //     islogisticserviceable: 1\r\n            // })\r\n            islogisticserviceable= 1\r\n        }\r\n        if(noLGChargeData === true){\r\n            // this.setState({\r\n            //     islogisticserviceable: 0\r\n            // })\r\n            islogisticserviceable= 0\r\n        }\r\n\r\n        const patientTestDetails = {\r\n            testList: [...patientTestListId],\r\n            userId: this.props.user.id,\r\n            parceledByCustomer: this.state.courierCost,\r\n            // address:{\r\n            //     line1: this.state.address.line1,\r\n            //     line2:this.state.address.line2,\r\n            //     city:this.state.address.city,\r\n            //     state:this.state.address.state,\r\n            //     pincode:this.state.address.pincode\r\n            // },\r\n            // islogisticserviceable: islogisticserviceable\r\n        }\r\n\r\n        console.log(patientTestDetails);\r\n\r\n        this.setState({loading: true});\r\n\r\n        this.props.onPatientSampleSubmit(patientTestDetails);\r\n    }\r\n\r\n    selectMultipleOption = (value, key) => {\r\n        console.count('onChange')\r\n        console.log(\"Val\", value);\r\n        const updatedTestDetails = [\r\n            ...this.state.testDetails.slice(0,key),\r\n            Object.assign({}, this.state.testDetails[key], {selectedTests: value}),\r\n           ...this.state.testDetails.slice(key+1)\r\n          ]\r\n        \r\n        this.setState({ testDetails: updatedTestDetails });\r\n    }\r\n\r\n    togglemodal = () => {\r\n        this.props.onGetPatientUpdatedAddress(this.props.user.id);\r\n        this.setState(prevState => ({\r\n          modal: !prevState.modal,\r\n          callAddressUpdateAPI: true\r\n        }));\r\n    }\r\n\r\n    testToggleModal = () => {\r\n        this.props.onGetPatientUpdatedAddress(this.props.user.id);\r\n        this.setState(prevState => ({\r\n          testModal: !prevState.testModal\r\n        }));\r\n    }\r\n\r\n    yescloseToggle = () => {\r\n        this.setState(prevState => ({\r\n            pinmodal: !prevState.pinmodal\r\n        }));\r\n\r\n        this.setState({\r\n            yesToggle: true,\r\n            noLGCharge: true,\r\n        })\r\n    }\r\n\r\n    nocloseToggle = () => {\r\n        this.setState(prevState => ({\r\n            pinmodal: !prevState.pinmodal\r\n        }));\r\n\r\n        this.setState({\r\n            yesToggle: false\r\n        })\r\n    }\r\n\r\n    addSample = () => {\r\n        this.setState(previousState => ({\r\n            testDetails: [...previousState.testDetails, {\r\n                value: null,\r\n                selectedSample: '',\r\n                selectedTests: []\r\n            }],\r\n        }));\r\n    }\r\n\r\n    toggle = (tabno) => {\r\n        switch(tabno) {\r\n            case 0:\r\n                this.setState(prevState => ({\r\n                    toggler1: !prevState.toggler1\r\n                }));\r\n                break;\r\n            case 1:\r\n                this.setState(prevState => ({\r\n                    toggler2: !prevState.toggler2\r\n                }));\r\n                break;\r\n            case 2:\r\n                this.setState(prevState => ({\r\n                    toggler3: !prevState.toggler3\r\n                }));\r\n                break;\r\n            case 3:\r\n                this.setState(prevState => ({\r\n                    toggler4: !prevState.toggler4,\r\n                    // orderOpenToggler: !prevState.orderOpenToggler\r\n                }));\r\n                break;\r\n        }\r\n    }\r\n\r\n    handlePinVerification = (e) => {\r\n        this.setState({\r\n            pincode: e.target.value,\r\n            address: {\r\n                ...this.state.address,\r\n                pincode: e.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    pinVerification = (event) => {\r\n        event.preventDefault();\r\n        \r\n        this.props.onPinVerification(this.state.address.pincode);\r\n\r\n        this.setState({\r\n            visible: true\r\n          }, () => {\r\n            window.setTimeout(() => {\r\n              this.setState({\r\n                visible: false\r\n              })\r\n            }, 5000)\r\n          });\r\n\r\n        this.setState(prevState => ({\r\n            pinmodal: !prevState.pinmodal,\r\n            noLGCharge: false,\r\n        }))\r\n    }\r\n\r\n    removeSample = (item, key) => {\r\n\r\n        const updatedTestDetailsafterdelete = this.state.testDetails;\r\n\r\n        updatedTestDetailsafterdelete.splice(key, 1);\r\n\r\n        this.setState({\r\n            testDetails: updatedTestDetailsafterdelete\r\n        });\r\n    }\r\n\r\n    checkTestDetails = (testDetails) => {\r\n        let flag = null;\r\n        \r\n            testDetails.forEach(function (test) {\r\n                if(flag || flag === null) {\r\n                    if(test.selectedSample !== \"\" && test.selectedTests.length !== 0) {\r\n                        flag = true;\r\n                    }\r\n                    else {\r\n                        flag = false;\r\n                    }\r\n                }   \r\n                });\r\n                \r\n        console.log(flag);\r\n        return flag;\r\n    \r\n    }\r\n\r\n    checkAddressDetails = () => {\r\n\r\n        let flag = null;\r\n        if(flag || flag === null){\r\n                if(this.state.form.line1 !== \"\" && this.state.form.city !== \"\" && this.state.form.pincode !== \"\" ) {\r\n                    flag = true;\r\n                }\r\n                else {\r\n                    flag = false;\r\n                }\r\n        }\r\n        console.log(flag);\r\n        return flag;\r\n    }\r\n\r\n    handleCourierCost = () => {\r\n        this.setState(prevState => ({\r\n            courierCost: !prevState.courierCost\r\n        }))\r\n    }\r\n\r\nrender(){\r\n\r\n// let orderOpenTogglerValue = this.props.location.state.orderOpenToggler;\r\n\r\nlet testListArr = [];\r\n\r\nthis.state.testDetails.map((el) => {\r\ntestListArr.push(el.selectedTests);\r\n})\r\n\r\nlet testTotalCharge = [].concat.apply([],testListArr).reduce((acc, test) => {\r\nreturn acc + Number(test.price)\r\n}, 0)\r\n\r\nlet params = queryString.parse(this.props.location.search);\r\nconsole.log(params);\r\n\r\n\r\nlet charge = this.props.lcdata;\r\nlet stestdata = this.props.stestdata;\r\nconsole.log (this.props.pstatusdata);\r\n\r\nconsole.log(this.props.patientupdatedAddData);\r\nreturn(\r\n\r\n<React.Fragment>\r\n\r\n    {params.paymentStatus === \"SUCCESS\" ? \r\n    <PatientPaymentSuccess data={params} userId={this.props.user.id}/> :\r\n    params.paymentStatus === \"FAILURE\" ? \r\n    <PatientPaymentFailure data={params} /> :\r\n\r\n    this.props.pordermessage ? \r\n     <PatientPaymentForm message={this.props.pordermessage} loading={this.state.loading}/>:\r\n    // history.push(\"/patientPayment\") :    \r\n\r\n    <React.Fragment>\r\n    <TitlebarComponent loggedinpatient={this.props.isAuthenticated ? true : false} />\r\n    <Navbar patientHome={this.props.isAuthenticated ? true : false} />\r\n    <Container>\r\n        <Row className=\"mt-5\">\r\n            <Col>\r\n                <h2>Welcome, {this.props.user.firstName + ' ' + this.props.user.lastName}</h2>\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"mt-5\" style={{cursor: 'pointer'}}>\r\n            <Col>\r\n<div className=\"profile-tab\" id=\"toggler\" onClick={() => this.toggle(0)}>{this.state.toggler1 ? <i class=\"fa fa-minus mr-1\"></i> : <i class=\"fa fa-plus mr-1\"></i>} Patient Profile </div>\r\n    <UncontrolledCollapse toggler=\"toggler\">\r\n    <Card className=\"collapse-box\">\r\n        <CardBody>\r\n            <Row>\r\n                {/* <Col md={12} className=\"text-right\"><i class=\"fa fa-edit\" onClick={this.togglemodal}></i></Col> */}\r\n                <Col md={6} className=\"mt-3\"><b>Patient Name:</b> {this.props.user.firstName + ' ' + this.props.user.lastName}</Col>\r\n                <Col md={6} className=\"mt-3\"><b>Mobile No.: </b>{this.props.user.contactNo}</Col>\r\n                <Col md={6} className=\"mt-3\"><b>Date of birth:</b> {this.props.user.dob}</Col>\r\n                <Col md={6} className=\"mt-3\"><b>Email Id:</b> {this.props.user.emailId}</Col>\r\n                <Col md={6} className=\"mt-3\"><b>Gender:</b> {this.props.user.gender}</Col>\r\n            </Row><hr/>\r\n            {this.props.patientupdatedAddsuccess ?\r\n            <Row>\r\n                <Col md={12} className=\"text-right\">\r\n                <Button className=\"button-lightred\" size=\"md\" style={{width: '190px', cursor: 'pointer'}}  onClick={this.togglemodal}>Edit Address</Button>\r\n                </Col>\r\n                <Col md={6} className=\"mt-3\"><b>Address Line 1:</b> {this.props.patientupdatedAddData.line1}</Col>\r\n                <Col md={6} className=\"mt-3\"><b>Address Line 2: </b>{this.props.patientupdatedAddData.line2}</Col>\r\n                <Col md={6} className=\"mt-3\"><b>City:</b> {this.props.patientupdatedAddData.city}</Col>\r\n                {/* <Col md={6} className=\"mt-3\"><b>State:</b> {this.props.user.address.state}</Col> */}\r\n                <Col md={6} className=\"mt-3\"><b>Pincode:</b> {this.props.patientupdatedAddData.pincode}</Col>\r\n            </Row>\r\n            : null }\r\n\r\n            <Row className=\"mt-5\">\r\n                <Col md={12}> \r\n                    {this.props.addEditsuccess ? \r\n                        <Alert color=\"success\" isOpen={this.state.visible}>{this.props.addEditMessage}</Alert> \r\n                    : null }\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* <Row className=\"mt-5\">\r\n                <Col className=\"text-center\">\r\n                    <Alert color=\"danger\">\r\n                    The final diagnosis report will be generated on the registered patient name ; Incase the order is being placed for a different patient, please register a new patient.\r\n                    </Alert>\r\n                    <Button className=\"button-lightred\" size=\"md\" style={{width: '190px'}} onClick={this.props.ongetReports}>Register New User</Button>{' '}\r\n                </Col>\r\n            </Row> */}\r\n\r\n        </CardBody>\r\n    </Card>\r\n    </UncontrolledCollapse>\r\n    </Col>\r\n        </Row>\r\n\r\n        <ModalComponent modal={this.state.modal} togglemodal={this.togglemodal} submit={this.submitHandler} title=\"Edit Address Details\" className=\"patient-profile-modal\">\r\n            <Form onSubmit={this.submitHandler}>\r\n                <p className=\"red-font mb-4\">*Fields are mandatory</p>\r\n                <FormGroup>\r\n                <Label for=\"line1\">*Address Line 1</Label>\r\n                <Input required type=\"text\" value={this.state.form.line1} name=\"line1\" placeholder=\"Line 1\" onChange={(event) => this.profileinputChangedHandler(event)} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                <Label for=\"line2\">Address Line 2</Label>\r\n                <Input type=\"text\" value={this.state.form.line2} name=\"line2\" placeholder=\"Line 2\" onChange={(event) => this.profileinputChangedHandler(event)} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                <Label for=\"city\">*City</Label>\r\n                <Input required type=\"text\" value={this.state.form.city} name=\"city\" placeholder=\"City\" onChange={(event) => this.profileinputChangedHandler(event)} />\r\n                </FormGroup>\r\n                {/* <FormGroup>\r\n                <Label for=\"state\">State</Label>\r\n                <Input required type=\"text\" value={this.state.form.state} name=\"state\" placeholder=\"State\" onChange={(event) => this.profileinputChangedHandler(event)}/>\r\n                </FormGroup> */}\r\n                <FormGroup>\r\n                <Label for=\"pincode\">*Pincode</Label>\r\n                <Input required type=\"text\" value={this.state.form.pincode} name=\"pincode\" placeholder=\"Pincode\" onChange={(event) => this.profileinputChangedHandler(event)}/>\r\n                </FormGroup>\r\n                <Button className=\"button-lightred mt-0\" size=\"md\" style={{width: '120px'}} disabled={this.checkAddressDetails() ? false : true}>Submit</Button>{' '}\r\n                <Button color=\"secondary\" onClick={this.togglemodal}>Cancel</Button>\r\n            </Form>\r\n        </ModalComponent>\r\n\r\n        <ModalWishlistComponent confirmModal={this.state.testModal} togglemodalEnroll={this.testToggleModal} className=\"trainee-modal\">\r\n            <Row>\r\n                <Col md={3} xs={2} className=\"text-center\"><b>Sample Name</b></Col>\r\n                <Col md={6} xs={7} className=\"text-center\"><b>Test Name</b></Col>\r\n                <Col md={3} xs={3} className=\"text-center\"><b>Amount</b></Col>\r\n            </Row><hr/>\r\n\r\n            {this.state.testDetails ? this.state.testDetails.map(item => {\r\n                return item ? item.selectedTests.map(data => {\r\n                    return <React.Fragment>\r\n                    <Row className='mt-4'>\r\n                    <Col md={3} xs={2} className=\"text-center\">{data.sample.sampleName}</Col>\r\n                    <Col md={6} xs={7} className=\"text-center\">{data.testName}</Col>\r\n                    {data.price ?\r\n                    <Col md={3} xs={3} className=\"text-center\">&#8377; {(data.price).toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</Col>\r\n                    : null }\r\n                    </Row><hr/>\r\n                    </React.Fragment>\r\n                }) : null\r\n                \r\n            }) : <Spinner color=\"danger\" />\r\n            }\r\n\r\n            {this.props.patientupdatedAddsuccess ?\r\n                this.props.patientupdatedAddData.islogisticserviceable === 1 && this.props.lcdata && this.state.testDetails.length !== 0 && testTotalCharge !== 0 && this.state.courierCost === false? \r\n                <p className=\"text-center mt-4\" style={{fontWeight: 'bold'}}>Total Charge: &#8377; {testTotalCharge.toLocaleString(navigator.language, { minimumFractionDigits: 0 })} (Test Charge) + &#8377; {charge.value} (Logistic Charge) = &#8377; {(Number(charge.value) + Number(testTotalCharge)).toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</p>\r\n                :  null\r\n            : null }\r\n\r\n            {this.props.patientupdatedAddsuccess ?\r\n                (this.props.patientupdatedAddData.islogisticserviceable === 0 && this.props.lcdata && this.state.testDetails.length !== 0 && testTotalCharge !== 0) || \r\n                (this.props.patientupdatedAddData.islogisticserviceable === 1 && this.props.lcdata && this.state.testDetails.length !== 0 && testTotalCharge !== 0 && this.state.courierCost === true)? \r\n                <p className=\"text-center mt-4\" style={{fontWeight: 'bold'}}>Total Charge : &#8377; {testTotalCharge.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</p> \r\n                : null\r\n            : null }\r\n\r\n            <hr/>\r\n            \r\n            {this.props.patientupdatedAddsuccess && this.state.courierCost === false && this.props.patientupdatedAddData.islogisticserviceable === 1? \r\n            <React.Fragment>\r\n            <p className=\"mt-4 ml-3 mr-3\" style={{marginBottom: '0px'}}>The sample pick-up is requested from : </p>\r\n            <p className=\"ml-3 mr-3\" style={{fontWeight: 'bold', marginBottom: '0px'}}>{this.props.patientupdatedAddData.line1}, { \" \" }\r\n            {this.props.patientupdatedAddData.line2 ? this.props.patientupdatedAddData.line2 : null} \r\n            {this.props.patientupdatedAddData.line2 ? \", \" : null}  \r\n            {this.props.patientupdatedAddData.city}, { \" \" } {this.props.patientupdatedAddData.pincode}.</p>\r\n            <p className=\"ml-3 mr-3\"><i style={{fontSize: '12px'}}>(Please continue if the address is fine or if you need to edit the address for \r\n            sample pick-up, edit the address in patient profile section.)</i></p><hr/>\r\n            </React.Fragment>\r\n            : null\r\n            } \r\n            \r\n            {this.props.patientupdatedAddsuccess && this.state.courierCost === false && this.props.patientupdatedAddData.islogisticserviceable === 1 ?  \r\n            <p className=\"mt-4 ml-3 mr-3\"><b>Note: </b>Sample will be pickup within 2 working days, between 4:00 PM - 7:00 PM.</p>\r\n            : null\r\n            }\r\n\r\n            <p className=\"mt-4 ml-3 mr-3\">Before confirming order please go through \r\n            <a href=\"https://tatatrustbucket.s3.ap-south-1.amazonaws.com/tatatrustspdf/Ordering+a+Test.pdf\" target=\"_blank\"> Terms & Conditions</a>\r\n            .</p>\r\n\r\n            <Row>\r\n                <Col md={12} className=\"mt-4 text-center\">\r\n                    <Button onClick={this.submitTestDetails} className=\"button-lightred\" size=\"md\" style={{width: '190px', cursor: 'pointer'}} >Confirm</Button>\r\n                </Col>\r\n            </Row> \r\n\r\n        </ModalWishlistComponent>\r\n\r\n        <Row className=\"mt-3\" style={{cursor: 'pointer'}}>\r\n\r\n\r\n            <Col>\r\n                <div className=\"profile-tab\" id=\"toggler1\" onClick={() => this.toggle(1)}>{this.state.toggler2 ? <i class=\"fa fa-minus mr-1\"></i> : <i class=\"fa fa-plus mr-1\"></i> } Order a test </div>\r\n            <UncontrolledCollapse toggler=\"toggler1\">\r\n            <Card className=\"collapse-box\">\r\n                <CardBody>\r\n\r\n                {/* <React.Fragment>\r\n                <Row>\r\n                    <Col md={7} className=\"mt-3\">\r\n                        <FormGroup>\r\n                            <Label for=\"address\"><b>Please enter your address for sample pickup:</b></Label>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row form>\r\n                    <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n                        <FormGroup>\r\n                        <Label for=\"email\">Line 1</Label>\r\n                        <Input required maxlength=\"45\" type=\"text\" value={this.state.address.line1} name=\"line1\" placeholder=\"Line 1\" onChange={(event) => this.addressInputChangedHandler(event)}/>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n                        <FormGroup>\r\n                            <Label for=\"address\">Line 2</Label>\r\n                            <Input maxlength=\"45\" required type=\"text\" value={this.state.address.line2} name=\"line2\" placeholder=\"Line 2\" onChange={(event) => this.addressInputChangedHandler(event)}/>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md={3} className=\"ml-md-3 ml-lg-5 mr-md-3 mr-lg-5\">\r\n                    <FormGroup>\r\n                            <Label for=\"mobile\">City</Label>\r\n                            <Input required maxlength=\"45\" type=\"text\" value={this.state.address.city} name=\"city\" placeholder=\"City\" onChange={(event) => this.addressInputChangedHandler(event)} />\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n                        <FormGroup>\r\n                        <Label for=\"email\">State</Label>\r\n                        <Input required maxlength=\"45\" type=\"text\" value={this.state.address.state} name=\"state\" placeholder=\"State\" onChange={(event) => this.addressInputChangedHandler(event)}/>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n                        <FormGroup>\r\n                            <Label for=\"address\">Pincode</Label>\r\n                            <Input required maxlength=\"6\" type=\"text\" value={this.state.address.pincode} name=\"pincode\" placeholder=\"Pincode\" onChange={(event) => this.addressInputChangedHandler(event)}/>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row> <hr/>\r\n                </React.Fragment> */}\r\n                \r\n        {this.state.testDetails ? this.state.testDetails.map((item, key) => \r\n        <React.Fragment>\r\n        <Row>\r\n        <Col md={1}>\r\n            <i class=\"fa fa-trash mr-1 pr-3 pt-5 pb-5 pull-right\" style={{fontSize: '20px'}} onClick={() => this.removeSample(item, key)}></i>\r\n        </Col>\r\n        {this.props.stdata ? \r\n        <Col md={3} className=\"mt-3\">\r\n            <FormGroup>\r\n                <Label for=\"exampleSelect\"><b>Select Department:</b></Label>\r\n                    <Input type=\"select\" name=\"selectedSample\" id=\"sampleSelect\" onChange={(event) => this.sampleInputChangedHandler(event, key)}>\r\n                    <option>Select Sample</option>\r\n                    {this.props.stdata.map((el) => <option value={el.id}>{el.sampleName}</option> )}    \r\n                    </Input>\r\n            </FormGroup>\r\n        </Col>\r\n        : null }\r\n        {this.props.stestdata ?\r\n        <Col md={3} className=\"mt-3\">\r\n            <Label for=\"exampleSelect\" id=\"selectTestLabelPatientHome\"><b>Select Tests:</b></Label>\r\n            <PatientPicky valueData={item.selectedTests} optionData={this.props.stestdata} selectMultipleOption={this.selectMultipleOption}\r\n            keyValue={key}/>\r\n        </Col>\r\n        : null }\r\n        <Col md={5}>\r\n            {item.selectedTests.length !== 0 ? <Table bordered>\r\n                <thead>\r\n                    <tr>\r\n                    <th>Sr No.</th>\r\n                    <th>Test Name</th>\r\n                    <th>Test Charges</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {item.selectedTests.map((test, key) => \r\n                    <tr>\r\n                    <td>{key + 1}</td>\r\n                    <td>{test.testName}</td>\r\n                    <td>{test.price}</td>\r\n                    </tr>)\r\n                }\r\n                </tbody>\r\n            </Table> : null \r\n            }\r\n        </Col>\r\n        </Row>\r\n    </React.Fragment>\r\n        // <PatientPicky stdata={this.props.stdata} removeSample={this.removeSample} sampleInputChangedHandler={this.sampleInputChangedHandler} stestdata={this.props.stestdata}\r\n        //               selectMultipleOption={this.selectMultipleOption} keyValue={key} item={item} testDetails={this.state.testDetails}/> \r\n        ): null }\r\n\r\n        {(testTotalCharge !== 0) ?\r\n        <Row>\r\n            <Col md={6} className=\"mt-3 text-right\">\r\n            </Col>\r\n            <Col md={6} className=\"mt-3\">\r\n                <Row>\r\n                    <Col md={9}><b>Total</b></Col>\r\n                    <Col md={3}><b>&#8377; {testTotalCharge.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</b></Col>\r\n                </Row>\r\n\r\n            </Col>\r\n        </Row>\r\n        : null}\r\n                    \r\n      \r\n            <Row>\r\n                <Col md={12} className=\"mt-3 text-right\">\r\n                    <Button className=\"button-lightred\" size=\"md\" style={{width: '190px', cursor: 'pointer'}}  onClick={this.addSample}>Add Test(s)</Button>{' '}\r\n\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n\r\n\r\n            {/* <Row>\r\n                <Col md={5} className=\"mt-3\">\r\n                    <FormGroup>\r\n                        <Label for=\"pincode\"><b>Enter your pincode to check if your area is serviceable</b></Label>\r\n                        <Input required maxLength=\"6\" type=\"text\" name=\"pincode\" onChange={(e) => this.handlePinVerification(e)} value={this.state.address.pincode} placeholder=\"Enter Pincode\" />\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col md={2} className=\"mt-5\">\r\n                <Button onClick={(event) => this.pinVerification(event)} className=\"button-lightred\" style={{marginTop: '0', cursor: 'pointer'}} >Verify</Button>\r\n                </Col>\r\n            </Row> */}\r\n\r\n\r\n                {/* {this.props.pinsuccess ? \r\n                <Alert color=\"success\" isOpen={this.state.visible}>Verification Successfull, requested area is serviceable.</Alert> \r\n                : null }\r\n\r\n                {this.props.pindata ? \r\n                <Alert color=\"danger\" isOpen={this.state.visible}>Invalid pincode.</Alert> \r\n                : null }\r\n                \r\n                {this.props.pinfailure ? \r\n                <Alert color=\"danger\" isOpen={this.state.visible}>Verification Unsuccessfull, requested area is not serviceable.</Alert>\r\n                : null } <hr/> */}\r\n                \r\n                {/* {this.props.pinsuccess || (this.props.pinfailure && this.state.yesToggle) ?\r\n                 this.state.noLGCharge ? \r\n                <p className=\"text-center\" style={{fontWeight: 'bold'}}>Total Charge : &#8377; {testTotalCharge.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</p> :\r\n                <p className=\"text-center\" style={{fontWeight: 'bold'}}>Total Charge: Test Charge + &#8377; {charge.value} (Logistic Charge) = &#8377; {(Number(charge.value) + Number(testTotalCharge)).toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</p>\r\n                : null } */}\r\n                \r\n\r\n{this.props.patientupdatedAddsuccess ?\r\n        <Row>\r\n            <Col>\r\n            {this.props.patientupdatedAddData.islogisticserviceable === 0 ?\r\n            <p className=\"mb-5 mt-5\"><b style={{fontSize: '15px'}}>Centre for Oncopathology's sample pickup services are not available at your address, in pincode - {this.props.patientupdatedAddData.pincode}. \r\n            Please use any courier service to send the sample to the Centre for Oncopathology, Mumbai.</b></p>\r\n            : null }\r\n\r\n            {this.props.patientupdatedAddData.islogisticserviceable === 1 ?\r\n            <React.Fragment>\r\n             <p className=\"mt-5\"><b style={{fontSize: '15px'}}>Centre for Oncopathology offers sample pickup services from your address in pincode - {this.props.patientupdatedAddData.pincode}. <br/><br/>\r\n                 If you don’t wish to use our pickup services, Select the \"No pickup service required\" checkbox below.</b></p>   \r\n            <Row className=\"mb-5\">\r\n            <Col md={12}>\r\n            <FormGroup check>\r\n            <Label check>\r\n                <Input type=\"checkbox\" value={this.state.courierCost} onChange={this.handleCourierCost}/>{' '}\r\n                No pickup service required \r\n            </Label>\r\n\r\n            </FormGroup>\r\n            {/* {this.state.courierCost ?\r\n            <p className=\"red-font mt-3 ml-3\">User to courier on their own.</p>\r\n            : null} */}\r\n            </Col>\r\n            </Row>\r\n            \r\n            </React.Fragment>\r\n            : null }\r\n            </Col>\r\n        </Row>\r\n        : null }\r\n\r\n               {this.props.patientupdatedAddsuccess ?\r\n                    this.props.patientupdatedAddData.islogisticserviceable === 1 && this.props.lcdata && this.state.testDetails.length !== 0 && testTotalCharge !== 0 && this.state.courierCost === false? \r\n                    <p className=\"text-center mt-3\" style={{fontWeight: 'bold'}}>Total Charge: &#8377; {testTotalCharge.toLocaleString(navigator.language, { minimumFractionDigits: 0 })} (Test Charge) + &#8377; {charge.value} (Logistic Charge) = &#8377; {(Number(charge.value) + Number(testTotalCharge)).toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</p>\r\n                    :  null\r\n                : null }\r\n\r\n                {this.props.patientupdatedAddsuccess ?\r\n                    (this.props.patientupdatedAddData.islogisticserviceable === 0 && this.props.lcdata && this.state.testDetails.length !== 0 && testTotalCharge !== 0) || \r\n                    (this.props.patientupdatedAddData.islogisticserviceable === 1 && this.props.lcdata && this.state.testDetails.length !== 0 && testTotalCharge !== 0 && this.state.courierCost === true)? \r\n                    <p className=\"text-center mt-3\" style={{fontWeight: 'bold'}}>Total Charge : &#8377; {testTotalCharge.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</p> \r\n                    : null\r\n                : null }\r\n\r\n                {/* {this.props.pinsuccess || (this.props.pinfailure && this.state.yesToggle) ?  */}\r\n                <Row>\r\n                    <Col md={12} className=\"mt-3 text-center\">\r\n                        <Button onClick={this.testToggleModal} disabled={this.checkTestDetails(this.state.testDetails) ? false : true} className=\"button-lightred\" size=\"md\" style={{width: '190px', cursor: 'pointer'}} >Continue</Button>\r\n                    </Col>\r\n                </Row> \r\n                {/* : null } */}\r\n\r\n                {this.state.loading ? \r\n                <Row>\r\n                <Col md={12} className=\"mt-3 text-center\">\r\n                    <Spinner animation=\"border\" variant=\"danger\" className=\"text-center\" />\r\n                    <p style={{color: 'red'}}>Processing Your Request. Please do not refresh or close the tab.</p>\r\n                </Col>\r\n                </Row>\r\n                    : null}\r\n\r\n                {this.props.pordersuccess ? \r\n                    <h4 className=\"text-center green-font\">Successfully Ordered</h4> : null\r\n                }\r\n\r\n            {this.props.pordererror ? \r\n            <h4 className=\"text-center\" style={{color: 'red'}}>Order not completed. Please try again.</h4>    : null\r\n            }\r\n            </CardBody>\r\n        </Card>\r\n        </UncontrolledCollapse>\r\n        </Col>\r\n    </Row>\r\n        <Row className=\"mt-3\" style={{cursor: 'pointer'}}>\r\n            <Col>\r\n            <div className=\"profile-tab\" id=\"toggler2\" onClick={() => this.toggle(2)}>{this.state.toggler3 ? <i class=\"fa fa-minus mr-1\"></i> : <i class=\"fa fa-plus mr-1\"></i> } Track Sample </div>\r\n            <UncontrolledCollapse toggler=\"toggler2\">\r\n            <Card className=\"collapse-box\">\r\n                <CardBody>\r\n                    <TrackSampleTable trackData={this.props.phistoryData} pstatusdata={this.props.pstatusdata}/>\r\n                </CardBody>\r\n            </Card>\r\n            </UncontrolledCollapse>\r\n            \r\n            </Col>\r\n        </Row>\r\n        <Row className=\"mt-3 mb-5\" style={{cursor: 'pointer'}}>\r\n            <Col>\r\n            {/* {orderOpenTogglerValue ? \r\n            <div className=\"profile-tab\" id=\"toggler3\" onClick={() => this.toggle(3)}>{this.state.orderOpenToggler ? <i class=\"fa fa-minus mr-1\"></i> : <i class=\"fa fa-plus mr-1\"></i> } Order History </div>\r\n            :  */}\r\n            <div className=\"profile-tab\" id=\"toggler3\" onClick={() => this.toggle(3)}>{this.state.toggler4 ? <i class=\"fa fa-minus mr-1\"></i> : <i class=\"fa fa-plus mr-1\"></i> } Order History </div>\r\n            {/* } */}\r\n            {/* <div className=\"profile-tab\" id=\"toggler3\" onClick={() => this.toggle(3)}>{this.state.toggler4 ? <i class=\"fa fa-minus mr-1\"></i> : <i class=\"fa fa-plus mr-1\"></i> } Order History </div> */}\r\n            <UncontrolledCollapse toggler=\"toggler3\">\r\n            <Card className=\"collapse-box\">\r\n                <CardBody>\r\n                    <PatientOrderHistory phistoryData={this.props.phistoryData} patientupdatedAddData={this.props.patientupdatedAddData}/>\r\n                </CardBody>\r\n            </Card>\r\n            </UncontrolledCollapse>\r\n            \r\n            </Col>\r\n        </Row>\r\n        \r\n        <Row noGutters={true} className=\"mb-5\">\r\n        <Col xs=\"12\"><img src={logo} className=\"tthomelogo ml-0 ml-md-5\" style={{float: 'right'}}/></Col>\r\n        </Row>\r\n        \r\n        {this.props.pinfailure ?\r\n        <ModalComponent modal={this.state.pinmodal} pinVerification={this.pinVerification} className=\"trainee-modal\">\r\n            <h5>The area is un-serviceable. If you still want to continue, Kindly send sample to XYZ address.</h5>\r\n            <Button color=\"success\" onClick={this.yescloseToggle}>Yes</Button>\r\n            <Button color=\"danger\" onClick={this.nocloseToggle} className=\"ml-3\">No</Button>\r\n        </ModalComponent>\r\n        : null }\r\n\r\n    </Container>\r\n    </React.Fragment>\r\n    }\r\n</React.Fragment>\r\n)\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error,\r\n        success: state.success,\r\n        data: state.data,\r\n        userTypeId: state.userTypeId,\r\n        isAuthenticated: state.token !== null,\r\n        token: state.token,\r\n        user: state.user,\r\n        pordersuccess: state.pordersuccess,\r\n        pordermessage: state.pordermessage,\r\n        pordererror: state.pordererror,\r\n        pinsuccess: state.pinsuccess,\r\n        pindata: state.pindata,\r\n        pinfailure: state.pinfailure,\r\n        phistoryData: state.phistoryData,\r\n        lcsuccess: state.lcsuccess,\r\n        lcdata: state.lcdata,\r\n        stsuccess: state.stsuccess,\r\n        stdata: state.stdata,\r\n        stestsuccess: state.stestsuccess,\r\n        stestdata: state.stestdata,\r\n        addEditsuccess: state.addEditsuccess,\r\n        addEditMessage: state.addEditMessage,\r\n        patientupdatedAddsuccess: state.patientupdatedAddsuccess,\r\n        patientupdatedAddData: state.patientupdatedAddData,\r\n        pstatusdata: state.pstatusdata,\r\n        // isAuthenticated: state.token !== null,\r\n        // authRedirectPath: state.auth.authRedirectPath\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n        ongetReports: () => dispatch(actions.getReports()),\r\n        onPinVerification: (pincode) => dispatch(actions.pinVerification(pincode)),\r\n        onPatientSampleSubmit: (patientTestDetails) => dispatch(actions.patientTestSampleDetails(patientTestDetails)),\r\n        onpatientOrderReset: () => dispatch(actions.patientOrderReset()),\r\n        onPatientOrderList: (id) => dispatch(actions.patientOrderData(id)),\r\n        onLogisticCost: () => dispatch(actions.logisticCost()),\r\n        onSampleType: () => dispatch(actions.sampleType()),\r\n        onSampleTest: (id) => dispatch(actions.sampleTest(id)),\r\n        onPatientEditAddress: (updatedAddress) => dispatch(actions.patientEditAddress(updatedAddress)),\r\n        onGetPatientUpdatedAddress: (id) => dispatch(actions.getPatientUpdatedAddress(id)),\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientHome);\r\n","import React from 'react';\r\nimport { Collapse, Table, Row, Col, ListGroup, ListGroupItem} from 'reactstrap';\r\nimport Picky from \"react-picky\";\r\nimport { convertToDateYYYYMMDD, convertToTimeHHMMSS, convertToDateDDMMYYYY } from '../../functions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass TrackSampleCard extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {collapse : false};\r\n    }\r\n\r\n    toggleCard = () => {\r\n        this.setState({ collapse: !this.state.collapse });     \r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <React.Fragment>\r\n            <Row className=\"mt-3\">\r\n               <Col md={1} xs={3} className=\"text-center\">{this.props.order.srno}</Col>\r\n               <Col md={1} xs={3} className=\"text-center\">{this.props.order.id}</Col>\r\n               <Col md={2} xs={3} className=\"text-center\">{convertToDateDDMMYYYY(this.props.order.createdOn)}</Col>\r\n               {this.props.order.parceledByCreditPartner === 1 ? \r\n               <Col md={2} xs={4} className=\"text-center\">Not Applicable</Col> \r\n               : \r\n               this.props.order.awbNo !== null && this.props.order.logisticsStatus ? \r\n               this.props.order.logisticsStatus.status.status === \"Incorrect Waybill number or No Information\" && this.props.order.pickUpTime ? \r\n               <Col>Sample pickup scheduled on {convertToDateDDMMYYYY(this.props.order.pickUpTime)} between 4:00 PM to 7:00 PM</Col> :\r\n               <Col md={2} xs={4} className=\"text-center\">{this.props.order.logisticsStatus.status.status}</Col> \r\n               : null\r\n\r\n              //  this.props.order.awbNo !== null ?\r\n              //   this.props.order.logisticsStatus ? \r\n              //   this.props.order.logisticsStatus.status.status === \"Incorrect Waybill number or No Information\" ?\r\n              //   this.props.order.pickUpTime ? <Col>Sample pickup scheduled on {convertToDateDDMMYYYY(this.props.order.pickUpTime)} at {convertToTimeHHMMSS(this.props.order.pickUpTime)}</Col>: \r\n              //   <Col>-</Col> : \r\n              //   <Col md={2} xs={4} className=\"text-center\">{this.props.order.logisticsStatus.status.status}</Col> : \r\n              //   <Col>-</Col>  \r\n              //  :\r\n              //  this.props.order.parceledByCreditPartner === 1 || this.props.order.parceledByCreditPartner === 0?\r\n              //  <Col md={2} xs={4} className=\"text-center\">{this.props.order.logisticStatus.status}</Col> :\r\n              //  <Col md={2} xs={4} className=\"text-center\">{this.props.order.logisticsStatus}</Col>\r\n               }\r\n               {/* {this.props.order.parceledByCreditPartner === 0 ?\r\n               <Col md={2} xs={4} className=\"text-center\">{this.props.order.logisticStatus.status}</Col> :\r\n               <Col md={2} xs={4} className=\"text-center\">{this.props.order.logisticsStatus}</Col>\r\n               } */}\r\n               {/* {this.props.order.isLogisticServiceable === 1 ? \r\n               <Col md={2} xs={4} className=\"text-center\">{this.props.order.logisticsStatus}</Col> :\r\n               <Col md={2} xs={4} className=\"text-center\">NA</Col>\r\n               } */}\r\n               <Col md={6} xs={12} className=\"text-center\">\r\n               <div onClick={this.toggleCard}>\r\n               <Collapse toggler=\"togglerinner\" isOpen={this.state.collapse}>\r\n                {this.props.order.hasOwnProperty('creditPartnerPatients') ? this.props.order.creditPartnerPatients.map((orderPatient) => \r\n                    <React.Fragment>\r\n                    {/* {this.props.order.sampleStatus.desc === \"Sample Not Received\" ? \r\n                  <Table bordered style={{tableLayout: 'fixed', margin: 'auto'}}>\r\n                  <thead>\r\n                      <tr>\r\n                          <th colSpan={1} style={{backgroundColor: 'rgba(204, 204, 204, 0.6509803921568628)'}}>{orderPatient.firstName + \" \" + orderPatient.lastName}</th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                      <tr>\r\n                        <td>{this.props.order.sampleStatus.desc}</td>\r\n                      </tr>\r\n                  </tbody>\r\n                </Table>  : */}\r\n                  \r\n                   { this.props.order.logisticsStatus === \"SHIPMENT DELIVERED\" || (this.props.order.parceledByCreditPartner === 1 && this.props.order.logisticStatus.status) || this.props.order.parceledByCreditPartner === 0? \r\n                    <Table bordered style={{tableLayout: 'fixed', margin: 'auto'}}>\r\n                      {orderPatient.creditPartnerDetails ?\r\n                      orderPatient.creditPartnerDetails.sampleStatus.id === 2 ?\r\n                      <React.Fragment>\r\n                      <thead>\r\n                      <tr>\r\n                          <th colSpan={1} style={{backgroundColor: 'rgba(204, 204, 204, 0.6509803921568628)'}}>{orderPatient.firstName + \" \" + orderPatient.lastName}</th>\r\n                      </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>{orderPatient.creditPartnerDetails.sampleStatus.desc}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                      </React.Fragment> :\r\n                      <React.Fragment>\r\n                        <thead>\r\n                            <tr>\r\n                                <th colSpan={2} style={{backgroundColor: 'rgba(204, 204, 204, 0.6509803921568628)'}}>{orderPatient.firstName + \" \" + orderPatient.lastName}</th>\r\n                            </tr>\r\n                        <tr>\r\n                          <th>Test Name</th>\r\n                          <th>Status</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {orderPatient.livehealthStatus ? orderPatient.livehealthStatus.map((t) =>\r\n                            <tr>\r\n                              <td style={{wordWrap: 'break-word'}}>{t[\"Test Name\"]}</td>\r\n                              <td>{t.status}</td>\r\n                            </tr>\r\n                          ) : null}\r\n                        \r\n                          </tbody>\r\n                        </React.Fragment> : null}\r\n                      </Table> : \"-\" }\r\n                    </React.Fragment>\r\n                    ) : null}\r\n                </Collapse>\r\n                {this.state.collapse ? \r\n                    <i class=\"fa fa-angle-double-up fa-2x\"></i> : \r\n                    <i class=\"fa fa-angle-double-down fa-2x\"></i>\r\n                }\r\n               </div>\r\n               </Col>\r\n            </Row>\r\n            <hr/>\r\n        </React.Fragment>  \r\n        );\r\n    }\r\n\r\n}\r\n  \r\n\r\nexport default TrackSampleCard;\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport { Container, Table } from 'reactstrap';\r\nimport { Spinner, Row, Col } from 'reactstrap';\r\nimport { InputGroup, InputGroupText, InputGroupAddon, Input, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport HomeApi from '../../../services/API/HomeApi';\r\nimport { sortByColumn } from '../../functions';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../redux/actions/actions';\r\nimport { convertToDateYYYYMMDD, convertToDateDDMMYYYY } from '../../functions';\r\nimport TrackSampleCard from './trackSampleCard';\r\nimport PaginationComponent from '../../../components/pagination/pagination';\r\n\r\nclass TrackSampleTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          testtableheader: [\r\n            {table_header: \"Sr No.\", table_sort_name: \"\"},\r\n            {table_header: \"Order No.\", table_sort_name: \"id\"},\r\n            {table_header: \"Order Date\", table_sort_name: \"createdOn\"},\r\n            {table_header: \"Delivery Status\", table_sort_name: \"\"},\r\n            {table_header: \"Lab Status\", table_sort_name: \"\"},\r\n          ],\r\n          testtabledata: [],\r\n          loading: false,\r\n          filter: null,\r\n          toggle: false,\r\n          activeColumn: 0,\r\n          lastActiveColumn: 0,\r\n          modal: false,\r\n          currentPage: 0\r\n        }\r\n        this.pageSize = 10;\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps){\r\n      this.setState({\r\n        testtabledata:nextProps.phistoryData\r\n      })\r\n    }\r\n\r\n    handleTrackClick = (e, index) => {\r\n    \r\n      e.preventDefault();\r\n  \r\n      this.setState({\r\n        currentPage: index\r\n      });\r\n      \r\n    }\r\n\r\n\r\n    toggle = () => {\r\n      this.setState(prevState => ({\r\n        modal: !prevState.modal\r\n      }));\r\n    }\r\n\r\n    updateSearch = (inputValue) => {\r\n      let filter = this.state.filter;\r\n\r\n      this.setState({\r\n          filter: inputValue\r\n      });\r\n    }\r\n\r\n    handleSearchChange = (event) => {\r\n        this.updateSearch(event.target.value);\r\n    }\r\n\r\n    filter = (data) => {\r\n      if (!this.state.filter) {\r\n        return data;\r\n      }\r\n      return data.filter((data) => data.id.toString().indexOf(this.state.filter) >= 0 ||\r\n                                   convertToDateDDMMYYYY(data.createdOn).toLowerCase().indexOf(this.state.filter.toLowerCase()) >= 0 \r\n    )\r\n      \r\n    }\r\n\r\n    handleClick = (title, key) => {\r\n      let arrayCopy = [...this.state.testtabledata];\r\n    if(key === 1 || key === 2){\r\n      if (this.state.activeColumn === key) {\r\n        let toggle = !this.state.toggle\r\n        this.setState({\r\n          toggle: toggle,\r\n          activeColumn: key,\r\n          testtabledata: sortByColumn(arrayCopy, title, toggle)\r\n        })\r\n      } else {\r\n        this.setState({\r\n          activeColumn: key,\r\n          testtabledata: sortByColumn(arrayCopy, title, false)\r\n        })\r\n      }\r\n    }\r\n    }\r\n\r\n    render() {\r\n      console.log(\"Patient Order Data\");\r\n      console.log(this.props.phistoryData);\r\n\r\n      console.log(\"Patient logistics Statuses\");\r\n      console.log(this.props.pstatusdata);\r\n\r\n      console.log(\"Patient livehealth Statuses\");\r\n      console.log(this.props.lpstatusdata);\r\n\r\n      // if(this.props.phistoryData && this.props.pstatusdata.length !== 0) {\r\n      //   this.props.phistoryData.forEach((o) => {\r\n      //       this.props.pstatusdata.forEach((p) => {\r\n      //           if(o.awbNo === p.id) {\r\n      //               o[\"logisticsStatus\"] = p.status;\r\n      //           }\r\n      //       })\r\n      //   })\r\n      // }  \r\n      \r\n      const { currentPage } = this.state;\r\n      if(this.state.testtabledata){\r\n      this.pagesCount = Math.ceil(this.state.testtabledata.length / this.pageSize);\r\n      \r\n\r\n      this.state.testtabledata.map((el, key) => {\r\n        el[\"srno\"] = key + 1;\r\n      })\r\n    }\r\n\r\n      let list = <Spinner animation=\"border\" variant=\"danger\" />\r\n      if (!this.state.loading) {\r\n\r\n        list = \r\n        <React.Fragment>\r\n          <Row className=\"mt-5\">\r\n        <Col md={1} xs={3}className=\"text-center\">Sr No.</Col>\r\n        <Col md={1} xs={3} className=\"text-center\">Order ID</Col>\r\n        <Col md={2} xs={3} className=\"text-center\">Order Date</Col>\r\n        <Col md={2} xs={3} className=\"text-center\">Sample Status</Col>\r\n        <Col md={6} xs={12} className=\"text-center hidden-xs\">Patient List</Col>\r\n        </Row>\r\n        <hr/>\r\n        <Row>\r\n                 <Col className=\"text-center\">\r\n                    {this.state.testtabledata ? this.filter(this.state.testtabledata).slice(\r\n                      currentPage * this.pageSize,\r\n                      (currentPage + 1) * this.pageSize\r\n                    ).map((order, key) => \r\n                        <TrackSampleCard order={order} keyValue = {key} pstatusdata={this.props.pstatusdata}/>\r\n                        ) : <Spinner color=\"danger\" />\r\n                    }\r\n\r\n                 </Col>\r\n               </Row>\r\n\r\n          <PaginationComponent currentPage={this.state.currentPage} handleClick={this.handleTrackClick} pagesCount={this.pagesCount} />\r\n\r\n        </React.Fragment>\r\n        //   list = <Table>\r\n        //   <tbody>\r\n        //   {this.state.testtabledata ? this.filter(this.state.testtabledata).map((order, key) => {\r\n        //       return <tr>\r\n        //           <td>{key + 1}</td>\r\n        //           <td>{order.id}</td>\r\n        //           <td>{convertToDateYYYYMMDD(order.createdOn)}</td>\r\n        //           <td>{order.logisticsStatus}</td>\r\n        //           <td>\r\n        //             {order.logisticsStatus === \"SHIPMENT DELIVERED\" ? \r\n        //             <Table bordered style={{tableLayout: 'fixed',  width:'400px', margin: 'auto'}}>\r\n        //               <thead>\r\n        //               <tr>\r\n        //                 <th>Test Name</th>\r\n        //                 <th>Status</th>\r\n        //               </tr>\r\n        //               </thead>\r\n        //               <tbody>\r\n        //                 {order.livehealthStatus ? order.livehealthStatus.map((t) =>\r\n        //                   <tr>\r\n        //                     <td style={{wordWrap: 'break-word'}}>{t[\"Test Name\"]}</td>\r\n        //                     <td>{t.status}</td>\r\n        //                   </tr>\r\n        //                 ) : null}\r\n                      \r\n        //               </tbody>\r\n        //             </Table> : \"-\" }\r\n        //               </td>\r\n        //           {/* <td onClick={() => this.openTrackOrderModal(order.lhBillId)}>Track Order</td> */}\r\n        //       </tr>\r\n        //   }) : <Spinner color=\"danger\" />\r\n        // }\r\n        //   </tbody>\r\n        // </Table>\r\n      }\r\n        return(\r\n          <React.Fragment>\r\n               <Container className=\"mb-5\">\r\n               <Row className=\"mt-2\">\r\n                 <Col md=\"3\">\r\n                 <InputGroup size=\"lg\">\r\n                  <InputGroupAddon addonType=\"prepend\">Search</InputGroupAddon>\r\n                  <Input value={this.state.filter} onChange={this.handleSearchChange} type=\"text\" style={{zIndex: 0}}/>\r\n                </InputGroup>\r\n                 </Col>\r\n               </Row>\r\n               <Row className=\"mt-2\">\r\n                 <Col className=\"text-center\">\r\n                 {list} \r\n                 </Col>\r\n               </Row>\r\n             </Container>\r\n\r\n          </React.Fragment>\r\n              \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      loading: state.loading,\r\n      user: state.user,\r\n      phistoryData: state.phistoryData,\r\n      pstatusdata: state.pstatusdata,\r\n      lpstatusdata: state.lpstatusdata\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    //onPatientGetOrderStatus: (billId) => dispatch(actions.patientGetOrderStatus(billId))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrackSampleTable);","import React from 'react';\r\nimport { Collapse, Row, Col, Container, Form, Table, Button, CardBody, Card, Alert, FormGroup, Input, Label, } from 'reactstrap';\r\nimport Picky from \"react-picky\";\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport { connect } from 'react-redux';\r\nimport DatePicker from \"react-date-picker\";\r\n\r\nclass CreditPartnerCard extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {collapse: this.props.keyValue === 0 ||  this.props.keyValue ? true : false};\r\n    }\r\n\r\n    toggleCard = () => {\r\n      this.setState({ collapse: !this.state.collapse });\r\n    }\r\n\r\n    checkRegisterFormDetails = () => {\r\n\r\n        let flag = null;\r\n        if(flag || flag === null){\r\n                if(this.props.pdata.designation !== \"\" && this.props.pdata.firstName !== \"\" && this.props.pdata.lastName !== \"\" \r\n                && this.props.pdata.gender !== \"\" && this.props.pdata.dob !== \"\" ) {\r\n                    flag = true;\r\n                }\r\n                else {\r\n                    flag = false;\r\n                }\r\n        }\r\n        console.log(flag);\r\n        return flag;\r\n    }\r\n    \r\n    render() {\r\n\r\n      console.log(this.props.stdata);\r\n      \r\n      return (\r\n        <Row > \r\n        <Col md={12} className=\"mt-3\">\r\n        <div className=\"profile-tab\" id=\"togglerinner\" onClick={this.toggleCard}>\r\n        {this.state.collapse ? <i class=\"fa fa-minus mr-1\"></i> : <i class=\"fa fa-plus mr-1\"></i>}\r\n        {this.props.pdata.firstName ? this.props.pdata.firstName + ' ' + this.props.pdata.lastName\r\n        : 'Patient' + ' ' + (this.props.keyValue+1) } \r\n\r\n        {this.props.pdata.validationMessages ? <span style={{color: 'red', fontWeight: 500}}>{' - ' + this.props.pdata.validationMessages}</span> : null }\r\n        \r\n        <i class=\"fa fa-close mr-1 mt-1 pull-right\" onClick={() => this.props.removePatient(this.props.pdata, this.props.keyValue)}></i> </div>\r\n        \r\n        <Collapse toggler=\"togglerinner\" isOpen={this.state.collapse}>\r\n            <Card className=\"collapse-box\">\r\n        <CardBody>\r\n        <Row>\r\n        <Col md={4} className=\"mt-3\">\r\n        <FormGroup>\r\n            <Label for=\"title\"><b><span className=\"starSize\">*</span>Title</b></Label>\r\n            <Input type=\"select\" name=\"designation\" value={this.props.pdata.designation} placeholder=\"Select\" onChange={(event) => this.props.inputChangedPatientHandler(event, this.props.keyValue)}>\r\n                <option value=\"\">Select Title</option>\r\n                <option value=\"Mr\">Mr.</option>\r\n                <option value=\"Mrs\">Mrs.</option>\r\n                <option value=\"Miss\">Miss.</option>\r\n                <option value=\"Ms\">Ms.</option>\r\n                <option value=\"Master\">Master</option>\r\n                <option value=\"Dr\">Dr.</option>\r\n            </Input>\r\n        </FormGroup>\r\n        </Col>\r\n        <Col md={4} className=\"mt-3\">\r\n        <FormGroup>\r\n            <Label for=\"fname\"><b><span className=\"starSize\">*</span>First Name</b></Label>\r\n            <Input type=\"text\" name=\"firstName\" value={this.props.pdata.firstName} onChange={(event) => this.props.inputChangedPatientHandler(event, this.props.keyValue)} placeholder=\"First Name\" />\r\n        </FormGroup>\r\n    </Col>\r\n    <Col md={4} className=\"mt-3\">\r\n        <FormGroup>\r\n            <Label for=\"lname\"><b><span className=\"starSize\">*</span>Last Name</b></Label>\r\n            <Input type=\"text\" name=\"lastName\" value={this.props.pdata.lastName} onChange={(event) => this.props.inputChangedPatientHandler(event, this.props.keyValue)} placeholder=\"Last Name\" />\r\n        </FormGroup>\r\n    </Col>\r\n    </Row>\r\n    <Row>\r\n    <Col md={4} style={{marginTop: '35px'}}>\r\n        <FormGroup>\r\n            <Label for=\"email\"><b>Email</b></Label>\r\n            <Input type=\"email\" name=\"email\" value={this.props.pdata.email} onChange={(event) => this.props.inputChangedPatientHandler(event, this.props.keyValue)} placeholder=\"Email Id\" />\r\n        </FormGroup>\r\n    </Col>\r\n    <Col md={4} style={{marginTop: '35px'}}>\r\n        <FormGroup>\r\n            <Label for=\"mobile\"><b>Mobile Number</b></Label>\r\n            <Input type=\"number\" name=\"mobile\" value={this.props.pdata.mobile} onChange={(event) => this.props.inputChangedPatientHandler(event, this.props.keyValue)} placeholder=\"Mobile Number\" />\r\n            <p style={{color: 'red'}}>{this.props.pdata.validationMessages}</p>\r\n            <p className=\"red-font mt-3\">{this.props.noValidationMessages}</p>\r\n        </FormGroup>\r\n    </Col>\r\n    <Col md={4} className=\"mt-3\">\r\n    <Label for=\"state\"><b><span className=\"starSize\">*</span>Date of Birth</b></Label>\r\n        <FormGroup>\r\n        <DatePicker\r\n          value={this.props.pdata.dob}\r\n          onChange={(date) => this.props.handleDOBChange(date, this.props.keyValue)}\r\n          maxDate={new Date()}\r\n        />\r\n        {/* <Input type=\"date\" name=\"dob\" value={this.props.pdata.dob} onChange={(event) => this.props.inputChangedPatientHandler(event, this.props.keyValue)} /> */}\r\n        </FormGroup>\r\n      {/* <AvForm>\r\n        <AvField name=\"dateRange\" label=\"Date of Birth\" type=\"date\" validate={{dateRange: {start: {value: -999, units: 'years',} ,end: {value: -1, units: 'months',}}}} />\r\n      </AvForm> */}\r\n    </Col>\r\n    </Row>\r\n    <Row>\r\n    <Col md={4} className=\"mt-3\">\r\n    <FormGroup tag=\"fieldset\">\r\n        <legend className=\"col-form-label\"><b><span className=\"starSize\">*</span>Gender</b></legend>\r\n        <Col>\r\n        <FormGroup check>\r\n            <Label check>\r\n            <Input type=\"radio\" name={'gender' + this.props.keyValue} value=\"Male\" checked={this.props.pdata.gender === \"Male\"} onChange={(event) => this.props.inputChangedPatientHandler(event, this.props.keyValue)}/>\r\n            Male\r\n            </Label>\r\n        </FormGroup>\r\n        <FormGroup check>\r\n            <Label check>\r\n            <Input type=\"radio\" name={'gender' + this.props.keyValue} value=\"Female\" checked={this.props.pdata.gender === \"Female\"} onChange={(event) => this.props.inputChangedPatientHandler(event, this.props.keyValue)}/>\r\n            Female\r\n            </Label>\r\n        </FormGroup>\r\n        <FormGroup check >\r\n            <Label check>\r\n            <Input type=\"radio\" name={'gender' + this.props.keyValue} value=\"Other\" checked={this.props.pdata.gender === \"Other\"} onChange={(event) => this.props.inputChangedPatientHandler(event, this.props.keyValue)}/>\r\n            Other\r\n            </Label>\r\n        </FormGroup>\r\n        </Col>\r\n    </FormGroup>\r\n    </Col>\r\n    {/* <Col md={8} className=\"mt-3\">\r\n        <FormGroup>\r\n            <Label for=\"mobile\"><b>Address</b></Label>\r\n            <Input type=\"text\" name=\"Address\" value={this.props.pdata.Address} onChange={(event) => this.props.inputChangedPatientHandler(event, this.props.keyValue)} placeholder=\"Address\" />\r\n        </FormGroup>\r\n    </Col> */}\r\n    </Row>\r\n    {this.checkRegisterFormDetails(this.state.form) ?\r\n      null :\r\n      <p style={{color: 'red'}} className=\"mt-3\">Fields marked with  <span className=\"starSize\"> * </span>  are required.</p>\r\n    }\r\n    <hr/>\r\n    {this.props.pdata.testList ? this.props.pdata.testList.map((item, key1) => \r\n    <Row>\r\n    <Col md={1}>\r\n        <i class=\"fa fa-trash mr-1 pr-3 pt-5 pb-5 pull-right\" style={{fontSize: '20px'}} onClick={() => this.props.removeSample(this.props.pdata, this.props.keyValue, key1)}></i>\r\n    </Col>\r\n    {this.props.stdata ?\r\n    <Col md={3} className=\"mt-3\">\r\n        <FormGroup>\r\n            <Label for=\"exampleSelect\"><b>Select Department:</b></Label>\r\n                <Input type=\"select\" name=\"selectedSample\" id=\"sampleSelect\" onChange={(event) => this.props.inputChangedPatientHandler(event, this.props.keyValue, key1)}>\r\n                <option>Select Sample</option>\r\n                {this.props.stdata.map((el) => <option value={el.id}>{el.sampleName}</option> )}    \r\n                </Input>\r\n        </FormGroup>\r\n    </Col>\r\n    : null }\r\n    {this.props.stestdata ?\r\n    <Col md={3} className=\"mt-3\">\r\n            <Label for=\"exampleSelect\" id=\"selectTestLabelCP\"><b>Select Tests:</b></Label>\r\n            <div>\r\n            <Picky\r\n                value={item.testListArr}\r\n                options={this.props.stestdata}\r\n                onChange={(undefined) => {this.props.selectPatientMultipleOption(undefined, this.props.keyValue, key1); document.getElementById(\"selectTestLabelCP\").click()}}\r\n                tabIndex={this.props.keyValue}\r\n                open={false}\r\n                keepOpen={false}\r\n                valueKey=\"id\"\r\n                labelKey=\"testName\"\r\n                multiple={true}\r\n                includeSelectAll={true}\r\n                includeFilter={true}\r\n                dropdownHeight={600}\r\n                numberDisplayed={1}\r\n                manySelectedPlaceholder=\"%s selected\"\r\n                allSelectedPlaceholder=\"%s selected\"\r\n            />\r\n            </div>\r\n            \r\n    </Col>\r\n    : null }\r\n    <Col md={5} className=\"mt-3\">\r\n        {item.testListArr ? item.testListArr.length !== 0 ? <Table bordered>\r\n            <thead>\r\n                <tr>\r\n                <th>Sr No.</th>\r\n                <th>Test Name</th>\r\n                <th>Test Charges</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {item.testListArr.map((test, key) => \r\n                <tr>\r\n                <td>{key + 1}</td>\r\n                <td>{test.testName}</td>\r\n                <td>{test.price}</td>\r\n                </tr>)\r\n                }\r\n                {(item.testTotalCharge) ?\r\n                <tr>\r\n                <td colSpan={2}><b>Total</b></td>\r\n                <td><b>&#8377; {(item.testTotalCharge).toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</b></td> \r\n                </tr> \r\n                : null }\r\n            </tbody>\r\n        </Table> : null \r\n        : null\r\n        }\r\n    </Col>\r\n    \r\n</Row>\r\n\r\n): null }\r\n\r\n\r\n    \r\n<Row>\r\n    <Col md={12} className=\"mt-3 text-right\">\r\n        <Button className=\"button-lightred\" size=\"md\" style={{width: '190px'}}  onClick={() => this.props.addSample(this.props.pdata, this.props.keyValue)}>Add Test(s)</Button>{' '}\r\n    </Col>\r\n</Row>\r\n                </CardBody>\r\n            </Card>\r\n        </Collapse>\r\n\r\n        \r\n    </Col>\r\n    </Row>\r\n      );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        user: state.user,\r\n        stestsuccess: state.stestsuccess,\r\n        stestdata: state.stestdata,\r\n    }\r\n}\r\n    \r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSampleTest: (id) => dispatch(actions.sampleTest(id)),\r\n    }\r\n}\r\n      \r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreditPartnerCard);\r\n\r\n\r\n","import React from 'react';\r\nimport { Collapse, Table, Row, Col} from 'reactstrap';\r\nimport Picky from \"react-picky\";\r\nimport { convertToDateYYYYMMDD, convertToDateDDMMYYYY } from '../functions';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/actions/actions';\r\n\r\nclass OrderDataCard extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {collapse : false};\r\n    }\r\n\r\n    toggleCard = () => {\r\n        this.setState({ collapse: !this.state.collapse });     \r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.order.creditPartnerPatients);\r\n      return (\r\n        <React.Fragment>\r\n            <Row className=\"mt-3\">\r\n               <Col md={1} xs={4} className=\"text-center\">{this.props.order.srno}</Col>\r\n               <Col md={2} xs={4} className=\"text-center\">{this.props.order.id}</Col>\r\n               <Col md={2} xs={4} className=\"text-center\">{convertToDateDDMMYYYY(this.props.order.createdOn)}</Col>\r\n               <Col md={7} xs={12} className=\"text-center\">\r\n                   \r\n               <div onClick={this.toggleCard}>\r\n               <Collapse toggler=\"togglerinner\" isOpen={this.state.collapse}>\r\n                    <Row>\r\n                        <Col md={2}>Patient ID</Col>\r\n                        <Col md={3}>Name</Col>\r\n                        <Col md={2}>Sample</Col>\r\n                        <Col md={3}>Test Name</Col>\r\n                        <Col md={2}>Price</Col>\r\n                    </Row><hr/>\r\n                    {this.props.order.hasOwnProperty('creditPartnerPatients') ? this.props.order.creditPartnerPatients.map((orderPatient) =>\r\n                    <React.Fragment>\r\n                    <Row>\r\n                        <Col md={2}>{orderPatient.id}</Col>\r\n                        <Col md={3}>{orderPatient.firstName + \" \" + orderPatient.lastName}</Col>\r\n                        <Col md={7}>\r\n                        {orderPatient.creditPartnerDetails ? orderPatient.creditPartnerDetails.creditPartnerPatientOrderDetails.map((testSample) => {\r\n                            return <React.Fragment>\r\n                                <Row>\r\n                                    <Col md={4}>{testSample.sampleTest.sample.sampleName}</Col>\r\n                                    <Col md={4}>{testSample.sampleTest.testName}</Col>\r\n                                    <Col md={4}>&#8377; {(testSample.sampleTest.price).toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</Col>\r\n                                </Row><hr/>\r\n                                </React.Fragment>\r\n                        }) : null}\r\n                        </Col>\r\n                    </Row><hr/>\r\n                    </React.Fragment>\r\n                    ) : null}\r\n                </Collapse>\r\n                {this.state.collapse ? \r\n                    <i class=\"fa fa-angle-double-up fa-2x\"></i> : \r\n                    <i class=\"fa fa-angle-double-down fa-2x\"></i>\r\n                }\r\n               </div>\r\n               </Col>\r\n            </Row>\r\n            <hr/>\r\n            \r\n        </React.Fragment>  \r\n        );\r\n    }\r\n\r\n}\r\n  \r\n\r\nexport default OrderDataCard;\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport { Container, Table } from 'reactstrap';\r\nimport { Spinner, Row, Col } from 'reactstrap';\r\nimport { InputGroup, InputGroupText, InputGroupAddon, Input, Collapse } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport { convertToDateYYYYMMDD, sortByColumn, convertToDateDDMMYYYY } from '../functions';\r\nimport OrderDataCard from './orderDataCard';\r\nimport PaginationComponent from '../../components/pagination/pagination';\r\n\r\nclass CreditPartnerOrderHistory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          testtableheader: [\r\n            {table_header: \"Sr No.\", table_sort_name: \"\"},\r\n            {table_header: \"Order No.\", table_sort_name: \"id\"},\r\n            {table_header: \"Order Date\", table_sort_name: \"createdOn\"}\r\n          ],\r\n          testtabledata: [],\r\n          loading: false,\r\n          filter: null,\r\n          toggle: false,\r\n          activeColumn: 0,\r\n          lastActiveColumn: 0,\r\n          collapse: false,\r\n          currentPage: 0\r\n        }\r\n        this.pageSize = 10;\r\n       \r\n    }\r\n\r\n\r\n    componentWillReceiveProps(props){\r\n        this.setState({\r\n            testtabledata: props.orderHistoryData,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    handleClick = (e, index) => {\r\n    \r\n      e.preventDefault();\r\n  \r\n      this.setState({\r\n        currentPage: index\r\n      });\r\n      \r\n    }\r\n\r\n    toggleCard = (orderId) => {\r\n        this.setState({ collapse: !this.state.collapse });      \r\n    }\r\n\r\n    updateSearch = (inputValue) => {\r\n      let filter = this.state.filter;\r\n\r\n      this.setState({\r\n          filter: inputValue\r\n      });\r\n    }\r\n\r\n    handleSearchChange = (event) => {\r\n        this.updateSearch(event.target.value);\r\n    }\r\n\r\n    filter = (data) => {\r\n      if (!this.state.filter) {\r\n        return data;\r\n      }\r\n        return data.filter((data) => data.id.toString().indexOf(this.state.filter) >= 0 ||\r\n                                     convertToDateDDMMYYYY(data.createdOn).toLowerCase().indexOf(this.state.filter.toLowerCase()) >= 0 \r\n    )\r\n      \r\n    }\r\n\r\n    render() {\r\n      const { currentPage } = this.state;\r\n      if(this.state.testtabledata){\r\n      this.pagesCount = Math.ceil(this.state.testtabledata.length / this.pageSize);\r\n\r\n      this.state.testtabledata.map((el, key) => {\r\n        el[\"srno\"] = key + 1;\r\n      })\r\n    }\r\n        let list = <Spinner animation=\"border\" variant=\"danger\" />\r\n        if (!this.state.loading) {\r\n\r\n           list = <h4>Order</h4>\r\n\r\n        }\r\n        return(\r\n          <React.Fragment>\r\n               <Container className=\"mb-5\">\r\n               <Row className=\"mt-2\">\r\n                 <Col md=\"3\">\r\n                 <InputGroup size=\"lg\">\r\n                  <InputGroupAddon addonType=\"prepend\">Search</InputGroupAddon>\r\n                  <Input value={this.state.filter} onChange={this.handleSearchChange} type=\"text\" style={{zIndex: 0}}/>\r\n                </InputGroup>\r\n                 </Col>\r\n               </Row>\r\n               {!this.state.loading ? \r\n               <React.Fragment>\r\n               <Row className=\"mt-5\">\r\n               <Col md={1} xs={4}className=\"text-center\">Sr No.</Col>\r\n               <Col md={2} xs={4} className=\"text-center\">Order ID</Col>\r\n               <Col md={2} xs={4} className=\"text-center\">Order Date</Col>\r\n               <Col md={7} xs={12} className=\"text-center\">Order List</Col>\r\n               </Row>\r\n               <hr/>\r\n               <Row>\r\n                 <Col className=\"text-center\">\r\n                    {this.state.testtabledata ? this.filter(this.state.testtabledata).slice(\r\n              currentPage * this.pageSize,\r\n              (currentPage + 1) * this.pageSize\r\n            ).map((order, key) => \r\n                        <OrderDataCard order={order} keyValue = {key}/> \r\n                        ) : <Spinner color=\"danger\" />\r\n                    }\r\n\r\n                 </Col>\r\n               </Row>\r\n\r\n               <PaginationComponent currentPage={this.state.currentPage} handleClick={this.handleClick} pagesCount={this.pagesCount}></PaginationComponent>\r\n\r\n               </React.Fragment>\r\n               \r\n               : null}\r\n             </Container>\r\n          </React.Fragment>\r\n              \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      loading: state.loading,\r\n      user: state.user,\r\n      data: state.data,\r\n      phistoryData: state.phistoryData,\r\n      pstatusdata: state.pstatusdata\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    //onCreditPartnerOrderList: (id) => dispatch(actions.creditPartnerOrderList(id))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreditPartnerOrderHistory);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TitlebarComponent from '../../components/navbar/titlebar';\r\nimport Navbar from '../../components/navbar/navbar';\r\nimport { Row, Col, Container, Form, Table, UncontrolledCollapse, Button, CardBody, Card, Alert, FormGroup, Input, Label,ListGroup, ListGroupItem } from 'reactstrap';\r\nimport \"react-picky/dist/picky.css\";\r\nimport TrackSampleTable from './trackSample/trackSampleTable';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport HomeApi from '../../services/API/HomeApi';\r\nimport ModalComponent from '../../components/modal/modal';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport CreditPartnerCard from './creditpartnerPatientCard';\r\nimport CreditPartnerOrderHistory from './creditPartnerOrderHistory';\r\nimport OrderDataCard from './orderDataCard';\r\nimport './creditPartner.css';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\nimport ModalWishlistComponent from '../../components/modal/modalwishlist';\r\nimport { convertDOB } from '../functions';\r\n\r\nclass CreditPartnerHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            testList: this.defaultTestDetails(),\r\n            patient: [\r\n                {   \r\n                    userId: '',\r\n                    designation: '',\r\n                    firstName: '',\r\n                    lastName: '',\r\n                    email: '',\r\n                    mobile: '',\r\n                    gender: '',\r\n                    dob: '',\r\n                    testList: [\r\n                        {\r\n                            value: null,\r\n                            selectedSample: '',\r\n                            testListArr: [],\r\n                            testTotalCharge: 0\r\n                        }\r\n                    ],\r\n                    \r\n                }\r\n            ],\r\n            patientForm: this.defaultPatientForm(),\r\n            validationMessages: [],\r\n            form: this.defaultForm(),\r\n            testtableheader: [],\r\n            testtabledata: [],\r\n            modal: false,\r\n            filter: null,\r\n            pincode: null,\r\n            duplicatePatientError: false,\r\n            toggler: false,\r\n            toggler1: false,\r\n            toggler2: false,\r\n            toggler3: false,\r\n            toggler4: false,\r\n            loading: false,\r\n            testModal: false,\r\n            visible: false,\r\n            noValidationMessages: [],\r\n            courierCost: false\r\n            // bigList: [{id: 1, name: 'Test Name 1'},{id: 2, name: 'Test Name 2'}, {id: 3, name: 'Test Name 3'} ]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.onSampleType();\r\n        this.props.onLogisticCost();\r\n        this.props.oncreditPartnerOrderHistoryData(this.props.user.id);\r\n        this.props.onCreditBalance(this.props.user.id);\r\n    }\r\n\r\n    defaultTestDetails = () => {\r\n        return{\r\n            value: null,\r\n            selectedSample: '',\r\n            testListArr: []\r\n        }\r\n    }\r\n\r\n    defaultForm = () => {\r\n        return {\r\n            userTypeId: this.props.userTypeId ? this.props.userTypeId : 3,\r\n            firstName: '',\r\n            lastName: '',\r\n            contactNo: '',\r\n            gender:'',\r\n            emailId: '',\r\n            // address: '',\r\n            // dob: new Date(),\r\n            // state: '',\r\n            // city: '',\r\n            // pincode:'',\r\n            // password: ''\r\n        }\r\n      }\r\n    \r\n    defaultPatientForm = () => {\r\n        return {   \r\n            userId: '',\r\n            designation: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            mobile: '',\r\n            gender: '',\r\n            dob: '',\r\n            testList: [\r\n                {\r\n                    value: null,\r\n                    selectedSample: '',\r\n                    testListArr: [],\r\n                }\r\n            ]\r\n        }\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.cpsuccess) {\r\n            this.setState({\r\n                patient: [\r\n                    {   \r\n                        userId: '',\r\n                        designation: '',\r\n                        firstName: '',\r\n                        lastName: '',\r\n                        email: '',\r\n                        mobile: '',\r\n                        gender: '',\r\n                        dob: '',\r\n                        testList: [\r\n                            {\r\n                                value: null,\r\n                                selectedSample: '',\r\n                                testListArr: [],\r\n                                testTotalCharge: 0\r\n                            }\r\n                        ],\r\n                        \r\n                    }\r\n                ],\r\n                loading: false,\r\n                successMsg: true\r\n            })\r\n\r\n            setTimeout(() => {\r\n                this.props.oncreditpartnerOrderReset();\r\n                this.props.oncreditPartnerOrderHistoryData(this.props.user.id);\r\n                this.props.onCreditBalance(this.props.user.id);\r\n              }, 2000);\r\n        }\r\n        \r\n        if(nextProps.cperror) {\r\n\r\n            let duplicatePatient = [];\r\n\r\n            this.state.patient.map((patient, key) => {\r\n                nextProps.cpmessage.map((sequence) => {\r\n                    if(key === sequence) {\r\n                        duplicatePatient.push(patient);\r\n                    }\r\n                }) \r\n            });\r\n\r\n            duplicatePatient.forEach(function (patientItem) {\r\n                patientItem[\"validationMessages\"] = \"Patient already registered. Kindly check the details.\";\r\n            });\r\n\r\n            console.log(duplicatePatient);\r\n\r\n            this.setState({\r\n                loading: false,\r\n                \r\n            })\r\n            \r\n        }\r\n\r\n        if(nextProps.cplimiterror){\r\n            this.setState({\r\n                loading: false,\r\n            })\r\n        }\r\n\r\n        // if(nextProps.cphistorysuccess && nextProps.posuccess === null) {\r\n        //     this.props.oncreditPartnerPatientOrderData();\r\n        // }\r\n        // if(nextProps.posuccess) {\r\n        \r\n        //     this.props.oncreditPartnerPatientStatus();\r\n            \r\n        // }\r\n        \r\n    }\r\n\r\n    inputChangedPatientHandler = (e, key, key1) => {\r\n      \r\n        if(key1 !== undefined) {\r\n            let patient = this.state.patient;\r\n\r\n            let id = e.target.value;\r\n        \r\n            if(e.target.value !== \"Select Sample\"){\r\n            this.props.onSampleTest(id);\r\n            }\r\n      \r\n            const updatedForm = [\r\n                ...patient[key].testList.slice(0,key1),\r\n                Object.assign({}, patient[key].testList[key1], {[e.target.name]: e.target.value}),\r\n                ...patient[key].testList.slice(key1 + 1),\r\n              ]\r\n      \r\n              const updatedPatient = [\r\n                  ...this.state.patient.slice(0,key),\r\n                  Object.assign({}, this.state.patient[key], {testList: updatedForm}),\r\n                  ...this.state.patient.slice(key + 1),\r\n              ]\r\n\r\n              let validationMessages = [];\r\n              this.setState({\r\n                patient: updatedPatient, \r\n                validationMessages\r\n              });\r\n        }else {\r\n                let patient = this.state.patient;\r\n                let validationMessages = [];\r\n                let noValidationMessages = [];\r\n                if(e.target.name === 'mobile') {\r\n                    let validMobile = patient.some(el => el.mobile === e.target.value)\r\n                    if(validMobile) {\r\n                        let errormessages = \"Repeated Mobile no\";\r\n\r\n                        const updatedPatient = [\r\n                            ...patient.slice(0,key),\r\n                        Object.assign({}, patient[key], {validationMessages: errormessages}),\r\n                            ...patient.slice(key + 1),\r\n                        ]\r\n\r\n                        this.setState({\r\n                            patient: updatedPatient\r\n                          });\r\n                        return;\r\n                    }\r\n                    else {\r\n                            delete patient[key].validationMessages;\r\n                            this.setState({\r\n                                duplicatePatientError: false\r\n                            });\r\n                    }\r\n\r\n                }\r\n\r\n                if (e.target.type === \"number\") {\r\n                    e.target.value = e.target.value.slice(0,10);\r\n                  } \r\n                  \r\n                  if(e.target.type === \"number\" && e.target.value.length < 10){\r\n                    noValidationMessages.push(\"Required 10 digits number, match requested format.\");\r\n                    this.setState({noValidationMessages});\r\n                  }\r\n                  else {\r\n                    validationMessages = [];\r\n                    this.setState({noValidationMessages});\r\n                }\r\n\r\n                const updatedPatient = [\r\n                    ...patient.slice(0,key),\r\n                Object.assign({}, patient[key], {[e.target.type === 'radio' ? e.target.name.slice(0, -1) : e.target.name]: e.target.value}),\r\n                    ...patient.slice(key + 1),\r\n                ]\r\n\r\n                this.setState({\r\n                  patient: updatedPatient, \r\n                  validationMessages\r\n                });\r\n        }  \r\n    }\r\n\r\n    handleDOBChange = (date, key) => {\r\n        let convertedDate = convertDOB(date);\r\n        // const updatedFormDate = {\r\n        //   ...this.state.patient[key],\r\n        //   dob: date\r\n        // }\r\n        let patient = this.state.patient;\r\n\r\n        const updatedFormDate = [\r\n            ...this.state.patient.slice(0,key),\r\n            Object.assign({}, this.state.patient[key], {dob: date}),\r\n            ...this.state.patient.slice(key + 1),\r\n        ]\r\n\r\n        let validationMessages = [];\r\n        this.setState({\r\n        patient: updatedFormDate, validationMessages\r\n        });\r\n        \r\n        \r\n      }\r\n\r\n    profileinputChangedHandler = (e) => {\r\n        const updatedprofileForm = {\r\n          ...this.state.form,\r\n          [e.target.name]: e.target.value\r\n        }\r\n        let validationMessages = [];\r\n        this.setState({\r\n          form: updatedprofileForm, \r\n          validationMessages\r\n        });\r\n          \r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        console.log(\"profile form clicked!\");\r\n        event.preventDefault();\r\n    \r\n        // const updatedFormDate = {\r\n        //   ...this.state.form,\r\n        //   dob: convertToDateYYYYMMDD(this.state.form.dob)\r\n        // }\r\n    \r\n        //this.props.onSignUp(updatedFormDate);\r\n    }\r\n\r\n    selectPatientMultipleOption = (value, key, key1, event) => {\r\n        console.count('onChange')\r\n        console.log(\"Val\", value);\r\n\r\n        let patient = this.state.patient;\r\n\r\n        const updatedPatientTestDetails = [\r\n            ...patient[key].testList.slice(0,key1),\r\n            Object.assign({}, patient[key].testList[key1], {testListArr: value}),\r\n            ...patient[key].testList.slice(key1 + 1),\r\n          ]\r\n  \r\n        const updatedPatient = [\r\n              ...patient.slice(0,key),\r\n              Object.assign({}, patient[key], {testList: updatedPatientTestDetails}),\r\n              ...patient.slice(key + 1),\r\n          ]\r\n\r\n        \r\n\r\n        this.setState({ patient: updatedPatient }, () => {\r\n            this.calculateCharge(value, key, key1);\r\n        });\r\n    }\r\n\r\n    calculateCharge = (test, key, key1) => {\r\n        // let testListChargeArr = [];\r\n        // this.state.patient.map((el) => {\r\n        //     el.testList.map((elsub) => {\r\n        //     testListChargeArr.push(elsub.testListArr);\r\n        // })\r\n        // })\r\n \r\n\r\n        let testTotalCharge = test.reduce((acc, test) => {\r\n            return acc + Number(test.price)\r\n        }, 0)\r\n\r\n        const updatedPatientTestDetails = [\r\n            ...this.state.patient[key].testList.slice(0,key1),\r\n            Object.assign({}, this.state.patient[key].testList[key1], {testTotalCharge: testTotalCharge}),\r\n            ...this.state.patient[key].testList.slice(key1 + 1),\r\n          ]\r\n  \r\n        const updatedPatient = [\r\n              ...this.state.patient.slice(0,key),\r\n              Object.assign({}, this.state.patient[key], {testList: updatedPatientTestDetails}),\r\n              ...this.state.patient.slice(key + 1),\r\n          ]\r\n\r\n          this.setState({ patient: updatedPatient });\r\n    }\r\n\r\n    togglemodal = () => {\r\n        this.setState(prevState => ({\r\n          modal: !prevState.modal\r\n        }));\r\n    }\r\n\r\n    addPatient = (patientForm) => {\r\n        this.setState(previousState => ({\r\n            patient: [...previousState.patient, patientForm],\r\n            patientForm: this.defaultPatientForm()\r\n        }));\r\n    }\r\n\r\n    removePatient = (patientData, key) => {\r\n        const patientafterDeleteArr = this.state.patient;\r\n\r\n        patientafterDeleteArr.splice(key, 1);\r\n\r\n        this.setState({\r\n            patient: patientafterDeleteArr\r\n        });\r\n    }\r\n\r\n    addSample = (pdata, key) => {\r\n        pdata.testList.push({\r\n            value: null,\r\n            selectedSample: '',\r\n            testListArr: []\r\n        });\r\n\r\n        const updatedPatientTestDetails = [\r\n            ...this.state.patient.slice(0,key),\r\n            Object.assign({}, this.state.patient[key], {testList: pdata.testList}),\r\n           ...this.state.patient.slice(key+1)\r\n        ]\r\n        \r\n        this.setState({ patient: updatedPatientTestDetails });\r\n    }\r\n\r\n    removeSample = (pdata, key, key1) => {\r\n\r\n        pdata.testList.splice(key1, 1);\r\n\r\n        const updatedPatientTestDetails = [\r\n            ...this.state.patient.slice(0,key),\r\n            Object.assign({}, this.state.patient[key], {testList: pdata.testList}),\r\n           ...this.state.patient.slice(key+1)\r\n        ]\r\n\r\n        this.setState({\r\n            patient: updatedPatientTestDetails\r\n        });\r\n    }\r\n\r\n    updateSearch = (inputValue) => {\r\n        let filter = this.state.filter;\r\n    \r\n        this.setState({\r\n        filter: inputValue\r\n        });\r\n    }\r\n\r\n    handleSearchChange = (e) => {\r\n        this.updateSearch(e.target.value);\r\n\r\n        if(e.target.value.length >= 2) {\r\n            this.props.onPatientSearch(this.props.user.id, e.target.value);\r\n        }else{\r\n            this.props.onPatientSearch(this.props.user.id, e.target.value);\r\n        }\r\n        \r\n    }\r\n\r\n    searchExistingPatient = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.props.onPatientSearch(this.props.user.id,this.state.filter);\r\n    }\r\n\r\n    selectExistingPatient = (existingPatient) => {\r\n        \r\n        this.props.onPatientSearch(this.props.user.id,\"\");\r\n\r\n        let patientwithExistingPatient = {   \r\n            userId: existingPatient.id,\r\n            designation: existingPatient.designation,\r\n            firstName: existingPatient.firstName,\r\n            lastName: existingPatient.lastName,\r\n            email: existingPatient.emailId,\r\n            mobile: existingPatient.mobile,\r\n            gender: existingPatient.gender,\r\n            dob: existingPatient.dob,\r\n            testList: [\r\n                {\r\n                    value: null,\r\n                    selectedSample: '',\r\n                    testListArr: [],\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.setState(prevState => ({\r\n            filter: \"\",\r\n            patient: [...prevState.patient, patientwithExistingPatient]\r\n          }))\r\n\r\n        \r\n    }\r\n\r\n\r\n    submitPatientTestDetails = (event) => {\r\n        event.preventDefault();\r\n\r\n        let bulkPatientTestDetails = this.state.patient.map((patient, key) => {\r\n            const patientTestListIdArr = patient.testList.map((el) => {\r\n                return el.testListArr.map(function(subtest) {\r\n                    return subtest.lhTestId;\r\n                  })\r\n            })\r\n\r\n            var convertedDateTest = convertDOB(patient.dob);\r\n\r\n            var patientTestListId = [].concat.apply([],patientTestListIdArr).filter((elem, index, self) => {\r\n                return index === self.indexOf(elem);\r\n            })\r\n            \r\n            const patientTestDetails = {\r\n                ...patient,\r\n                dob: convertedDateTest,\r\n                testList: [...patientTestListId],\r\n                sequence: key,\r\n            }\r\n            return patientTestDetails;\r\n        })\r\n\r\n        let duplicatePatient = this.state.patient.map((patient) => {\r\n            if (patient.hasOwnProperty('validationMessages')) {\r\n                return true;\r\n            }else {\r\n                return false;\r\n            }\r\n        });\r\n\r\n        \r\n        console.log(bulkPatientTestDetails);\r\n            if(!duplicatePatient.includes(true)) {\r\n                this.setState({\r\n                    loading: true,\r\n                });\r\n\r\n                this.setState(prevState => ({\r\n                    testModal: !prevState.testModal\r\n                }));\r\n\r\n                this.props.onBulkPatientSampleSubmit(this.props.user.id, bulkPatientTestDetails, this.state.courierCost);\r\n\r\n                this.setState({\r\n                    visible: true\r\n                  }, () => {\r\n                    window.setTimeout(() => {\r\n                      this.setState({\r\n                        visible: false\r\n                      })\r\n                    }, 5000)\r\n                  });\r\n            }else {\r\n                this.setState({\r\n                    duplicatePatientError: true\r\n                });\r\n                this.setState(prevState => ({\r\n                    testModal: !prevState.testModal\r\n                }));\r\n                this.setState({\r\n                    visible: true\r\n                  }, () => {\r\n                    window.setTimeout(() => {\r\n                      this.setState({\r\n                        visible: false\r\n                      })\r\n                    }, 5000)\r\n                  });\r\n            }\r\n        \r\n    }\r\n\r\n    handlePinVerification = (e) => {\r\n        this.setState({\r\n            pincode: e.target.value\r\n        })\r\n    }\r\n\r\n    pinVerification = (event) => {\r\n        event.preventDefault();\r\n        \r\n        this.props.onPinVerification(this.state.pincode);\r\n    }\r\n\r\n\r\n    checkPatientDetails = (patients) => {\r\n\r\n        let flag = null;\r\n\r\n        patients.forEach(function (patient) {\r\n            if(flag || flag === null) {\r\n                if(patient.designation !== \"\" && patient.firstName !== \"\" && patient.lastName !== \"\" && patient.dob !== \"\" && patient.gender !==\"\") {\r\n                    patient.testList.forEach(function (test) {\r\n                        if(flag || flag === null) {\r\n                        if(test.selectedSample !== \"\" && test.testListArr.length !== 0) {\r\n                            flag = true;\r\n                        }\r\n                        else {\r\n                            flag = false;\r\n                        }\r\n                        }\r\n                    });\r\n                    \r\n                }\r\n                else {\r\n                    flag = false;\r\n                }\r\n            }\r\n        });\r\n        console.log(flag);\r\n        return flag;\r\n\r\n    }\r\n\r\n    toggle = (tabno) => {\r\n        switch(tabno) {\r\n            case 0:\r\n                this.setState(prevState => ({\r\n                    toggler: !prevState.toggler\r\n                }));\r\n                break;\r\n            case 1:\r\n                this.setState(prevState => ({\r\n                    toggler1: !prevState.toggler1\r\n                }));\r\n                break;\r\n            case 2:\r\n                this.setState(prevState => ({\r\n                    toggler2: !prevState.toggler2\r\n                }));\r\n                break;\r\n            case 3:\r\n                this.setState(prevState => ({\r\n                    toggler3: !prevState.toggler3\r\n                }));\r\n                break;\r\n            case 4:\r\n                this.setState(prevState => ({\r\n                    toggler4: !prevState.toggler4\r\n                }));\r\n                break;\r\n        }\r\n    }\r\n\r\n    // togglerinner = (key) => {\r\n    //     switch(key) {\r\n    //         case key:\r\n    //             this.setState(prevState => ({\r\n    //                 togglerinner: !prevState.togglerinner\r\n    //             }));\r\n    //             break;\r\n    //     }\r\n    // }\r\n\r\n    testToggleModal = () => {\r\n        this.setState(prevState => ({\r\n          testModal: !prevState.testModal\r\n        }));\r\n    }\r\n\r\n    totalOfTestCharge = (data) => {\r\n        console.log(data);\r\n        let start = 0;\r\n        data.forEach(function(item){\r\n           return start = start + item.testTotalCharge;\r\n        })\r\n        return start;\r\n    }\r\n\r\n    handleCourierCost = () => {\r\n        this.setState(prevState => ({\r\n            courierCost: !prevState.courierCost\r\n        }))\r\n    }\r\n\r\n    scrollDown = () =>{\r\n        window.scrollTo(0, 500);\r\n    }\r\n\r\n    scrollDownOrderHistory =() => {\r\n        window.scrollTo(0, 1500);\r\n    }\r\n\r\nrender(){\r\n    \r\n    let grandTotalArr = [];\r\n    let charge = this.props.lcdata;   \r\n    this.state.patient.forEach((el) => {\r\n        el.testList.forEach((testEl) => {\r\n            grandTotalArr.push(testEl.testListArr);\r\n        })\r\n    })\r\n        \r\n    let grandTotalCharge = [].concat.apply([],grandTotalArr).reduce((acc, test) => {\r\n        return acc + Number(test.price)\r\n    }, 0)\r\n\r\n    // if(this.props.phistoryData && this.props.cphistoryData.length !== 0) {\r\n    //     this.props.phistoryData.forEach((o) => {\r\n    //         o[\"creditPartnerPatients\"] = [];\r\n    //         const patientsOrderArr = [].concat.apply([], this.props.cphistoryData);\r\n\r\n    //         patientsOrderArr.forEach((p) => {\r\n    //             if(o.id === p.orderId) {\r\n    //                 o.creditPartnerPatients.push(p);\r\n    //             }\r\n    //         })\r\n    //     })\r\n    // }  \r\n\r\n    console.log(this.props.cphistoryData);\r\n    console.log(this.props.stdata);\r\n\r\nreturn(\r\n<React.Fragment>\r\n<TitlebarComponent loggedinpatient={this.props.isAuthenticated ? true : false} />\r\n<Navbar patientHome={this.props.isAuthenticated ? true : false} />\r\n<Container>\r\n    <Row className=\"mt-5\">\r\n        <Col>\r\n            <h2>Welcome, {this.props.user.orgName}</h2>\r\n        </Col>\r\n    </Row>\r\n    <Row className=\"mt-5\" style={{cursor: 'pointer'}}>\r\n        <Col>\r\n        <div className=\"profile-tab\" id=\"toggler\" onClick={() => this.toggle(0)}>{this.state.toggler ? <i class=\"fa fa-minus mr-1\"></i> : <i class=\"fa fa-plus mr-1\"></i>} Lab Details </div>\r\n        <UncontrolledCollapse toggler=\"toggler\">\r\n        <Card className=\"collapse-box\">\r\n            <CardBody>\r\n                <Row>\r\n                    {/* <Col md={12} className=\"text-right\"><i class=\"fa fa-edit\" onClick={this.togglemodal}></i></Col> */}\r\n                    <Col md={6} className=\"mt-3\"><b>Organization ID:</b> {this.props.user.orgId}</Col>\r\n                    <Col md={6} className=\"mt-3\"><b>Lab Name:</b> {this.props.user.orgName}</Col>\r\n                    <Col md={6} className=\"mt-3\"><b>Mobile No.: </b> {this.props.user.contactNo}</Col>\r\n                    <Col md={6} className=\"mt-3\"><b>Email ID:</b> {this.props.user.emailId}</Col>\r\n                    {this.props.CBsuccess ?\r\n                    <Col md={6} className=\"mt-3\"><b>Credit Balance:</b> &#8377; {(this.props.CBdata).toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</Col>\r\n                    : null}\r\n                </Row>\r\n                {/* <Row className=\"mt-5\">\r\n                    <Col className=\"text-center\">\r\n                        <Alert color=\"danger\">\r\n                        The final diagnosis report will be generated on the registered patient name ; Incase the order is being placed for a different patient, please register a new patient.\r\n                        </Alert>\r\n                        <Button className=\"button-lightred\" size=\"md\" style={{width: '190px'}} onClick={this.props.ongetReports}>Register New User</Button>{' '}\r\n                    </Col>\r\n                </Row> */}\r\n            </CardBody>\r\n        </Card>\r\n        </UncontrolledCollapse>\r\n        </Col>\r\n    </Row>\r\n\r\n    <ModalComponent modal={this.state.modal} togglemodal={this.togglemodal} submit={this.submitHandler} title=\"Edit Patient Profile\" className=\"patient-profile-modal\">\r\n        <Form onSubmit={this.submitHandler}>\r\n                <FormGroup>\r\n                <Label for=\"fname\">First Name</Label>\r\n                <Input type=\"text\" value={this.state.form.firstName} name=\"firstName\" placeholder=\"First Name\" onChange={(event) => this.profileinputChangedHandler(event)} />\r\n                </FormGroup>\r\n                <Label for=\"lname\">Last Name</Label>\r\n                <FormGroup>\r\n                <Input type=\"text\" value={this.state.form.lastName} name=\"lastName\" placeholder=\"Second Name\" onChange={(event) => this.profileinputChangedHandler(event)} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                <Label for=\"mobile\">Mobile Number</Label>\r\n                <Input type=\"text\" value={this.state.form.contactNo} name=\"contactNo\" placeholder=\"Mobile Number\" onChange={(event) => this.profileinputChangedHandler(event)} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                <Label for=\"email\">Email</Label>\r\n                <Input type=\"email\" value={this.state.form.emailId} name=\"emailId\" placeholder=\"Email Address\" onChange={(event) => this.profileinputChangedHandler(event)}/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                <Label for=\"exampleDate\">Date of Birth</Label>\r\n                <Input\r\n                type=\"date\"\r\n                name=\"dob\"\r\n                id=\"exampleDate\"\r\n                placeholder=\"Date of Birth\"\r\n                onChange={(event) => this.profileinputChangedHandler(event)}\r\n                />\r\n            </FormGroup>\r\n                <FormGroup tag=\"fieldset\">\r\n            <legend className=\"col-form-label\">Gender :</legend>\r\n            <Col>\r\n                <FormGroup check>\r\n                <Label check>\r\n                    <Input type=\"radio\" name=\"gender\" value={this.state.form.gender} onChange={(event) => this.profileinputChangedHandler(event)}/>{' '}\r\n                    Male\r\n                </Label>\r\n                </FormGroup>\r\n                <FormGroup check>\r\n                <Label check>\r\n                    <Input type=\"radio\" name=\"gender\" value={this.state.form.gender} onChange={(event) => this.profileinputChangedHandler(event)}/>{' '}\r\n                    Female\r\n                </Label>\r\n                </FormGroup>\r\n                <FormGroup check >\r\n                <Label check>\r\n                    <Input type=\"radio\" name=\"gender\" value={this.state.form.gender} onChange={(event) => this.profileinputChangedHandler(event)}/>{' '}\r\n                    Other\r\n                </Label>\r\n                </FormGroup>\r\n                \r\n            </Col>\r\n            </FormGroup>\r\n            <Button className=\"button-lightred mt-0\" size=\"md\" style={{width: '120px'}} >Submit</Button>{' '}\r\n            <Button color=\"secondary\" onClick={this.togglemodal}>Cancel</Button>\r\n\r\n        </Form>\r\n    </ModalComponent>\r\n\r\n    <Row className=\"mt-3\" style={{cursor: 'pointer'}}>\r\n        <Col>\r\n        <div className=\"profile-tab\" id=\"toggler2\" onClick={() => this.toggle(2)}>{this.state.toggler2 ? <i class=\"fa fa-minus mr-1\"></i> : <i class=\"fa fa-plus mr-1\"></i>}  Order tests for patients </div>\r\n        <UncontrolledCollapse toggler=\"toggler2\">\r\n        <Card className=\"collapse-box\">\r\n            <CardBody>\r\n                <React.Fragment>\r\n                    <Row>\r\n                        <i className=\"fa fa-search cpSearchColor ml-3 mt-1\"></i>\r\n                        <Col md={4}>\r\n                        <Input type=\"text\" name=\"search\" placeholder=\"Search\" onChange={(e) => this.handleSearchChange(e)} value={this.state.filter}/>\r\n                        {this.props.searchData.length !== 0 ? \r\n                        <ListGroup flush>\r\n                        {this.props.searchData.map((el) => \r\n                        <ListGroupItem onClick={() => this.selectExistingPatient(el)}>{el.firstName + ' ' + el.lastName + ' - (' + el.mobile + ')'}</ListGroupItem>\r\n                        )\r\n                        }\r\n                    </ListGroup>\r\n                        :\r\n                        <div className=\"text-center p-3\">\r\n                            {/* {!this.props.success ? this.props.loading ? <Spinner animation=\"border\" variant=\"danger\" /> : null : <div style={{color: 'red'}}>Patient Not Found</div>} */}\r\n                        </div> \r\n                        }\r\n                        \r\n                        </Col>\r\n                        <Col md={2}>\r\n                          {/* <Button onClick={(event) => this.searchExistingPatient(event)} className=\"button-lightred\" style={{marginTop: '0'}} >Search</Button> */}\r\n                        </Col>\r\n                    </Row>\r\n                {this.state.patient ? this.state.patient.map((pdata, key) =>\r\n                   <CreditPartnerCard stestdata={this.props.stestdata} stdata={this.props.stdata} keyValue={key} pdata={pdata} removePatient={this.removePatient} inputChangedPatientHandler={this.inputChangedPatientHandler} \r\n                   removeSample={this.removeSample} addSample={this.addSample} selectPatientMultipleOption={this.selectPatientMultipleOption} handleDOBChange={this.handleDOBChange} noValidationMessages={this.state.noValidationMessages}/>\r\n                ) : null}\r\n                <Row>\r\n                    <Col md={12} className=\"text-right mt-3\">\r\n                        <Button className=\"button-lightred\" size=\"md\" style={{width: '190px', marginTop:'0'}} onClick={() => this.addPatient(this.state.patientForm)}>Add new patient</Button>{' '}\r\n                    </Col>\r\n                </Row>\r\n\r\n        {this.props.user.address ?\r\n        <Row>\r\n            <Col>\r\n            {this.props.user.address.islogisticserviceable === 0 ?\r\n            <p className=\"mb-5 mt-5\"><b style={{fontSize: '15px'}}>Centre for Oncopathology's sample pickup services are not available at your address, in pincode - {this.props.user.address.pincode}. \r\n            Please use any courier service to send the sample to the Centre for Oncopathology, Mumbai.</b></p>\r\n            : null }\r\n\r\n            {this.props.user.address.islogisticserviceable === 1 ?\r\n            <React.Fragment>\r\n             <p className=\"mt-5\"><b style={{fontSize: '15px'}}>Centre for Oncopathology offers sample pickup services from your address in pincode - {this.props.user.address.pincode}. <br/><br/>\r\n             The logistics charges for sample collection and delivery will be shared with your organization at the end of the month along with the test billing cycle. \r\n             The logistics charges will be levied as per the contract terms signed between your organization and Centre for Oncopathology.<br/><br/>\r\n             If you don’t wish to use our pickup services, Select the \"No pickup service required\" checkbox below.</b></p>   \r\n            <Row className=\"mb-5\">\r\n            <Col md={12}>\r\n            <FormGroup check>\r\n            <Label check>\r\n                <Input type=\"checkbox\" value={this.state.courierCost} onChange={this.handleCourierCost}/>{' '}\r\n                No pickup service required \r\n            </Label>\r\n            </FormGroup>\r\n            {/* {this.state.courierCost ?\r\n            <p className=\"red-font mt-3 ml-3\">User to courier on their own.</p>\r\n            : null} */}\r\n            </Col>\r\n            </Row>\r\n            \r\n            </React.Fragment>\r\n            : null }\r\n            </Col>\r\n        </Row>\r\n        : null }\r\n                \r\n                {/* {this.state.duplicatePatientError ? <h4 className=\"text-center\" style={{color: 'red'}}> Please enter unique mobile number.</h4> : null} */}\r\n                \r\n                {/* <Row>\r\n                    <Col md={12} className=\"mt-3 text-center\">\r\n                        {grandTotalCharge ?\r\n                        <div style={{fontWeight: 700, fontSize: '12pt'}}>Grand Total: &#8377; {grandTotalCharge.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</div>\r\n                        : null }\r\n                    </Col>\r\n                </Row>  */}\r\n\r\n                {this.props.user.address ?\r\n                this.props.user.address.islogisticserviceable === 1 && this.props.lcdata && grandTotalCharge !== 0 && this.state.courierCost === false? \r\n                <p className=\"text-center mt-4\" style={{fontWeight: 'bold'}}>Grand Total : &#8377; {(Number(grandTotalCharge)).toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</p>\r\n                :  null\r\n                : null }\r\n\r\n                {this.props.user.address ?\r\n                    (this.props.user.address.islogisticserviceable === 0 && this.props.lcdata && grandTotalCharge !== 0) || \r\n                    (this.props.user.address.islogisticserviceable === 1 && this.props.lcdata && grandTotalCharge !== 0 && this.state.courierCost === true)? \r\n                    <p className=\"text-center mt-4\" style={{fontWeight: 'bold'}}>Grand Total : &#8377; {grandTotalCharge.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</p> \r\n                    : null\r\n                : null }         \r\n                \r\n                <Row>\r\n                    <Col md={12} className=\"mt-3 text-center\">\r\n                        <Button onClick={this.testToggleModal} disabled={this.checkPatientDetails(this.state.patient) ? false : true} className=\"button-lightred\" size=\"md\" style={{width: '190px'}} >Confirm order for all the above listed patient(s)</Button>{' '}\r\n                    </Col>\r\n                </Row>\r\n                {/* onClick={this.submitPatientTestDetails} */}\r\n                {this.state.loading ? \r\n                    <Row>\r\n                    <Col md={12} className=\"mt-3 text-center\">\r\n                        <Spinner animation=\"border\" variant=\"danger\" className=\"text-center\" />\r\n                        <p style={{color: 'red'}}>Processing Your Request. Please do not refresh or close the tab.</p>\r\n                    </Col>\r\n                    </Row>\r\n                : null}\r\n\r\n                {this.props.cpsuccess ? <Alert color=\"success\" className=\"text-center mt-3\" isOpen={this.state.visible}>Order Placed Successfully</Alert> : null}\r\n\r\n                {this.props.cperror ? <Alert color=\"danger\" className=\"text-center mt-3\" isOpen={this.state.visible}>Order not completed. Please try again.<br/>Mobile number already registered.</Alert> : null}\r\n                \r\n                {this.props.cplimiterror ? <Alert color=\"danger\" className=\"text-center mt-3\" isOpen={this.state.visible}>\r\n                    The order can not be placed, due to insufficient credit balance. Kindly request Oncopath Lab to increase credit limit.</Alert> : null}\r\n                </React.Fragment>\r\n\r\n            </CardBody>\r\n        </Card>\r\n        </UncontrolledCollapse>\r\n        </Col>\r\n    </Row>\r\n    <Row className=\"mt-3\" style={{cursor: 'pointer'}}>\r\n        <Col>\r\n        <div className=\"profile-tab\" id=\"toggler3\" onClick={() => this.toggle(3)}>{this.state.toggler3 ? <i class=\"fa fa-minus mr-1\"></i> : <i class=\"fa fa-plus mr-1\"></i>} Track Order</div>\r\n        <UncontrolledCollapse toggler=\"toggler3\">\r\n        <Card className=\"collapse-box\">\r\n            <CardBody>\r\n            <Row className=\"mt-3\">\r\n        <Col>\r\n        \r\n            <TrackSampleTable trackOrderData={this.props.phistoryData} />\r\n        </Col>\r\n    </Row>\r\n            </CardBody>\r\n        </Card>\r\n        </UncontrolledCollapse>\r\n        </Col>\r\n    </Row>\r\n\r\n    <Row className=\"mt-3 mb-5\" style={{cursor: 'pointer'}}>\r\n        <Col>\r\n        <div className=\"profile-tab\" id=\"toggler4\" onClick={() => this.toggle(4)}>{this.state.toggler4 ? <i class=\"fa fa-minus mr-1\"></i> : <i class=\"fa fa-plus mr-1\"></i>} Order History</div>\r\n        <UncontrolledCollapse toggler=\"toggler4\">\r\n        <Card className=\"collapse-box\">\r\n            <CardBody>\r\n               <CreditPartnerOrderHistory orderHistoryData={this.props.phistoryData} />\r\n            </CardBody>\r\n        </Card>\r\n        </UncontrolledCollapse>\r\n        </Col>\r\n    </Row>\r\n\r\n    <Row noGutters={true} className=\"mb-5\">\r\n        <Col xs=\"12\"><img src={logo} className=\"tthomelogo ml-0 ml-md-5\" style={{float: 'right'}}/></Col>\r\n    </Row>\r\n    \r\n    <ModalWishlistComponent confirmModal={this.state.testModal} togglemodalEnroll={this.testToggleModal} className=\"trainee-modal cpDetailModal\">\r\n       {this.state.patient ? this.state.patient.map( pdata => {\r\n           return <React.Fragment>\r\n            <Row className=\"mb-2 mt-3\">\r\n                <Col md={2} className=\"text-center\">\r\n                    <Row>\r\n                        <Col md={12}><b>Name:</b></Col>\r\n                        <Col md={12}>{pdata.firstName} {pdata.lastName}</Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={2} xs={2} className=\"text-center\"><b>Sample Name</b></Col>\r\n                <Col md={6} xs={7} className=\"text-center\"><b>Test Name</b></Col>\r\n                <Col md={2} xs={3} className=\"text-center\"><b>Amount</b></Col>\r\n            </Row>\r\n            { pdata ? pdata.testList.map( testarr => {\r\n                return <React.Fragment>\r\n                {testarr ? testarr.testListArr.map( samplearr => {\r\n                    return <React.Fragment>\r\n                        <Row className='mt-3'>\r\n                            <Col md={{size: 2, offset: 2}} xs={2} className=\"text-center\">{samplearr.sample.sampleName}</Col>\r\n                            <Col md={6} xs={7} className=\"text-center\">{samplearr.testName}</Col>\r\n                            {samplearr.price ?\r\n                            <Col md={2} xs={3} className=\"text-center\">&#8377; {(samplearr.price).toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</Col>\r\n                            : null }\r\n                        </Row>\r\n                        </React.Fragment>\r\n                }) : null }\r\n                </React.Fragment>\r\n            }) : null }<hr/>\r\n            \r\n            { pdata.testList ? \r\n              <React.Fragment>\r\n              <Row className=\"mt-3 mb-3\">\r\n                  <Col md={{size: 6, offset: 4}} className=\"text-center\"><b>Total:</b></Col>\r\n                  <Col md={2} className=\"text-center\"><b>&#8377; {(this.totalOfTestCharge(pdata.testList)).toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</b>\r\n                  </Col>\r\n              </Row><hr/>\r\n              </React.Fragment> \r\n            : null\r\n            }\r\n\r\n            </React.Fragment>\r\n        }) : null }\r\n\r\n        {this.props.user.address ?\r\n        this.props.user.address.islogisticserviceable === 1 && this.props.lcdata && grandTotalCharge !== 0 && this.state.courierCost === false? \r\n        <p className=\"text-center mt-4\" style={{fontWeight: 'bold'}}>Grand Total : &#8377; {(Number(grandTotalCharge)).toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</p>\r\n        :  null\r\n        : null }\r\n\r\n        {this.props.user.address ?\r\n            (this.props.user.address.islogisticserviceable === 0 && this.props.lcdata && grandTotalCharge !== 0) || \r\n            (this.props.user.address.islogisticserviceable === 1 && this.props.lcdata && grandTotalCharge !== 0 && this.state.courierCost === true)? \r\n            <p className=\"text-center mt-4\" style={{fontWeight: 'bold'}}>Grand Total : &#8377; {grandTotalCharge.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</p> \r\n            : null\r\n        : null } \r\n        <hr/>\r\n\r\n        {this.props.user.address && this.state.courierCost === false && this.props.user.address.islogisticserviceable === 1? \r\n            <React.Fragment>\r\n            <p className=\"mt-4 ml-3 mr-3\" style={{marginBottom: '0px'}}>The sample pick-up is requested from : </p>\r\n            <p className=\"ml-3 mr-3\" style={{fontWeight: 'bold', marginBottom: '0px'}}>{this.props.user.address.line1}, { \" \" }\r\n            {this.props.user.address.line2 ? this.props.user.address.line2 : null} \r\n            {this.props.user.address.line2 ? \", \" : null}  \r\n            {this.props.user.address.city}, { \" \" } {this.props.user.address.pincode}.</p><hr/>\r\n            </React.Fragment>\r\n            : null\r\n        } \r\n            \r\n        {this.props.user.address && this.state.courierCost === false && this.props.user.address.islogisticserviceable === 1 ? \r\n        <p className=\"mt-4 ml-3 mr-3\"><b>Note: </b>Sample will be pickup within 2 working days, between 4:00 PM - 7:00 PM.</p>\r\n        : null\r\n        }\r\n\r\n        <p className=\"mt-4 ml-3 mr-3\">Before confirming order please go through \r\n        <a href=\"https://tatatrustbucket.s3.ap-south-1.amazonaws.com/tatatrustspdf/Ordering+a+Test.pdf\" target=\"_blank\"> Terms & Conditions</a>.\r\n        </p>\r\n\r\n        <Row>\r\n            <Col md={12} className=\"mt-3 text-center\">\r\n                <Button onClick={this.submitPatientTestDetails}  className=\"button-lightred\" size=\"md\" style={{width: '190px'}} >Confirm</Button>{' '}\r\n            </Col>\r\n        </Row>\r\n\r\n    </ModalWishlistComponent>\r\n    \r\n</Container>\r\n</React.Fragment>\r\n)\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error,\r\n        success: state.success,\r\n        userTypeId: state.userTypeId,\r\n        isAuthenticated: state.token !== null,\r\n        token: state.token,\r\n        user: state.user,\r\n        searchData: state.searchData,\r\n        cpsuccess: state.cpsuccess,\r\n        cpmessage: state.cpmessage,\r\n        cperror: state.cperror,\r\n        cplimiterror: state.cplimiterror,\r\n        phistorysuccess: state.phistorysuccess,\r\n        phistoryData: state.phistoryData,\r\n        cphistorysuccess: state.cphistorysuccess,\r\n        cphistoryData: state.cphistoryData,\r\n        lpstatusdata: state.lpstatusdata,\r\n        posuccess: state.posuccess,\r\n        stsuccess: state.stsuccess,\r\n        stdata: state.stdata,\r\n        stestsuccess: state.stestsuccess,\r\n        stestdata: state.stestdata,\r\n        lcsuccess: state.lcsuccess,\r\n        lcdata: state.lcdata,\r\n        CBsuccess: state.CBsuccess,\r\n        CBdata: state.CBdata,\r\n        // isAuthenticated: state.token !== null,\r\n        // authRedirectPath: state.auth.authRedirectPath\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n        onPatientSearch: (id,data) => dispatch(actions.searchPatient(id,data)),\r\n        onPinVerification: (pincode) => dispatch(actions.pinVerification(pincode)),\r\n        onBulkPatientSampleSubmit: (id,bulkPatientTestDetails,courierCost) => dispatch(actions.bulkPatientSampleDetails(id,bulkPatientTestDetails,courierCost)),\r\n        oncreditpartnerOrderReset: () => dispatch(actions.creditpartnerOrderReset()),\r\n        oncreditPartnerOrderHistoryData: (id) => dispatch(actions.creditPartnerOrderHistoryData(id)),\r\n        onSampleType: () => dispatch(actions.sampleType()),\r\n        onSampleTest: (id) => dispatch(actions.sampleTest(id)),\r\n        onLogisticCost: () => dispatch(actions.logisticCost()),\r\n        //oncreditPartnerPatientOrderData: (id) => dispatch(actions.creditPartnerPatientOrderData(id)),\r\n        //oncreditPartnerPatientStatus: () => dispatch(actions.creditPartnerPatientStatus()),\r\n        onCreditBalance: (id) => dispatch(actions.creditBalance(id)),\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreditPartnerHome);\r\n\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TitlebarComponent from '../../components/navbar/titlebar';\r\nimport Navbar from '../../components/navbar/navbar';\r\nimport { Spinner, Row, Col, Container, Form, Table, UncontrolledCollapse, Button, CardBody, Card, Alert, FormGroup, Input, Label } from 'reactstrap';\r\nimport \"react-picky/dist/picky.css\";\r\nimport * as actions from '../../redux/actions/actions';\r\nimport HomeApi from '../../services/API/HomeApi';\r\nimport ModalComponent from '../../components/modal/modal';\r\nimport ModalWishlistComponent from '../../components/modal/modalwishlist';\r\nimport { convertToDateYYYYMMDD } from '../functions';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\n\r\nclass TraineeHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            enrolltesttableheader: [\r\n                {table_header: \"Course Id\"},\r\n                {table_header: \"Course Name\"},\r\n                {table_header: \"Start Date\"},\r\n                {table_header: \"Duration\"},\r\n                {table_header: \"Classroom / Webinar\"},\r\n            ],\r\n            wishlisttesttableheader: [\r\n                {table_header: \"Course Id\"},\r\n                {table_header: \"Course Name\"},\r\n                {table_header: \"Start Date\"},\r\n                {table_header: \"Duration\"},\r\n                {table_header: \"Classroom / Webinar\"},\r\n                {table_header: \"Enroll\"}\r\n            ],\r\n            showModal: false,\r\n            disable: true,\r\n            disableKey: null,\r\n            form: this.defaultForm(),\r\n            selectedId: '',\r\n            confirmModal: false,\r\n            courseName: '',\r\n            visible: false,\r\n        }\r\n    }\r\n\r\n    defaultForm = () => {\r\n        return {\r\n            userTypeId: this.props.userTypeId ? this.props.userTypeId : 3,\r\n            firstName: '',\r\n            lastName: '',\r\n            contactNo: '',\r\n            gender:'',\r\n            emailId: '',\r\n            // address: '',\r\n            // dob: new Date(),\r\n            // state: '',\r\n            // city: '',\r\n            // pincode:'',\r\n            // password: ''\r\n        }\r\n    }\r\n\r\n    profileinputChangedHandler(e) {\r\n        const updatedprofileForm = {\r\n          ...this.state.form,\r\n          [e.target.name]: e.target.value\r\n        }\r\n        let validationMessages = [];\r\n        this.setState({\r\n          form: updatedprofileForm, \r\n          validationMessages\r\n        });\r\n          \r\n    }\r\n\r\n    togglemodal = () => {\r\n        this.setState(prevState => ({\r\n          modal: !prevState.modal\r\n        }));\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        let id = this.props.user.id;\r\n        this.props.onCourseAndWishlist(id);\r\n        \r\n        let isAuthenticated = localStorage.getItem('token') ? true : false;\r\n        if(isAuthenticated) {\r\n            this.props.oncourseData();\r\n        }\r\n        else{\r\n            this.props.oncourseDataOpen();\r\n        }\r\n        \r\n      }\r\n\r\n      componentWillReceiveProps(nextProps) {\r\n        if(nextProps.enrollSuccess){\r\n           let id = this.props.user.id;\r\n           this.props.onCourseAndWishlist(id);\r\n        }\r\n      }\r\n    \r\n      toggle = (tabno) => {\r\n        switch(tabno) {\r\n            case 0:\r\n                this.setState(prevState => ({\r\n                    toggler: !prevState.toggler\r\n                }));\r\n                break;\r\n            case 1:\r\n                this.setState(prevState => ({\r\n                    toggler1: !prevState.toggler1\r\n                }));\r\n                break;\r\n            case 2:\r\n                this.setState(prevState => ({\r\n                    toggler2: !prevState.toggler2\r\n                }));\r\n                break;\r\n            case 3:\r\n                this.setState(prevState => ({\r\n                    toggler3: !prevState.toggler3\r\n                }));\r\n                break;\r\n            case 4:\r\n                this.setState(prevState => ({\r\n                    toggler4: !prevState.toggler4\r\n                }));\r\n                break;\r\n        }\r\n    }\r\n\r\n    enrollCourse = (event) => {\r\n        event.preventDefault();\r\n        \r\n          let courseId = this.state.selectedId;\r\n          let disableKey = this.state.disableKey;\r\n          var obj = [courseId]\r\n          console.log(obj);\r\n  \r\n          this.props.onCourseEnrolled(this.props.user.id, obj);\r\n  \r\n          this.setState(prevState => ({\r\n            confirmModal: !prevState.confirmModal,\r\n            disable: disableKey\r\n          }));\r\n\r\n          this.setState({\r\n            visible: true\r\n          }, () => {\r\n            window.setTimeout(() => {\r\n              this.setState({\r\n                visible: false\r\n              })\r\n            }, 5000)\r\n          });\r\n      }\r\n  \r\n      togglemodalEnroll = (id, courseName, key) => {\r\n        this.setState(prevState => ({\r\n          confirmModal: !prevState.confirmModal,\r\n          selectedId: id,\r\n          courseName: courseName,\r\n          disableKey: key\r\n        }));\r\n      }\r\n\r\n    render(){\r\n\r\n    let isAuthenticated = localStorage.getItem('token') ? true : false;\r\n\r\nreturn(\r\n<React.Fragment>\r\n<TitlebarComponent loggedinpatient={this.props.isAuthenticated ? true : false} />\r\n<Navbar patientHome={this.props.isAuthenticated ? true : false} />\r\n<Container>\r\n    <Row className=\"mt-5\">\r\n        <Col>\r\n            <h2>Welcome, {this.props.user.firstName + ' ' + this.props.user.lastName}</h2>\r\n        </Col>\r\n    </Row>\r\n    {this.props.enrollSuccess ? \r\n        <Alert className=\"mt-4\" color=\"success\" isOpen={this.state.visible}>{this.props.enrollData}</Alert> : null\r\n    } \r\n    <Row className=\"mt-5\" style={{cursor: 'pointer'}}>\r\n        <Col>\r\n        <div className=\"profile-tab\" id=\"toggler\" onClick={() => this.toggle(0)}>{this.state.toggler ? <i class=\"fa fa-minus mr-1\"></i> : <i class=\"fa fa-plus mr-1\"></i>} Trainee Details </div>\r\n        <UncontrolledCollapse toggler=\"toggler\">\r\n        <Card className=\"collapse-box\">\r\n            <CardBody>\r\n                <Row>\r\n                    {/* <Col md={12} className=\"text-right\"><i class=\"fa fa-edit\" onClick={this.togglemodal}></i></Col> */}\r\n                    <Col md={6} className=\"mt-3\"><b>Trainee Name:</b> {this.props.user.firstName + ' ' + this.props.user.lastName}</Col>\r\n                    <Col md={6} className=\"mt-3\"><b>Mobile No.: </b>{this.props.user.contactNo}</Col>\r\n                    <Col md={6} className=\"mt-3\"><b>Email Id:</b> {this.props.user.emailId}</Col><br/>\r\n                    <Col md={6} className=\"mt-3\"><b>Address Line 1:</b> {this.props.user.address.line1}</Col>\r\n                    <Col md={6} className=\"mt-3\"><b>City:</b> {this.props.user.address.city}</Col>\r\n                    <Col md={6} className=\"mt-3\"><b>State:</b> {this.props.user.address.state}</Col>\r\n                    <Col md={6} className=\"mt-3\"><b>Pincode:</b> {this.props.user.address.pincode}</Col>\r\n                </Row>\r\n            </CardBody>\r\n        </Card>\r\n        </UncontrolledCollapse>\r\n        </Col>\r\n    </Row>\r\n\r\n    <Row className=\"mt-3\" style={{cursor: 'pointer'}}>\r\n        <Col>\r\n        <div className=\"profile-tab\" id=\"toggler1\" onClick={() => this.toggle(1)}>{this.state.toggler1 ? <i class=\"fa fa-minus mr-1\"></i> : <i class=\"fa fa-plus mr-1\"></i>} Courses Enrolled </div>\r\n        <UncontrolledCollapse toggler=\"toggler1\">\r\n        <Card className=\"collapse-box\">\r\n            <CardBody>\r\n                <Table className=\"text-center\">\r\n                    <thead>\r\n                    <tr>\r\n                        {this.state.enrolltesttableheader ? this.state.enrolltesttableheader.map((data) => {\r\n                            return <th>{data.table_header}</th>\r\n                        }) : <Spinner color=\"danger\" />\r\n                    }\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.props.courseEWdata ? Object.values(this.props.courseEWdata.trainee.reduce((acc,cur)=>Object.assign(acc,{[cur.courseId]:cur}),{})).map((data) => {\r\n                            return this.props.coursedata ? this.props.coursedata.map((cdata) => {\r\n                                return (data.courseId === cdata.id)  ? \r\n                                <tr>\r\n                                   <td>{cdata.id}</td>\r\n                                   <td>{cdata.courseName}</td>\r\n                                   <td>{convertToDateYYYYMMDD(cdata.startDate)}</td>\r\n                                   <td>{cdata.duration} days</td>\r\n                                   <td>Classroom</td>\r\n                                </tr> \r\n                                : null\r\n                            }) : null\r\n                        }) : <Spinner color=\"danger\" />\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n            </CardBody>\r\n        </Card>\r\n        </UncontrolledCollapse>\r\n        </Col>\r\n    </Row>\r\n\r\n    <ModalComponent modal={this.state.modal} togglemodal={this.togglemodal} submit={this.submitHandler} title=\"Edit Patient Profile\" className=\"patient-profile-modal\">\r\n        <Form onSubmit={this.submitHandler}>\r\n                <FormGroup>\r\n                <Label for=\"fname\">First Name</Label>\r\n                <Input type=\"text\" value={this.state.form.firstName} name=\"firstName\" placeholder=\"First Name\" onChange={(event) => this.profileinputChangedHandler(event)} />\r\n                </FormGroup>\r\n                <Label for=\"lname\">Last Name</Label>\r\n                <FormGroup>\r\n                <Input type=\"text\" value={this.state.form.lastName} name=\"lastName\" placeholder=\"Second Name\" onChange={(event) => this.profileinputChangedHandler(event)} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                <Label for=\"mobile\">Mobile Number</Label>\r\n                <Input type=\"text\" value={this.state.form.contactNo} name=\"contactNo\" placeholder=\"Mobile Number\" onChange={(event) => this.profileinputChangedHandler(event)} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                <Label for=\"email\">Email</Label>\r\n                <Input type=\"email\" value={this.state.form.emailId} name=\"emailId\" placeholder=\"Email Address\" onChange={(event) => this.profileinputChangedHandler(event)}/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                <Label for=\"exampleDate\">Date of Birth</Label>\r\n                <Input\r\n                type=\"date\"\r\n                name=\"dob\"\r\n                id=\"exampleDate\"\r\n                placeholder=\"Date of Birth\"\r\n                onChange={(event) => this.profileinputChangedHandler(event)}\r\n                />\r\n            </FormGroup>\r\n                <FormGroup tag=\"fieldset\">\r\n            <legend className=\"col-form-label\">Gender :</legend>\r\n            <Col>\r\n                <FormGroup check>\r\n                <Label check>\r\n                    <Input type=\"radio\" name=\"gender\" value={this.state.form.gender} onChange={(event) => this.profileinputChangedHandler(event)}/>{' '}\r\n                    Male\r\n                </Label>\r\n                </FormGroup>\r\n                <FormGroup check>\r\n                <Label check>\r\n                    <Input type=\"radio\" name=\"gender\" value={this.state.form.gender} onChange={(event) => this.profileinputChangedHandler(event)}/>{' '}\r\n                    Female\r\n                </Label>\r\n                </FormGroup>\r\n                <FormGroup check >\r\n                <Label check>\r\n                    <Input type=\"radio\" name=\"gender\" value={this.state.form.gender} onChange={(event) => this.profileinputChangedHandler(event)}/>{' '}\r\n                    Other\r\n                </Label>\r\n                </FormGroup>\r\n                \r\n            </Col>\r\n            </FormGroup>\r\n            <Button className=\"button-lightred mt-0\" size=\"md\" style={{width: '120px'}} >Submit</Button>{' '}\r\n            <Button color=\"secondary\" onClick={this.togglemodal}>Cancel</Button>\r\n\r\n        </Form>\r\n    </ModalComponent>\r\n\r\n    <Row className=\"mt-3\" style={{cursor: 'pointer'}}>\r\n        <Col>\r\n        <div className=\"profile-tab\" id=\"toggler2\" onClick={() => this.toggle(2)}>{this.state.toggler2 ? <i class=\"fa fa-minus mr-1\"></i> : <i class=\"fa fa-plus mr-1\"></i>} Wishlist </div>\r\n        <UncontrolledCollapse toggler=\"toggler2\">\r\n        <Card className=\"collapse-box\">\r\n            <CardBody>\r\n                <Table className=\"text-center\">\r\n                    <thead>\r\n                        <tr>\r\n                            {this.state.wishlisttesttableheader ? this.state.wishlisttesttableheader.map((data) => {\r\n                                return <th>{data.table_header}</th>\r\n                            }) : <Spinner color=\"danger\" />\r\n                        }\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.props.courseEWdata ? Object.values(this.props.courseEWdata.wishlist.reduce((acc,cur)=>Object.assign(acc,{[cur.courseId]:cur}),{})).map((data, key) => {\r\n                        return this.props.coursedata ? this.props.coursedata.map((cdata) => {\r\n                            return (data.courseId === cdata.id)  ? \r\n                            cdata.enrolled === true ?\r\n                            null :\r\n                            <tr>\r\n                                <td>{cdata.id}</td>\r\n                                <td>{cdata.courseName}</td>\r\n                                <td>{convertToDateYYYYMMDD(cdata.startDate)}</td>\r\n                                <td>{cdata.duration}</td>\r\n                                <td>Webinar</td>\r\n                                {this.props.userTypeId === \"3\" && cdata.enrolled === true ?\r\n                                <td><p className=\"green-font\">Enrolled</p></td> :\r\n                                this.props.userTypeId === \"3\" ?\r\n                                <td><Button disabled={this.state.disable === key} onClick={isAuthenticated ? () => this.togglemodalEnroll(cdata.id, cdata.courseName, key) : this.checkLoginTrainee}>Enroll</Button></td>\r\n                            : null }\r\n                            </tr> \r\n                            : null\r\n                        }) : null\r\n                    }) : <Spinner color=\"danger\" />\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n            </CardBody>\r\n        </Card>\r\n        </UncontrolledCollapse>\r\n        </Col>\r\n    </Row>\r\n\r\n    <Row className=\"mt-3\" style={{cursor: 'pointer'}}>\r\n        <Col>\r\n        <div className=\"profile-tab\" id=\"toggler3\" onClick={() => this.toggle(3)}>{this.state.toggler3 ? <i class=\"fa fa-minus mr-1\"></i> : <i class=\"fa fa-plus mr-1\"></i>} Certificates </div>\r\n        <UncontrolledCollapse toggler=\"toggler3\">\r\n        <Card className=\"collapse-box\">\r\n            <CardBody>\r\n            \r\n            </CardBody>\r\n        </Card>\r\n        </UncontrolledCollapse>\r\n        </Col>\r\n    </Row>\r\n\r\n    <Row className=\"mt-3 mb-5\" style={{cursor: 'pointer'}}>\r\n        <Col>\r\n        <div className=\"profile-tab\" id=\"toggler4\" onClick={() => this.toggle(4)}>{this.state.toggler4 ? <i class=\"fa fa-minus mr-1\"></i> : <i class=\"fa fa-plus mr-1\"></i>}Schedule of courses enrolled</div>\r\n        <UncontrolledCollapse toggler=\"toggler4\">\r\n        <Card className=\"collapse-box\">\r\n            <CardBody>\r\n           \r\n            </CardBody>\r\n        </Card>\r\n        </UncontrolledCollapse>\r\n        </Col>\r\n    </Row>\r\n\r\n    <Row noGutters={true} className=\"mb-5\">\r\n        <Col xs=\"12\"><img src={logo} className=\"tthomelogo ml-0 ml-md-5\" style={{float: 'right'}}/></Col>\r\n    </Row>\r\n    \r\n    <ModalWishlistComponent confirmModal={this.state.confirmModal} togglemodalEnroll={this.togglemodalEnroll} className=\"trainee-modal\">\r\n        <h5>Are you sure you want to enroll for {this.state.courseName} course ?</h5>\r\n        <Button color=\"success\" onClick={this.enrollCourse}>Yes</Button>\r\n        <Button color=\"danger\" onClick={this.togglemodalEnroll} className=\"ml-3\">No</Button>\r\n    </ModalWishlistComponent>\r\n</Container>\r\n</React.Fragment>\r\n)\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error,\r\n        enrollSuccess: state.enrollSuccess,\r\n        enrollData:state.enrollData,\r\n        userTypeId: state.userTypeId,\r\n        isAuthenticated: state.token !== null,\r\n        token: state.token,\r\n        user: state.user,\r\n        coursedata: state.coursedata,\r\n        courseEWdata: state.courseEWdata\r\n        // isAuthenticated: state.token !== null,\r\n        // authRedirectPath: state.auth.authRedirectPath\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n        onPatientSearch: (id,data) => dispatch(actions.searchPatient(id,data)),\r\n        onPinVerification: (pincode) => dispatch(actions.pinVerification(pincode)),\r\n        onBulkPatientSampleSubmit: (id,bulkPatientTestDetails) => dispatch(actions.bulkPatientSampleDetails(id,bulkPatientTestDetails)),\r\n        oncourseData: () => dispatch(actions.courseData()),\r\n        onCourseEnrolled: (userId,cId) => dispatch(actions.courseEnroll(userId,cId)),\r\n        onCourseAndWishlist: (id) => dispatch(actions.courseAndWishlist(id)),\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(TraineeHome);\r\n","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport '../login/Login.css';\r\n\r\nclass CheckUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        form: this.defaultForm()\r\n      };\r\n  }\r\n\r\n  defaultForm = () => {\r\n    return {\r\n        mobile: '',\r\n        countryCode: '',\r\n    }\r\n  }\r\n  \r\n  handleUserCheck(e){\r\n    const updatedForm = {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value\r\n      }\r\n      let validationMessages = [];\r\n      this.setState({form: updatedForm, validationMessages});\r\n  }\r\n\r\n  userCheckSubmitHandler = (event) => {\r\n    console.log(\"User Check clicked!\");\r\n    event.preventDefault();\r\n    \r\n    const userCheckForm = {\r\n        ...this.state.form,\r\n    }\r\n    this.props.onUserCheck(userCheckForm);\r\n  }\r\n\r\n\r\n\r\nrender() {\r\n  \r\n  let userPresent = null;\r\n  if(this.props.success) {\r\n    userPresent = <Redirect to=\"/patient-login\" />\r\n  }\r\n  if(this.props.error) {\r\n    userPresent = <Redirect to=\"/request-otp\" />\r\n  }\r\n  \r\nreturn (\r\n    <React.Fragment>\r\n      {userPresent}\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n          <div class=\"col-md-6 offset-md-3 text-center\">\r\n            <div className=\"container-box text-center\">\r\n              <div class=\"logo\">\r\n                <img src={logo} className=\"tthomelogo\"/>\r\n              </div>\r\n              {/* <h4>Centre for Oncopathology </h4> */}\r\n              <h2>Check if user exists ?</h2>\r\n              \r\n              <div className=\"login-box-inner\">\r\n                <form onSubmit={this.userCheckSubmitHandler}>\r\n                <div class=\"form-group\">\r\n                    <span class=\"has-float-label\">\r\n                      <input required class=\"form-control\" id=\"mobile\" name=\"mobile\" type=\"text\" placeholder=\"Mobile No.\" value={this.state.form.mobile} onChange={(event) => this.handleUserCheck(event)}/>\r\n                      <label for=\"mobile\" className=\"patientLabel\">Mobile No.</label>\r\n                    </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <span class=\"has-float-label\">\r\n                      <input required class=\"form-control\" id=\"countryCode\" name=\"countryCode\" type=\"text\" placeholder=\"Country Code of the Mobile No.\" value={this.state.form.countryCode} onChange={(event) => this.handleUserCheck(event)}/>\r\n                      <label for=\"countryCode\" className=\"patientLabel\">Country Code</label>\r\n                    </span>\r\n                </div>\r\n                  \r\n                \r\n                  <Button className=\"button-lightred\" size=\"lg\" style={{width: '190px'}}>\r\n                   Submit\r\n                  </Button>\r\n                  \r\n                  <h5>{this.props.error}</h5>\r\n                  <h5>{this.props.message}</h5>\r\n\r\n\r\n                </form>\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n      </div>\r\n      {/* <div className=\"privacy-text\"><span>Terms</span> | <span>Privacy</span></div> */}\r\n    </div>\r\n    </React.Fragment>\r\n);\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userTypeId: state.userTypeId,\r\n        success: state.success,\r\n        message: state.message,\r\n        error: state.error,\r\n        user: state.user,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      onUserCheck: (userCheckForm) => dispatch(actions.userCheck(userCheckForm))\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckUser);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Col, Row, Button } from 'reactstrap';\r\n\r\nconst PatientRegisterSuccess = (props) => (\r\n    <Container className=\"text-center\">\r\n        <Row className=\"pt-3 pb-3\">\r\n          <Col><p>{props.message}</p></Col>\r\n        </Row>\r\n        <Row className=\"pt-3 pb-3\">\r\n          <Col><p className=\"red-font raleway-light font-size\">Thankyou, Registration process completed.<br />Kindly Log In.\r\n           <br /></p></Col>\r\n        </Row>\r\n        {/* <Row className=\"pb-3\">\r\n          <Col><p className=\"red-font raleway-light \">To learn more about how Tata Trusts collects, uses, shares and protects your <br /> personal data please read Tata Trusts' Privacy Policy. </p><br />\r\n          </Col>\r\n        </Row> */}\r\n        <Row>\r\n            <Col>\r\n                <Link to=\"/patient-login\"><Button className=\"button-lightred mt-0 mb-5\" size=\"md\" style={{width: '160px', fontSize: '18px'}} >Log In</Button>{' '}</Link>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n);\r\n\r\nexport default PatientRegisterSuccess;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Col, Row, Button } from 'reactstrap';\r\n\r\nconst PatientOTPSuccess = (props) => (\r\n    <Container className=\"text-center\">\r\n        <Row className=\"pt-3 pb-3\">\r\n          <Col><p>{props.message}</p></Col>\r\n        </Row>\r\n        <Row className=\"pt-3 pb-3\">\r\n          <Col><p className=\"red-font raleway-light font-size\">We have sent you a verification OTP number in the mobile number you have provided. <br />\r\n          <br /></p></Col>\r\n        </Row>\r\n        {/* <Row className=\"pb-3\">\r\n          <Col><p className=\"red-font raleway-light \">To learn more about how Tata Trusts collects, uses, shares and protects your <br /> personal data please read Tata Trusts' Privacy Policy. </p><br />\r\n          </Col>\r\n        </Row> */}\r\n        <Row>\r\n            <Col>\r\n                <Link to={{pathname: \"/patient-signup/\", \r\n                state: {\r\n                  contactNo: props.mobile,\r\n                  countryCode: props.countryCode\r\n                }\r\n  }}><Button className=\"button-lightred mt-0 mb-5\" size=\"md\" style={{width: '160px', fontSize: '18px'}} >Sign Up</Button></Link>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n);\r\n\r\nexport default PatientOTPSuccess;","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport PatientRegisterSuccess from './patientRegisterSuccess';\r\nimport PatientOTPSuccess from './patientOTPSuccess';\r\nimport './patient.css';\r\n\r\nclass PatientRequestOTP extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        form: this.defaultForm()\r\n      };\r\n  }\r\n\r\n  defaultForm = () => {\r\n    return {\r\n        mobile: '',\r\n        countryCode: '91',\r\n    }\r\n  }\r\n  \r\n  handleOtpRequest(e){\r\n    let validationMessages = [];\r\n\r\n    if (e.target.type === \"number\") {\r\n      e.target.value = e.target.value.slice(0,10);\r\n    } \r\n    \r\n    if(e.target.type === \"number\" && e.target.value.length < 10){\r\n      validationMessages.push(\"Required 10 digits number, match requested format.\");\r\n      this.setState({validationMessages});\r\n    }\r\n    else {\r\n      validationMessages = [];\r\n      this.setState({validationMessages});\r\n    }\r\n\r\n    const updatedForm = {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value\r\n      }\r\n      \r\n      this.setState({form: updatedForm, validationMessages});\r\n  }\r\n\r\n  otpRequestSubmitHandler = (event) => {\r\n    console.log(\"OTP Request clicked!\");\r\n    event.preventDefault();\r\n    \r\n    const updatedPatientForm = {\r\n        ...this.state.form,\r\n    }\r\n    if(this.state.validationMessages.length === 0){\r\n      this.props.onOtpRequest(updatedPatientForm);\r\n    }\r\n  }\r\n\r\n\r\n\r\nrender() {\r\n\r\n//   let otpSuccess = null;\r\n//   if(this.props.success) {\r\n\r\n//     otpSuccess = <PatientOTPSuccess />  \r\n  \r\n// }\r\n\r\n\r\nreturn (\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n          <div class=\"col-md-6 offset-md-3 text-center\">\r\n            <div className=\"container-box text-center\">\r\n              <div class=\"logo\">\r\n                <img src={logo} className=\"tthomelogo\"/>\r\n              </div>\r\n              {/* <h4>Centre for Oncopathology </h4> */}\r\n              {this.props.success ? \r\n              <PatientOTPSuccess message={this.props.success} mobile={this.state.form.mobile} countryCode={this.state.form.countryCode}/> :\r\n              <React.Fragment>\r\n              <p className=\"red-font request-otp mt-5\">Please enter your mobile number for new registration.</p>\r\n              \r\n              <div className=\"login-box-inner\">\r\n                <form onSubmit={this.otpRequestSubmitHandler}>\r\n                <Row>\r\n                  <Col md={2} style={{paddingLeft: '5px', paddingRight: '5px'}}>\r\n                  <div class=\"form-group\">\r\n                      <input required class=\"form-control\" style={{height: '60px'}} name=\"countryCode\" type=\"text\" value={this.state.form.countryCode} onChange={(event) => this.handleOtpRequest(event)}/>\r\n                  </div>\r\n                  </Col>\r\n                  <Col>\r\n                  <div class=\"form-group\">\r\n                    <span class=\"has-float-label\">\r\n                      <input required class=\"form-control\" id=\"mobile\" name=\"mobile\" type=\"number\" pattern={0-9} placeholder=\"Patient Mobile No.\" \r\n                      value={this.state.form.mobile} onChange={(event) => this.handleOtpRequest(event)} />\r\n                      <label for=\"mobile\" className=\"patientLabel\">Patient Mobile No.</label>\r\n                      <p className=\"red-font mt-3\">{this.state.validationMessages}</p>\r\n                    </span>\r\n                  </div>\r\n                  </Col>\r\n                </Row>\r\n                {/* <div class=\"form-group\">\r\n                    <span class=\"has-float-label\">\r\n                      <input required class=\"form-control\" id=\"mobile\" name=\"mobile\" type=\"number\" pattern={0-9} placeholder=\"Patient Mobile No.\" \r\n                      value={this.state.form.mobile} onChange={(event) => this.handleOtpRequest(event)} />\r\n                      <label for=\"mobile\">Patient Mobile No.</label>\r\n                      <p className=\"red-font mt-3\">{this.state.validationMessages}</p>\r\n                    </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <span class=\"has-float-label\">\r\n                      <input required class=\"form-control\" id=\"countryCode\" name=\"countryCode\" type=\"text\" placeholder=\"Country Code of the Mobile No.\" value={this.state.form.countryCode} />\r\n                      <label for=\"countryCode\">Country Code</label>\r\n                    </span>\r\n                </div> */}\r\n\r\n                  <Button className=\"button-lightred\" size=\"lg\" style={{width: '190px'}}>\r\n                  Next\r\n                  </Button>\r\n                  {this.props.error ? \r\n                  <h5 className=\"mt-4\" style={{color:'red'}}>{this.props.message}</h5>\r\n                  : null\r\n                  }\r\n\r\n                </form>\r\n              </div>\r\n              </React.Fragment>\r\n              }\r\n            </div>\r\n            \r\n          </div>\r\n      </div>\r\n      {/* <div className=\"privacy-text\"><span>Terms</span> | <span>Privacy</span></div> */}\r\n    </div>\r\n);\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userTypeId: state.userTypeId,\r\n        success: state.success,\r\n        message: state.message,\r\n        error: state.error,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOtpRequest: (patientForm) => dispatch(actions.patientOtpRequest(patientForm))\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientRequestOTP);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\nimport { convertDOB } from '../functions';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport PatientRegisterSuccess from './patientRegisterSuccess';\r\nimport ModalComponent from '../../components/modal/modal';\r\nimport { runInThisContext } from 'vm';\r\nimport DatePicker from \"react-date-picker\";\r\n\r\nclass PatientSignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      form: this.defaultForm(),\r\n      modal: false,\r\n      mandatoryMessage: false,\r\n      patientSignUpError: this.props.patientSignUpError,\r\n    };\r\n  }\r\n\r\n\r\ndefaultForm = () => {\r\n  return {\r\n      designation: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      emailId: '',\r\n      contactNo: this.props.location.state.contactNo,\r\n      userTypeId: 2,\r\n      gender: '',\r\n      dob: new Date(),\r\n      password: '',\r\n      countryCode: this.props.location.state.countryCode,\r\n      age: '22',\r\n      otp: '',\r\n      line1:'',\r\n      line2:'',\r\n      city:'',\r\n      pincode:''\r\n  }\r\n}\r\n\r\n\r\ninputChangedHandler(e) {\r\n  let validationMessages = [];\r\n\r\n  if (e.target.type === \"number\") {\r\n    e.target.value = e.target.value.slice(0,10);\r\n  } \r\n  \r\n  if(e.target.type === \"number\" && e.target.value.length < 10){\r\n    validationMessages.push(\"Required 10 digits number, match requested format.\");\r\n    this.setState({validationMessages});\r\n  }\r\n  else {\r\n    validationMessages = [];\r\n    this.setState({validationMessages});\r\n  }\r\n\r\n  const updatedForm = {\r\n    ...this.state.form,\r\n    [e.target.name]: e.target.value\r\n  }\r\n  this.setState({form: updatedForm, validationMessages});\r\n    \r\n}\r\n\r\ninputChangedAddressHandler (e) {\r\n  const updatedForm = {\r\n    ...this.state.form,\r\n    [e.target.name]: e.target.value\r\n  }\r\n  this.setState({form: updatedForm});\r\n}\r\n\r\nhandleDOBChange(date) {\r\n  //let convertedDate = convertToDateYYYYMMDD(date);\r\n  const updatedFormDate = {\r\n    ...this.state.form,\r\n    dob: date\r\n  }\r\n  let validationMessages = [];\r\n  this.setState({\r\n    form: updatedFormDate, validationMessages\r\n  });\r\n}\r\n\r\n\r\n  submitHandler = (event) => {\r\n    console.log(\"login clicked!\");\r\n    event.preventDefault();\r\n\r\n    const updatedPatientForm = {\r\n      designation: this.state.form.designation,\r\n      firstName: this.state.form.firstName,\r\n      lastName: this.state.form.lastName,\r\n      emailId: this.state.form.emailId,\r\n      contactNo: this.props.location.state.contactNo,\r\n      userTypeId: 2,\r\n      gender: this.state.form.gender,\r\n      dob: convertDOB(this.state.form.dob),\r\n      password: this.state.form.password,\r\n      countryCode:this.props.location.state.countryCode,\r\n      age: '22',\r\n      otp: this.state.form.otp,\r\n      address: {\r\n        line1: this.state.form.line1,\r\n        line2: this.state.form.line2,\r\n        city: this.state.form.city,\r\n        pincode: this.state.form.pincode\r\n      }\r\n    }\r\n\r\n    this.props.onPatientSignUp(updatedPatientForm);\r\n\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n\r\n  checkRegisterFormDetails = () => {\r\n\r\n    let flag = null;\r\n    if(flag || flag === null){\r\n            if(this.state.form.designation !== \"\" && this.state.form.firstName !== \"\" && this.state.form.lastName !== \"\" && this.state.form.emailId !== \"\"\r\n            && this.state.form.contactNo !== \"\" && this.state.form.gender !== \"\" && this.state.form.dob !== \"\" && this.state.form.password !== \"\" \r\n            && this.state.form.countryCode !== \"\" && this.state.form.otp !== \"\" && this.state.form.line1 !== \"\" && this.state.form.city !== \"\"\r\n            && this.state.form.pincode !== \"\") {\r\n                flag = true;\r\n            }\r\n            else {\r\n                flag = false;\r\n            }\r\n    }\r\n    console.log(flag);\r\n    return flag;\r\n}\r\n\r\n\r\nrender() {\r\nconsole.log(this.state.form);\r\nreturn (\r\n  \r\n  <div class=\"container\">\r\n  <div class=\"row\">\r\n  <div class=\"col-12 text-center\">\r\n    <div className=\"register-box\">\r\n      <div class=\"logo\">\r\n        <img src={logo} className=\"tthomelogo\"/>\r\n      </div>\r\n      {/* <h4 className=\"red-font raleway-light\">Centre for Oncopathology </h4> */}\r\n      \r\n      <div className=\"register-container-box login-box-inner\">\r\n      {this.props.successflag ? \r\n        <PatientRegisterSuccess  /> \r\n      :\r\n      <React.Fragment>\r\n        <div class=\"row\">\r\n            <div class=\"col-11 register-heading\">\r\n                <span>Patient Sign Up</span>\r\n            </div>\r\n        {/* <div class=\"col-1\">\r\n            <Link to=\"/request-otp\" ><div>X</div></Link>\r\n        </div> */}\r\n        </div>\r\n        <div class=\"row\">\r\n      {/* <div class=\"col-12 text-center mb-5\">\r\n          <span style={{fontSize: '18px'}}>Enter Your Details</span>\r\n      </div> */}\r\n      <div class=\"col-12 mb-5 mt-5\">\r\n          <span style={{fontSize: '18px'}}>Please create the account with patients details as the reports generated \r\n          for the tests ordered will have registered users' name only.</span>\r\n      </div>\r\n      {/* <p className=\"red-font ml-4 mb-4\">*All fields are mandatory</p> */}\r\n  </div>     \r\n    <Form>\r\n      <Row form>\r\n      <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n        <FormGroup>\r\n          <Label for=\"state\"><span className=\"starSize\">*</span>OTP</Label>\r\n          <Input required type=\"text\" value={this.state.form.otp} name=\"otp\" placeholder=\"OTP\" onChange={(event) => this.inputChangedHandler(event)}/>\r\n        </FormGroup>\r\n      </Col>\r\n      </Row>\r\n      <Row form>\r\n        <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n          <FormGroup>\r\n            <Label for=\"title\"><span className=\"starSize\">*</span>Title</Label>\r\n            <Input type=\"select\" name=\"designation\" value={this.state.form.designation} placeholder=\"Select\" onChange={(event) => this.inputChangedHandler(event)}>\r\n              <option>Select Title</option>\r\n              <option>Mr.</option>\r\n              <option>Mrs.</option>\r\n              <option>Miss.</option>\r\n              <option>Ms.</option>\r\n              <option>Master</option>\r\n              <option>Dr.</option>\r\n            </Input>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n          <FormGroup>\r\n            <Label for=\"fname\"><span className=\"starSize\">*</span>First Name</Label>\r\n            <Input required type=\"text\" value={this.state.form.firstName} name=\"firstName\" placeholder=\"First Name\" onChange={(event) => this.inputChangedHandler(event)} />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col md={3} className=\"ml-md-3 ml-lg-5 mr-md-3 mr-lg-5\">\r\n          <Label for=\"lname\"><span className=\"starSize\">*</span>Last Name</Label>\r\n          <FormGroup>\r\n            <Input required type=\"text\" value={this.state.form.lastName} name=\"lastName\" placeholder=\"Second Name\" onChange={(event) => this.inputChangedHandler(event)} />\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row form>\r\n      <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n      <FormGroup>\r\n          <Label for=\"address\"><span className=\"starSize\">*</span>Country Code</Label>\r\n          <Input required type=\"text\" value={this.state.form.countryCode} name=\"countryCode\" placeholder=\"Country Code\" onChange={(event) => this.inputChangedHandler(event)}/>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n      <FormGroup>\r\n          <Label for=\"mobile\"><span className=\"starSize\">*</span>Patient Mobile Number</Label>\r\n          <Input required type=\"number\" value={this.state.form.contactNo} name=\"contactNo\" placeholder=\"Patient Mobile Number\" onChange={(event) => this.inputChangedHandler(event)} />\r\n          <p className=\"red-font mt-3\">{this.state.validationMessages}</p>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col md={3} className=\"ml-md-3 ml-lg-5 mr-md-3 mr-lg-5\">\r\n      <FormGroup>\r\n          <Label for=\"email\"><span className=\"starSize\">*</span>Email</Label>\r\n          <Input required type=\"email\" value={this.state.form.emailId} name=\"emailId\" placeholder=\"Email Id\" onChange={(event) => this.inputChangedHandler(event)}/>\r\n          {this.props.patientSignUpError ?\r\n          <p className=\"red-font mt-3\">Email Id already exists.</p>\r\n          : null}\r\n        </FormGroup>\r\n      </Col>\r\n      </Row>\r\n      <Row>\r\n      <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n      <FormGroup>\r\n          <Label for=\"state\"><span className=\"starSize\">*</span>Password</Label>\r\n          <Input required type=\"password\" value={this.state.form.password} name=\"password\" placeholder=\"Password\" onChange={(event) => this.inputChangedHandler(event)}/>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n        <Label for=\"state\"><span className=\"starSize\">*</span>Date of Birth</Label>\r\n        <FormGroup>\r\n        <DatePicker\r\n          value={this.state.form.dob}\r\n          onChange={(date) => this.handleDOBChange(date)}\r\n          maxDate={new Date()}\r\n        />\r\n        {/* <Input required type=\"date\" name=\"dob\" value={this.state.form.dob} onChange={(event) => this.inputChangedHandler(event)} /> */}\r\n        </FormGroup>\r\n        </Col>\r\n      <Col sm={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n      <FormGroup tag=\"fieldset\">\r\n        <legend className=\"col-form-label\"><span className=\"starSize\">*</span>Gender</legend>\r\n        <Col>\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input required type=\"radio\" name=\"gender\" value=\"M\" checked={this.state.form.gender === \"M\"} onChange={(event) => this.inputChangedHandler(event)}/>\r\n              Male\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input required type=\"radio\" name=\"gender\" value=\"F\" checked={this.state.form.gender === \"F\"} onChange={(event) => this.inputChangedHandler(event)}/>\r\n             Female\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup check >\r\n            <Label check>\r\n              <Input required type=\"radio\" name=\"gender\" value=\"Other\" checked={this.state.form.gender === \"Other\"} onChange={(event) => this.inputChangedHandler(event)}/>\r\n              Other\r\n            </Label>\r\n          </FormGroup>\r\n        </Col>\r\n      </FormGroup>\r\n      </Col>\r\n      </Row>\r\n      <Row form>\r\n      <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n      <FormGroup>\r\n          <Label for=\"address\"><span className=\"starSize\">*</span>Address Line 1</Label>\r\n          <Input required type=\"text\" value={this.state.form.line1} name=\"line1\" placeholder=\"Line 1\" onChange={(event) => this.inputChangedHandler(event)}/>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5 mt-3\">\r\n      <FormGroup>\r\n          <Label for=\"mobile\">Address Line 2</Label>\r\n          <Input type=\"text\" value={this.state.form.line2} name=\"line2\" placeholder=\"Line 2\" onChange={(event) => this.inputChangedHandler(event)} />\r\n        </FormGroup>\r\n      </Col>\r\n      </Row>\r\n      <Row form>\r\n      <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n      {/* <FormGroup>\r\n          <Label for=\"address\">*State</Label>\r\n          <Input required type=\"text\" value={this.state.form.state} name=\"state\" placeholder=\"State\" onChange={(event) => this.inputChangedHandler(event)}/>\r\n        </FormGroup> */}\r\n        <FormGroup>\r\n          <Label for=\"email\"><span className=\"starSize\">*</span>City</Label>\r\n          <Input required type=\"text\" value={this.state.form.city} name=\"city\" placeholder=\"City\" onChange={(event) => this.inputChangedHandler(event)}/>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n      <FormGroup>\r\n          <Label for=\"mobile\"><span className=\"starSize\">*</span>Pincode</Label>\r\n          <Input required type=\"text\" value={this.state.form.pincode} name=\"pincode\" placeholder=\"Pincode\" onChange={(event) => this.inputChangedHandler(event)} />\r\n        </FormGroup>\r\n      </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <Button disabled={this.checkRegisterFormDetails(this.state.form) ? false : true} className=\"button-lightred mt-0\" size=\"md\" style={{width: '120px'}} onClick={this.toggleModal}>Submit</Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {this.checkRegisterFormDetails(this.state.form) ?\r\n      null :\r\n      <h5 style={{color: 'red'}} className=\"mt-3\">Fields marked with  <span className=\"starSize\"> * </span>  are required.</h5>\r\n      }\r\n\r\n      <h5>{this.props.successflag}</h5>\r\n\r\n      {/* {this.props.invalidData === \"403\" ? \r\n                  <Alert className=\"mt-4\" color=\"danger\" isOpen={this.state.visible}>Invalid credentials, please try again.</Alert>\r\n                  : null\r\n                  } */}\r\n    </Form> \r\n\r\n    <ModalComponent modal={this.state.modal} toggleModal={this.toggleModal}>\r\n      <h5>Are you sure you what to submit the form ?</h5>\r\n      <Button color=\"success\" onClick={this.submitHandler}>Yes</Button>\r\n      <Button color=\"danger\" onClick={this.toggleModal} className=\"ml-3\">No</Button>\r\n    </ModalComponent>\r\n    </React.Fragment>\r\n      }\r\n      </div>\r\n      \r\n\r\n    </div>\r\n    \r\n  </div>\r\n</div>\r\n  {/* <div className=\"privacy-text\"><span>Terms</span> | <span>Privacy</span></div> */}\r\n</div>\r\n  \r\n  \r\n);\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      userTypeId: state.userTypeId,\r\n      successflag: state.successflag,\r\n      message: state.message,\r\n      patientSignUpError: state.patientSignUpError,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      onPatientSignUp: (updatedPatientForm) => dispatch(actions.patientsignup(updatedPatientForm))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientSignUp);","import React, { Component } from 'react';\r\nimport { Link, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Alert } from 'reactstrap';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\nimport './patient.css';\r\n\r\nimport * as actions from '../../redux/actions/actions';\r\nimport { Spinner, Row, Col } from 'react-bootstrap';\r\n\r\nclass PatientLogin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      validationMessages: [],\r\n      form: this.defaultForm(),\r\n      loading: false,\r\n      visible : false\r\n    };\r\n  }\r\n\r\n\r\ndefaultForm = () => {\r\n  return {\r\n      email: '91',\r\n      password: '',\r\n      userType: 2,\r\n  }\r\n}\r\n\r\ninputChangedHandler(e) {\r\n  let validationMessages = [];\r\n\r\n  if (e.target.type === \"number\") {\r\n    e.target.value = e.target.value.slice(0,12);\r\n  }\r\n  \r\n  if(e.target.type === \"number\" && e.target.value.length < 12){\r\n    validationMessages.push(\"Required 12 digits number, match requested format.\");\r\n    this.setState({validationMessages});\r\n  }\r\n  else {\r\n    validationMessages = [];\r\n    this.setState({validationMessages});\r\n  }\r\n\r\n  if (e.target.type === \"number\") {\r\n    e.target.value = e.target.value.slice(0,12); \r\n  }\r\n\r\n  const updatedForm = {\r\n    ...this.state.form,\r\n    [e.target.name]: e.target.value\r\n  }\r\n\r\n  this.setState({\r\n    form: updatedForm, \r\n    validationMessages\r\n  });\r\n    \r\n  }\r\n\r\n\r\n  submitHandler = (event) => {\r\n    console.log(\"login clicked!\");\r\n    event.preventDefault();\r\n\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    \r\n    const patientLoginForm = {\r\n        ...this.state.form,\r\n        email: this.state.form.email\r\n    }\r\n    this.props.onPatientLogin(patientLoginForm);\r\n\r\n    this.setState({\r\n      visible: true\r\n    }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({\r\n          visible: false\r\n        })\r\n      }, 5000)\r\n    });\r\n  }\r\n\r\n  \r\n\r\nrender() {\r\n\r\nreturn (\r\n  <React.Fragment>\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n          <div class=\"col-md-6 offset-md-3 text-center\">\r\n            <div className=\"container-box text-center\">\r\n              <div class=\"logo\">\r\n                <img src={logo} className=\"tthomelogo\"/>\r\n              </div>\r\n              {/* <h4>Centre for Oncopathology </h4> */}\r\n              <h2>Log In</h2>\r\n              <div className=\"login-box-inner\">\r\n                <form onSubmit={this.submitHandler}>\r\n                  <div class=\"form-group\">\r\n                    <span class=\"has-float-label\">\r\n                      {/* <p style={{display: 'inline',position: 'absolute',left: '11px',top: '20px', color: '#9e9e9e'}}>91 - </p> */}\r\n                      <input required class=\"form-control\" id=\"username\" name=\"email\" type=\"number\" pattern={0-9} min=\"0\" max=\"999999999999\" maxLength=\"12\" placeholder=\"Patient Mobile No.\" value={this.state.form.email} onChange={(event) => this.inputChangedHandler(event)}/>\r\n                      <label for=\"username\" className=\"patientLabel\">Patient Mobile No.</label>\r\n                      <p className=\"red-font mt-3\">{this.state.validationMessages}</p>\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <span class=\"has-float-label\">\r\n                      <input required class=\"form-control\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"Password\" value={this.state.form.password} onChange={(event) => this.inputChangedHandler(event)}/>\r\n                      <label for=\"password\" className=\"patientLabel\">Password</label>\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"register-text forgotpass-text\" style={{textAlign: 'left'}}><span>\r\n                  <Link to=\"/patient-forgotPassword\">Forgot Password ?</Link></span></div>\r\n                  <Button className=\"button-lightred\" size=\"lg\" style={{width: '190px'}} >Submit</Button>{' '}\r\n                  {this.props.loading ? \r\n                                <Row>\r\n                                <Col md={12} className=\"mt-3 text-center\">\r\n                                    <Spinner animation=\"border\" variant=\"danger\" className=\"text-center\" />\r\n                                </Col>\r\n                                </Row>\r\n                                 : null}\r\n                  <div className=\"register-text\">\r\n                      <span>New User ? &nbsp;</span>\r\n                      <span><Link to=\"/request-otp\">Register here.</Link></span> \r\n                    </div>\r\n                  {/* {this.props.error ? \r\n                    <h5 className=\"mt-4\" style={{color:'red'}}>Number is not registered. Please register.</h5> : null\r\n                  } */}\r\n                  {this.props.invalidData === \"403\" ? \r\n                  <Alert className=\"mt-4\" color=\"danger\" isOpen={this.state.visible}>Invalid credentials, please try again.</Alert>\r\n                  : null\r\n                  }\r\n                  {this.props.invalidData === \"601\" ? \r\n                  <Alert className=\"mt-4\" color=\"danger\" isOpen={this.state.visible}>Number is not registered. Please register.</Alert>\r\n                  : null\r\n                  }\r\n                  <h5>{this.props.success}</h5>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n      </div>\r\n      {/* <div className=\"privacy-text\"><span>Terms</span> | <span>Privacy</span></div> */}\r\n    </div>\r\n    </React.Fragment>\r\n);\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      loading: state.loading,\r\n      error: state.error,\r\n      success: state.success,\r\n      userTypeId: state.userTypeId,\r\n      isAuthenticated: state.token !== null,\r\n      token: state.token,\r\n      user: state.user,\r\n      invalidData: state.invalidData,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      onPatientLogin: (patientLoginForm) => dispatch(actions.patientLogin(patientLoginForm)),\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PatientLogin));","import React, {Component} from 'react';\r\nimport { Container, Table } from 'reactstrap';\r\nimport { Spinner, Row, Col } from 'reactstrap';\r\nimport { InputGroup, InputGroupText, InputGroupAddon, Input, Button, Alert } from 'reactstrap';\r\nimport Footer from '../../components/footer/footer';\r\nimport TitlebarComponent from '../../components/navbar/titlebar';\r\nimport Navbar from '../../components/navbar/navbar';\r\nimport HomeApi from '../../services/API/HomeApi';\r\nimport SubFooter from '../../components/subFooter/subFooter';\r\nimport { sortByColumn, convertToDateYYYYMMDD } from '../functions';\r\nimport './trainee.css';\r\nimport LoginRegisterApi from '../../services/API/LoginRegisterApi';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport ModalComponent from '../../components/modal/modal';\r\nimport ModalWishlistComponent from '../../components/modal/modalwishlist';\r\nimport Login from '../login/Login';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\r\n\r\n\r\nclass CoursesOffered extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          loading: false,\r\n          filter: null,\r\n          toggle: false,\r\n          activeColumn: 0,\r\n          lastActiveColumn: 0,\r\n          showModal: false,\r\n          disable: true,\r\n          disableKey: null,\r\n          selectedId: '',\r\n          confirmModal: false,\r\n          addContainer: false,\r\n          courseName: '',\r\n          visible: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n      let isAuthenticated = localStorage.getItem('token') ? true : false;\r\n      \r\n      if(isAuthenticated) {\r\n        this.props.oncourseData();\r\n      }\r\n      else{\r\n        this.props.oncourseDataOpen();\r\n      }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n      if(nextProps.enrollSuccess || nextProps.wishlistSuccess){\r\n        this.props.oncourseData();\r\n      }\r\n    }\r\n\r\n    updateSearch = (inputValue) => {\r\n      let filter = this.state.filter;\r\n\r\n      this.setState({\r\n          filter: inputValue\r\n      });\r\n    }\r\n\r\n    handleSearchChange = (event) => {\r\n        this.updateSearch(event.target.value);\r\n    }\r\n\r\n    filter = (data) => {\r\n      if (!this.state.filter) {\r\n        return data;\r\n      }\r\n        return data.filter((data) => data.id.toString().indexOf(this.state.filter) >=0 ||\r\n                                     data.courseName.toLowerCase().indexOf(this.state.filter.toLowerCase()) >= 0 ||\r\n                                     data.startDate.toString().indexOf(this.state.filter) >= 0 ||\r\n                                     data.duration.toString().indexOf(this.state.filter) >= 0 \r\n      )\r\n    }\r\n\r\n    handleClick = (title, key) => {\r\n      let arrayCopy = [...this.state.testtabledata];\r\n    if(key === 0 || key === 2 || key === 4){\r\n      if (this.state.activeColumn === key) {\r\n        let toggle = !this.state.toggle\r\n        this.setState({\r\n          toggle: toggle,\r\n          activeColumn: key,\r\n          testtabledata: sortByColumn(arrayCopy, title, toggle)\r\n        })\r\n      } else {\r\n        this.setState({\r\n          activeColumn: key,\r\n          testtabledata: sortByColumn(arrayCopy, title, false)\r\n        })\r\n      }\r\n    }\r\n    }\r\n\r\n    enrollCourse = (event) => {\r\n      event.preventDefault();\r\n      \r\n        let courseId = this.state.selectedId;\r\n        let disableKey = this.state.disableKey;\r\n        var obj = [courseId]\r\n        console.log(obj);\r\n\r\n        this.props.onCourseEnrolled(this.props.user.id, obj);\r\n\r\n        this.setState(prevState => ({\r\n          modal: !prevState.modal,\r\n          disable: disableKey\r\n        }));\r\n\r\n        this.setState({\r\n          visible: true\r\n        }, () => {\r\n          window.setTimeout(() => {\r\n            this.setState({\r\n              visible: false\r\n            })\r\n          }, 5000)\r\n        });\r\n      }\r\n\r\n    togglemodalEnroll = (id, courseName, key) => {\r\n      this.setState(prevState => ({\r\n        modal: !prevState.modal,\r\n        selectedId: id,\r\n        courseName: courseName,\r\n        disableKey: key\r\n      }));\r\n    }\r\n\r\n    checkLoginTrainee = () => {\r\n        console.log(\"Clicked\");\r\n\r\n        this.setState(prevState => ({\r\n          addContainer: !prevState.addContainer\r\n        }));\r\n    }\r\n\r\n    wishlistCourse = (event) => {\r\n      event.preventDefault();\r\n\r\n        let courseId = this.state.selectedId;\r\n        let disableKey = this.state.disableKey;\r\n        var obj = [courseId]\r\n        console.log(obj);\r\n\r\n        this.props.onCourseWishlist(this.props.user.id, obj);\r\n\r\n        this.setState(prevState => ({\r\n          confirmModal: !prevState.confirmModal,\r\n          disable: disableKey\r\n        }));\r\n\r\n        this.setState({\r\n          visible: true\r\n        }, () => {\r\n          window.setTimeout(() => {\r\n            this.setState({\r\n              visible: false\r\n            })\r\n          }, 5000)\r\n        });\r\n      }\r\n\r\n    togglemodalWishlist = (id, courseName, key) => {\r\n      this.setState(prevState => ({\r\n        confirmModal: !prevState.confirmModal,\r\n        selectedId: id,\r\n        courseName: courseName,\r\n        disableKey: key\r\n      }));\r\n    }\r\n\r\n    render() {\r\n\r\n      let isAuthenticated = localStorage.getItem('token') ? true : false;\r\n      \r\n        let list = <Spinner animation=\"border\" variant=\"danger\" />\r\n        if (!this.state.loading) {\r\n            list = <Table bordered>\r\n            <thead>\r\n              <tr>\r\n              <th>Course Id</th>\r\n              <th>Course Name</th>\r\n              <th>Start Date</th>\r\n              <th>Duration</th>\r\n              <th>Classroom/Webinar</th>\r\n              {this.props.userTypeId === \"3\" || this.props.userTypeId === null ?\r\n              <th>Enroll</th>\r\n              : null }\r\n              {this.props.userTypeId === \"3\" || this.props.userTypeId === null ?\r\n              <th>Wishlist</th>\r\n              : null }\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.coursedata ? this.filter(this.props.coursedata).map((data, key) => {\r\n             \r\n                  return  <tr>\r\n                            <td>{data.id}</td>\r\n                            <td>{data.courseName}</td>\r\n                            <td>{convertToDateYYYYMMDD(data.startDate)}</td>\r\n                            <td>{data.duration} days</td>\r\n                            <td>Classroom</td>\r\n                            {this.props.userTypeId === \"3\" && data.enrolled === true ?\r\n                              <td><p className=\"green-font\">Enrolled</p></td> :\r\n                              this.props.userTypeId === \"3\" || this.props.userTypeId === null ?\r\n                            <td><Button disabled={this.state.disable === key} onClick={isAuthenticated ? () => this.togglemodalEnroll(data.id, data.courseName, key) : this.checkLoginTrainee}>Enroll</Button></td>\r\n                            : null }\r\n                            {this.props.userTypeId === \"3\" && (data.enrolled === true || data.wishlist === true) ?\r\n                             <td><Button disabled={true}>Wishlist</Button></td> :\r\n                              this.props.userTypeId === \"3\" || this.props.userTypeId === null ?\r\n                            <td><Button disabled={this.state.disable === key} onClick={isAuthenticated ? () => this.togglemodalWishlist(data.id, data.courseName, key) : this.checkLoginTrainee}>Wishlist</Button></td>\r\n                            : null }\r\n                            </tr>\r\n                }) : <Spinner color=\"danger\" />\r\n              }\r\n            </tbody>\r\n          </Table>\r\n        }\r\n        return(\r\n          \r\n          <React.Fragment>\r\n            {this.state.addContainer ? <Login /> : \r\n            <React.Fragment>\r\n            <TitlebarComponent loggedinpatient={isAuthenticated} />\r\n               <Navbar />\r\n               <Container style={{marginBottom: '210px'}}>\r\n               <Row className=\"mt-5\">\r\n                 <Col><h2>Courses Offered</h2>\r\n                 </Col>\r\n               </Row>\r\n               <Row className=\"mt-5\">\r\n                 <Col md=\"3\">\r\n                 <InputGroup size=\"lg\">\r\n                  <InputGroupAddon addonType=\"prepend\" style={{fontSize: '1rem'}}>Search</InputGroupAddon>\r\n                  <Input value={this.state.filter} onChange={this.handleSearchChange} type=\"text\" className=\"coursesSearch\"/>\r\n                </InputGroup>\r\n                 </Col>\r\n               </Row>\r\n                \r\n               {this.props.enrollSuccess ? \r\n                <Alert className=\"mt-4\" color=\"success\" isOpen={this.state.visible}>{this.props.enrollData}</Alert> : null\r\n               } \r\n               {this.props.wishlistSuccess ? \r\n                <Alert className=\"mt-4\" color=\"success\" isOpen={this.state.visible}>{this.props.wishlistData}</Alert> : null\r\n               } \r\n\r\n               <Row className=\"mt-5 mb-5\">\r\n                 <Col className=\"text-center\">\r\n                 {list} \r\n                 </Col>\r\n               </Row>\r\n\r\n              <ModalComponent modal={this.state.modal} togglemodalEnroll={this.togglemodalEnroll} className=\"trainee-modal\">\r\n                <h5>Are you sure you want to enroll for {this.state.courseName} course ?</h5>\r\n                <Button color=\"success\" onClick={this.enrollCourse}>Yes</Button>\r\n                <Button color=\"danger\" onClick={this.togglemodalEnroll} className=\"ml-3\">No</Button>\r\n              </ModalComponent>\r\n\r\n              <ModalWishlistComponent confirmModal={this.state.confirmModal} togglemodalWishlist={this.togglemodalWishlist} className=\"trainee-modal\">\r\n                <h5>Are you sure you want to add {this.state.courseName} course to your Wishlist ?</h5>\r\n                <Button color=\"success\" onClick={this.wishlistCourse}>Yes</Button>\r\n                <Button color=\"danger\" onClick={this.togglemodalWishlist} className=\"ml-3\">No</Button>\r\n              </ModalWishlistComponent>\r\n              \r\n             </Container>\r\n             {/* <hr/>\r\n             <SubFooter /> */}\r\n               <Footer />\r\n            </React.Fragment>\r\n              }\r\n          </React.Fragment>\r\n              \r\n              \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      loading: state.loading,\r\n      error: state.error,\r\n      enrollSuccess: state.enrollSuccess,\r\n      enrollData: state.enrollData,\r\n      wishlistSuccess: state.wishlistSuccess,\r\n      wishlistData: state.wishlistData,\r\n      user: state.user,\r\n      coursedata: state.coursedata,\r\n      userTypeId: state.userTypeId,\r\n      // isAuthenticated: state.token !== null,\r\n      // authRedirectPath: state.auth.authRedirectPath\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onCourseEnrolled: (userId,cId) => dispatch(actions.courseEnroll(userId,cId)),\r\n    onCourseWishlist: (userId,cId) => dispatch(actions.courseWishlist(userId,cId)),\r\n    oncourseData: () => dispatch(actions.courseData()),\r\n    oncourseDataOpen: () => dispatch(actions.courseDataOpen()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CoursesOffered);","import React, {Component} from 'react';\r\nimport { Container, Table } from 'reactstrap';\r\nimport { Spinner, Row, Col } from 'reactstrap';\r\nimport { InputGroup, InputGroupText, InputGroupAddon, Input } from 'reactstrap';\r\nimport Footer from '../../components/footer/footer';\r\nimport TitlebarComponent from '../../components/navbar/titlebar';\r\nimport Navbar from '../../components/navbar/navbar';\r\nimport HomeApi from '../../services/API/HomeApi';\r\nimport SubFooter from '../../components/subFooter/subFooter';\r\nimport { sortByColumn } from '../functions';\r\nimport PaginationComponent from '../../components/pagination/pagination';\r\n\r\n\r\nclass Antibodies extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          antibodytableheader: [],\r\n          antibodytabledata: [],\r\n          loading: false,\r\n          filter: null,\r\n          toggle: false,\r\n          activeColumn: 0,\r\n          lastActiveColumn: 0,\r\n          currentPage: 0,\r\n        }\r\n        this.pageSize = 10;\r\n    }\r\n\r\n    componentDidMount(){\r\n      HomeApi.getTestListContent().then(res => {\r\n        console.log(res);\r\n        this.setState({ \r\n            antibodytableheader: res[0].antibodyheaders,\r\n            antibodytabledata: res[0].antibodydata,\r\n            loading: false,\r\n            filter: null\r\n         });\r\n      });\r\n    }\r\n\r\n    updateSearch = (inputValue) => {\r\n      let filter = this.state.filter;\r\n\r\n      this.setState({\r\n          filter: inputValue\r\n      });\r\n    }\r\n\r\n    handleSearchChange = (event) => {\r\n        this.updateSearch(event.target.value);\r\n    }\r\n\r\n    filter = (data) => {\r\n      if (!this.state.filter) {\r\n        return data;\r\n      }\r\n        return data.filter((data) => data.id.toString().indexOf(this.state.filter) >= 0 ||\r\n                                     data.antibody_name.toLowerCase().indexOf(this.state.filter.toLowerCase()) >= 0 ||\r\n                                     data.antibody_clone.toLowerCase().indexOf(this.state.filter.toLowerCase()) >= 0 ||\r\n                                     data.antibody_company.toLowerCase().indexOf(this.state.filter.toLowerCase()) >= 0\r\n    )\r\n    }\r\n\r\n    handleClick = (title, key) => {\r\n      let arrayCopy = [...this.state.antibodytabledata];\r\n    if(key === 0 || key === 2 || key === 4){\r\n      if (this.state.activeColumn === key) {\r\n        let toggle = !this.state.toggle\r\n        this.setState({\r\n          toggle: toggle,\r\n          activeColumn: key,\r\n          antibodytabledata: sortByColumn(arrayCopy, title, toggle)\r\n        })\r\n      } else {\r\n        this.setState({\r\n          activeColumn: key,\r\n          antibodytabledata: sortByColumn(arrayCopy, title, false)\r\n        })\r\n      }\r\n    }\r\n    }\r\n\r\n    handlePatientTrackClick = (e, index) => {\r\n    \r\n      e.preventDefault();\r\n  \r\n      this.setState({\r\n        currentPage: index\r\n      });\r\n      \r\n    }\r\n\r\n\r\n    render() {\r\n      const { currentPage } = this.state;\r\n      const paginationArray = [];\r\n      const paginationNumberArray = [];\r\n\r\n      if(this.state.antibodytabledata) {\r\n        this.state.antibodytabledata.map((data) => {\r\n          return paginationNumberArray.push(data) \r\n        })\r\n\r\n        this.pagesCount = Math.ceil(paginationNumberArray.length / this.pageSize);\r\n\r\n        paginationNumberArray.map((el, key) => {\r\n          el[\"srno\"] = key + 1;\r\n        })\r\n      }\r\n\r\n      let isAuthenticated = localStorage.getItem('token') ? true : false;\r\n\r\n        let list = <Spinner animation=\"border\" variant=\"danger\" />\r\n        if (!this.state.loading) {\r\n            list = <Table striped>\r\n            <thead>\r\n              <tr>\r\n                {this.state.antibodytableheader ? this.state.antibodytableheader.map((header) => {\r\n                 return <th>{header.antibodyheader_name}</th>\r\n                }) : null }\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.antibodytabledata ? this.filter(this.state.antibodytabledata).slice(\r\n              currentPage * this.pageSize,\r\n              (currentPage + 1) * this.pageSize\r\n            ).map((data) => {\r\n                  return  <tr>\r\n                            <td>{data.id}</td>\r\n                            <td>{data.antibody_name}</td>\r\n                            <td>{data.antibody_clone}</td>\r\n                            <td>{data.antibody_company}</td>\r\n                          </tr>\r\n                }) : <Spinner color=\"danger\" />\r\n              }\r\n            </tbody>\r\n          </Table>\r\n        }\r\n        return(\r\n          <React.Fragment>\r\n            <TitlebarComponent loggedinpatient={isAuthenticated} />\r\n               <Navbar />\r\n               <Container style={{marginBottom: '210px'}}>\r\n               <Row className=\"mt-5\">\r\n                 <Col><h2>List of Antibodies</h2>\r\n                 </Col>\r\n               </Row>\r\n               <Row className=\"mt-5\">\r\n                 <Col md=\"3\">\r\n                 <InputGroup size=\"lg\">\r\n                  <InputGroupAddon addonType=\"prepend\">Search</InputGroupAddon>\r\n                  <Input value={this.state.filter} onChange={this.handleSearchChange} type=\"text\" className=\"coursesSearch\"/>\r\n                </InputGroup>\r\n                 </Col>\r\n               </Row>\r\n               <Row className=\"mt-5 mb-5\">\r\n                 <Col className=\"text-center\">\r\n                 {list} \r\n                 </Col>\r\n               </Row>\r\n            <PaginationComponent currentPage={this.state.currentPage} handleClick={this.handlePatientTrackClick} pagesCount={this.pagesCount} />\r\n             </Container>\r\n             {/* <hr/>\r\n             <SubFooter /> */}\r\n               <Footer />\r\n          </React.Fragment>\r\n              \r\n              \r\n        )\r\n    }\r\n}\r\n\r\nexport default Antibodies;\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Col, Row, Button } from 'reactstrap';\r\n\r\nconst PatientForgotSuccess = (props) => (\r\n    <Container className=\"text-center\">\r\n        <Row className=\"pt-3 pb-3\">\r\n          <Col><p>{props.message}</p></Col>\r\n        </Row>\r\n        <Row className=\"pt-3 pb-3\">\r\n          <Col><p className=\"red-font raleway-light font-size\">We have sent you a verification OTP number in the mobile number you have provided. <br />\r\n          <br /></p></Col>\r\n        </Row>\r\n        {/* <Row className=\"pb-3\">\r\n          <Col><p className=\"red-font raleway-light \">To learn more about how Tata Trusts collects, uses, shares and protects your <br /> personal data please read Tata Trusts' Privacy Policy. </p><br />\r\n          </Col>\r\n        </Row> */}\r\n        <Row>\r\n            <Col>\r\n                <Link to={{pathname: \"/patient-resetPassword\", \r\n                state: {\r\n                  contactNo: props.mobile\r\n                }\r\n  }}><Button className=\"button-lightred mt-0 mb-5\" size=\"md\" style={{width: '160px', fontSize: '18px'}} >Next</Button></Link>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n);\r\n\r\nexport default PatientForgotSuccess;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Alert } from 'reactstrap';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport PatientForgotSuccess from './patientForgotSuccess';\r\n\r\nclass PatientForgotPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        form: this.defaultForm(),\r\n        visible : false,\r\n      };\r\n  }\r\n\r\n  defaultForm = () => {\r\n    return {\r\n        mobile: '',\r\n        countryCode: '91',\r\n    }\r\n  }\r\n\r\n\r\n  handleForgotPassword(e){\r\n    let validationMessages = [];\r\n\r\n    if (e.target.type === \"number\") {\r\n      e.target.value = e.target.value.slice(0,10);\r\n    } \r\n    \r\n    if(e.target.type === \"number\" && e.target.value.length < 10){\r\n      validationMessages.push(\"Required 10 digits number, match requested format.\");\r\n      this.setState({validationMessages});\r\n    }\r\n    else {\r\n      validationMessages = [];\r\n      this.setState({validationMessages});\r\n    }\r\n\r\n    const updatedForm = {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value\r\n      }\r\n      \r\n      this.setState({form: updatedForm, validationMessages});\r\n  }\r\n\r\n  forgotPasswordSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    \r\n    const updatedPatientForm = {\r\n        ...this.state.form,\r\n    }\r\n    if(this.state.validationMessages.length === 0){\r\n      this.props.onForgotPassword(updatedPatientForm);\r\n    }\r\n\r\n    this.setState({\r\n      visible: true\r\n    }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({\r\n          visible: false\r\n        })\r\n      }, 5000)\r\n    });\r\n  }\r\n\r\nrender() {\r\nreturn (\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n          <div class=\"col-md-6 offset-md-3 text-center\">\r\n            <div className=\"container-box text-center\">\r\n              <div class=\"logo\">\r\n                <img src={logo} className=\"tthomelogo\"/>\r\n              </div>\r\n              {/* <h4>Centre for Oncopathology </h4> */}\r\n              {this.props.success ? \r\n              <PatientForgotSuccess mobile={this.state.form.mobile}/> :\r\n             <React.Fragment>\r\n              <h2>Forgot Password</h2>\r\n              \r\n              <div className=\"register-text\"><span>Already a member ? &nbsp;</span><span>\r\n                <Link to=\"/patient-login\">Sign In.</Link></span></div>\r\n                <div className=\"login-box-inner\">\r\n                <form onSubmit={this.forgotPasswordSubmitHandler}>\r\n                <div class=\"form-group\">\r\n                    <span class=\"has-float-label\">\r\n                      <input required class=\"form-control\" id=\"mobile\" name=\"mobile\" type=\"number\" pattern={0-9} placeholder=\"Mobile No.\" \r\n                      value={this.state.form.mobile} onChange={(event) => this.handleForgotPassword(event)} />\r\n                      <label for=\"mobile\" className=\"patientLabel\">Mobile No.</label>\r\n                      <p className=\"red-font mt-3\">{this.state.validationMessages}</p>\r\n                    </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <span class=\"has-float-label\">\r\n                      <input required class=\"form-control\" id=\"countryCode\" name=\"countryCode\" type=\"text\" placeholder=\"Country Code\" value={this.state.form.countryCode} />\r\n                      <label for=\"countryCode\" className=\"patientLabel\">Country Code</label>\r\n                    </span>\r\n                </div>\r\n\r\n                  <Button className=\"button-lightred\" size=\"lg\" style={{width: '190px'}}>Next</Button>{' '}\r\n\r\n                  <div className=\"register-text\"><span>New User ? &nbsp;</span><span>\r\n                  <Link to=\"/request-otp\">Register here.</Link></span></div>\r\n\r\n                  {this.props.error ?\r\n                    <Alert className=\"mt-4\" color=\"danger\" isOpen={this.state.visible}>Number is not registered. Please register.</Alert>\r\n                    : null\r\n                  }\r\n\r\n                  {this.props.invalidFlag ?\r\n                    <Alert className=\"mt-4\" color=\"danger\" isOpen={this.state.visible}>{this.props.message}</Alert>\r\n                    : null\r\n                  }\r\n\r\n                  {this.props.invalidData === \"403\" ? \r\n                  <Alert className=\"mt-4\" color=\"danger\" isOpen={this.state.visible}>Invalid credentials, please try again.</Alert>\r\n                  : null\r\n                  }\r\n                </form>\r\n              </div> \r\n              </React.Fragment>\r\n            }\r\n            </div>\r\n            \r\n          </div>\r\n      </div>\r\n      {/* <div className=\"privacy-text\"><span>Terms</span> | <span>Privacy</span></div> */}\r\n    </div>\r\n);\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userTypeId: state.userTypeId,\r\n        success: state.success,\r\n        message: state.message,\r\n        error: state.error,\r\n        invalidFlag: state.invalidFlag,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n        onForgotPassword: (patientForm) => dispatch(actions.patientForgotPassword(patientForm))\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientForgotPassword);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Col, Row, Button } from 'reactstrap';\r\n\r\nconst PatientResetSuccess = (props) => (\r\n    <Container className=\"text-center\">\r\n        <Row className=\"pt-3 pb-3\">\r\n          <Col><p>{props.message}</p></Col>\r\n        </Row>\r\n        <Row className=\"pt-3 pb-3\">\r\n          <Col><p className=\"red-font raleway-light font-size\">Password reset successfully.<br />Kindly Log In.\r\n           <br /></p></Col>\r\n        </Row>\r\n        {/* <Row className=\"pb-3\">\r\n          <Col><p className=\"red-font raleway-light\">To learn more about how Tata Trusts collects, uses, shares and protects your <br /> personal data please read Tata Trusts' Privacy Policy. </p><br />\r\n          </Col>\r\n        </Row> */}\r\n        <Row>\r\n            <Col>\r\n                <Link to=\"/patient-login\"><Button className=\"button-lightred mt-0\" size=\"md\" style={{width: '160px'}} >Log In</Button>{' '}</Link>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n);\r\n\r\nexport default PatientResetSuccess;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Alert } from 'reactstrap';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport PatientResetSuccess from './resetSuccess';\r\n\r\nclass PatientResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        form: this.defaultForm(),\r\n        resetPasswordCheck: false,\r\n        visible: false,\r\n      };\r\n  }\r\n\r\n  defaultForm = () => {\r\n    return {\r\n        username: '91' + this.props.location.state.contactNo,\r\n        password: '',\r\n        confirm_password: '',\r\n        verifyKey: '',\r\n        userType: 2,\r\n    }\r\n  }\r\n\r\n  handleResetPassword(e){\r\n    let validationMessages = [];\r\n\r\n    const updatedForm = {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value\r\n      }\r\n      this.setState({form: updatedForm, validationMessages});\r\n  }\r\n\r\n  resetPasswordSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    \r\n    const updatedPatientForm = {\r\n        ...this.state.form,\r\n    }\r\n\r\n    if(this.state.form.password === this.state.form.confirm_password){\r\n      this.setState({\r\n        resetPasswordCheck: false\r\n      })\r\n      this.props.onResetPassword(updatedPatientForm);\r\n    }\r\n    else{\r\n      this.setState({\r\n        resetPasswordCheck: true\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      visible: true\r\n    }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({\r\n          visible: false\r\n        })\r\n      }, 5000)\r\n  });\r\n    \r\n  }\r\n\r\nrender() {\r\nreturn (\r\n  <div class=\"container\">\r\n  <div class=\"row\">\r\n      <div class=\"col-md-6 offset-md-3 text-center\">\r\n        <div className=\"container-box text-center\">\r\n          <div class=\"logo\">\r\n            <img src={logo} className=\"tthomelogo\"/>\r\n          </div>\r\n          {/* <h4>Centre for Oncopathology </h4> */}\r\n            {this.props.resetsuccess ?\r\n            <PatientResetSuccess /> :  \r\n            <React.Fragment>\r\n              <h2>Reset Password</h2>\r\n              \r\n                <div className=\"login-box-inner\">\r\n                <form onSubmit={this.resetPasswordSubmitHandler}>\r\n                <div class=\"form-group\">\r\n                    <span class=\"has-float-label\">\r\n                      <input required class=\"form-control\" id=\"username\" name=\"username\" type=\"number\" pattern={0-9} placeholder=\"Mobile No.\" \r\n                      value={this.state.form.username} onChange={(event) => this.handleResetPassword(event)} />\r\n                      <label for=\"username\" className=\"patientLabel\">Mobile No.</label>\r\n                      <p className=\"red-font mt-3\">{this.state.validationMessages}</p>\r\n                    </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <span class=\"has-float-label\">\r\n                      <input required class=\"form-control\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"Password\" \r\n                      value={this.state.form.password} onChange={(event) => this.handleResetPassword(event)} />\r\n                      <label for=\"password\" className=\"patientLabel\">Password</label>\r\n                    </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <span class=\"has-float-label\">\r\n                      <input required class=\"form-control\" id=\"confirm_password\" name=\"confirm_password\" type=\"password\" placeholder=\"Confirm Password\" \r\n                      value={this.state.form.confirm_password} onChange={(event) => this.handleResetPassword(event)} />\r\n                      <label for=\"confirm_password\" className=\"patientLabel\">Confirm Password</label>\r\n                    </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <span class=\"has-float-label\">\r\n                      <input required class=\"form-control\" id=\"verifyKey\" name=\"verifyKey\" type=\"number\" placeholder=\"OTP\" \r\n                      value={this.state.form.verifyKey} onChange={(event) => this.handleResetPassword(event)}/>\r\n                      <label for=\"verifyKey\" className=\"patientLabel\">OTP</label>\r\n                    </span>\r\n                </div>\r\n\r\n                {this.state.resetPasswordCheck === true ? \r\n                  <Alert className=\"mt-4\" color=\"danger\" isOpen={this.state.visible}>Password don't match.</Alert>\r\n                  : null\r\n                  }\r\n\r\n                  <Button className=\"button-lightred\" size=\"lg\" style={{width: '190px'}}>Submit</Button>{' '}\r\n                   {this.props.reseterror ? \r\n                    <Alert className=\"mt-4\" color=\"danger\" isOpen={this.state.visible}>{this.props.resetmessage}</Alert>\r\n                    : null\r\n                   }\r\n\r\n                </form>\r\n              </div>\r\n            </React.Fragment>\r\n            }\r\n            </div>\r\n            \r\n            </div>\r\n        </div>\r\n        {/* <div className=\"privacy-text\"><span>Terms</span> | <span>Privacy</span></div> */}\r\n      </div>\r\n);\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userTypeId: state.userTypeId,\r\n        resetsuccess: state.resetsuccess,\r\n        resetmessage: state.resetmessage,\r\n        reseterror: state.reseterror,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n        onResetPassword: (patientForm) => dispatch(actions.patientResetPassword(patientForm))\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientResetPassword);","import React from 'react';\r\nimport { Collapse, Row, Col, Container, Form, Table, Button, CardBody, Card, Alert, FormGroup, Input, Label, } from 'reactstrap';\r\nimport Picky from \"react-picky\";\r\nimport * as actions from '../../redux/actions/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass AdminCard extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {collapse: this.props.keyValue === 0 ? true : false};\r\n    }\r\n\r\n    toggleCard = () => {\r\n      this.setState({ collapse: !this.state.collapse });\r\n    }\r\n    \r\n    render() {\r\n      return (\r\n        <Row > \r\n        <Col md={12} className=\"mt-5 mb-3\">\r\n        <div className=\"profile-tab\" id=\"togglerinner\" onClick={this.toggleCard}>\r\n        {this.state.collapse ? <i class=\"fa fa-minus mr-1\"></i> : <i class=\"fa fa-plus mr-1\"></i>}\r\n        {this.props.pdata.firstName ? this.props.pdata.firstName + ' ' + this.props.pdata.lastName\r\n        : 'Patient' + ' ' + (this.props.keyValue+1) } \r\n\r\n        {this.props.pdata.validationMessages ? <span style={{color: 'red', fontWeight: 500}}>{' - ' + this.props.pdata.validationMessages}</span> : null }\r\n        \r\n        <i class=\"fa fa-close mr-1 mt-1 pull-right\" onClick={() => this.props.removePatient(this.props.pdata, this.props.keyValue)}></i> </div>\r\n        \r\n        <Collapse toggler=\"togglerinner\" isOpen={this.state.collapse}>\r\n        <Card className=\"collapse-box\">\r\n        <CardBody>\r\n        <Row>\r\n        <Col md={4} className=\"mt-3\">\r\n        <FormGroup>\r\n            <Label for=\"title\"><b>Title</b></Label>\r\n            <Input type=\"text\" name=\"designation\" value={this.props.pdata.designation} />\r\n        </FormGroup>\r\n        </Col>\r\n        <Col md={4} className=\"mt-3\">\r\n        <FormGroup>\r\n            <Label for=\"fname\"><b>First Name</b></Label>\r\n            <Input type=\"text\" name=\"firstName\" value={this.props.pdata.firstName} />\r\n        </FormGroup>\r\n    </Col>\r\n    <Col md={4} className=\"mt-3\">\r\n        <FormGroup>\r\n            <Label for=\"lname\"><b>Last Name</b></Label>\r\n            <Input type=\"text\" name=\"lastName\" value={this.props.pdata.lastName} />\r\n        </FormGroup>\r\n    </Col>\r\n    </Row>\r\n    <Row>\r\n    <Col md={4} className=\"mt-3\">\r\n        <FormGroup>\r\n            <Label for=\"email\"><b>Email</b></Label>\r\n            <Input type=\"email\" name=\"email\" value={this.props.pdata.email} />\r\n        </FormGroup>\r\n    </Col>\r\n    <Col md={4} className=\"mt-3\">\r\n        <FormGroup>\r\n            <Label for=\"mobile\"><b>Mobile Number</b></Label>\r\n            <Input type=\"text\" name=\"mobile\" value={this.props.pdata.mobile} />\r\n        </FormGroup>\r\n    </Col>\r\n    <Col md={4} className=\"mt-3\">\r\n    <Label for=\"state\"><b>Date of Birth</b></Label>\r\n        <FormGroup>\r\n        <Input type=\"date\" name=\"dob\" value={this.props.pdata.dob} />\r\n        </FormGroup>\r\n    </Col>\r\n    </Row>\r\n    <Row>\r\n    <Col md={4} className=\"mt-3\">\r\n    <FormGroup tag=\"fieldset\">\r\n        <legend className=\"col-form-label\"><b>Gender</b></legend>\r\n        <Col>\r\n        <FormGroup check>\r\n            <Label check>\r\n            <Input type=\"radio\" checked={true} name={'gender' + this.props.keyValue} value=\"Male\" checked={this.props.pdata.gender === \"M\"} />\r\n            Male\r\n            </Label>\r\n        </FormGroup>\r\n        <FormGroup check>\r\n            <Label check>\r\n            <Input type=\"radio\" checked={true} name={'gender' + this.props.keyValue} value=\"Female\" checked={this.props.pdata.gender === \"F\"} />\r\n            Female\r\n            </Label>\r\n        </FormGroup>\r\n        <FormGroup check >\r\n            <Label check>\r\n            <Input type=\"radio\" checked={true} name={'gender' + this.props.keyValue} value=\"Other\" checked={this.props.pdata.gender === \"Other\"} />\r\n            Other\r\n            </Label>\r\n        </FormGroup>\r\n        </Col>\r\n    </FormGroup>\r\n    </Col>\r\n    </Row>\r\n    <hr/>\r\n    \r\n    {this.props.pdata.testList ? this.props.pdata.testList.map((item, key1) => \r\n    <Row>\r\n    <Col md={1}>\r\n        <i class=\"fa fa-trash mr-1 pr-3 pt-5 pb-5 pull-right\" style={{fontSize: '20px'}} onClick={() => this.props.removeSample(this.props.pdata, this.props.keyValue, key1)}></i>\r\n    </Col>\r\n    <Col md={3} className=\"mt-3\">\r\n        <FormGroup>\r\n            <Label for=\"exampleSelect\"><b>Select Department:</b></Label>\r\n                <Input type=\"select\" name=\"selectedSample\" id=\"sampleSelect\" onChange={(event) => this.props.inputChangedPatientHandler(event, this.props.keyValue, key1)} value={item.selectedSample}>\r\n                <option>Select Sample</option>\r\n                {this.props.stdata.map((el) => <option value={el.id}>{el.sampleName}</option> )}    \r\n                </Input>\r\n        </FormGroup>\r\n    </Col>\r\n    {this.props.stestdata ?\r\n    <Col md={3} className=\"mt-3\">\r\n            <Label for=\"exampleSelect\" id=\"selectTestLabelAdmin\"><b>Select Tests:</b></Label>\r\n            <div>\r\n            <Picky\r\n                value={item.testListArr}\r\n                options={this.props.stestdata}\r\n                onChange={(undefined) => {this.props.selectPatientMultipleOption(undefined, this.props.keyValue, key1); document.getElementById(\"selectTestLabelAdmin\").click()}}\r\n                tabIndex={this.props.keyValue}\r\n                open={false}\r\n                valueKey=\"id\"\r\n                labelKey=\"testName\"\r\n                multiple={true}\r\n                includeSelectAll={true}\r\n                includeFilter={true}\r\n                dropdownHeight={600}\r\n                numberDisplayed={1}\r\n                manySelectedPlaceholder=\"%s selected\"\r\n                allSelectedPlaceholder=\"%s selected\"\r\n            />\r\n            </div>\r\n    </Col>\r\n    : null }\r\n    <Col md={5} className=\"mt-3\">\r\n        {item.testListArr ? item.testListArr.length !== 0 ? <Table bordered>\r\n            <thead>\r\n                <tr>\r\n                <th>Sr No.</th>\r\n                <th>Test Name</th>\r\n                <th>Test Charges</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {item.testListArr.map((test, key) => \r\n                <tr>\r\n                <td>{key + 1}</td>\r\n                <td>{test.testName}</td>\r\n                <td>{test.price}</td>\r\n                </tr>)\r\n                }\r\n            </tbody>\r\n        </Table> : null \r\n        : null\r\n        }\r\n    </Col>\r\n    \r\n</Row>\r\n\r\n): null }\r\n\r\n{(this.props.grandTotalCharge !== 0) ?\r\n    <Row>\r\n        <Col md={6} className=\"mt-3 text-right\">\r\n            \r\n\r\n        </Col>\r\n        <Col md={6} className=\"mt-3\">\r\n            <Row>\r\n                <Col md={9}><b>Total</b></Col>\r\n                <Col md={3}><b>&#8377; {(this.props.grandTotalCharge).toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</b></Col>\r\n            </Row>\r\n\r\n        </Col>\r\n    </Row>\r\n    : null}\r\n    \r\n<Row>\r\n    <Col md={12} className=\"mt-3 text-right\">\r\n        <Button className=\"button-lightred\" size=\"md\" style={{width: '190px'}}  onClick={() => this.props.addSample(this.props.pdata, this.props.keyValue)}>Add Test(s)</Button>{' '}\r\n    </Col>\r\n</Row>\r\n    </CardBody>\r\n</Card>\r\n</Collapse>\r\n\r\n        \r\n    </Col>\r\n    </Row>\r\n      );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        user: state.user,\r\n        stestsuccess: state.stestsuccess,\r\n        stestdata: state.stestdata,\r\n    }\r\n    }\r\n    \r\n    const mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSampleTest: (id) => dispatch(actions.sampleTest(id)),\r\n    }\r\n    }\r\n      \r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminCard);\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport { Row, Col, FormGroup, Label, Input, Card, CardBody, Alert, Button, Container } from 'reactstrap';\r\nimport ModalComponent from '../../components/modal/modal';\r\n\r\nclass AdminPatientAddress extends Component {\r\n\r\n    render() {\r\n    console.log(this.props.getPAdata);\r\n    let getPAdata = this.props.getPAdata;\r\n\r\n    return(   \r\n    <React.Fragment>\r\n    <Container style={{paddingLeft: '0px', paddingRight: '0px'}}>\r\n    <Card className=\"collapse-box\">\r\n    <CardBody>\r\n    <Row>\r\n        <Col md={7} className=\"mt-3\">\r\n            <FormGroup>\r\n                <Label for=\"address\"><b>Check for existing address:</b></Label>\r\n            </FormGroup>\r\n        </Col>\r\n    </Row>\r\n    <Row>\r\n        <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n            <FormGroup>\r\n            <Input type=\"select\" name=\"getAddress\" placeholder=\"Select\" onChange={(event) => this.props.getAddressInputChangedHandler(event)}>\r\n              <option>Select...</option>\r\n              {getPAdata ? getPAdata.map((data) => {\r\n                  return <option value={data.id}>\r\n                  {data.line1} {data.line2} {data.city} {data.state} {data.pincode}</option>\r\n              })\r\n            : null }\r\n            </Input>\r\n            </FormGroup>\r\n        </Col>\r\n    </Row>\r\n    <Row>\r\n        <Col md={7} className=\"mt-3\">\r\n            <FormGroup>\r\n                <Label for=\"address\"><b>Please enter your address for sample pickup:</b></Label>\r\n            </FormGroup>\r\n        </Col>\r\n    </Row>\r\n    <Row form>\r\n        <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n            <FormGroup>\r\n            <Label for=\"email\">Line 1</Label>\r\n            <Input required maxLength=\"45\" type=\"text\" name=\"line1\" placeholder=\"Line 1\" value={this.props.apAddress.line1} onChange={(event) => this.props.inputChangedAPHandler(event)}/>\r\n            </FormGroup>\r\n        </Col>\r\n        <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n            <FormGroup>\r\n            <Label for=\"address\">Line 2</Label>\r\n            <Input required maxLength=\"45\" type=\"text\"  name=\"line2\" placeholder=\"Line 2\" value={this.props.apAddress.line2} onChange={(event) => this.props.inputChangedAPHandler(event)}/>\r\n            </FormGroup>\r\n        </Col>\r\n        <Col md={3} className=\"ml-md-3 ml-lg-5 mr-md-3 mr-lg-5\">\r\n        <FormGroup>\r\n                <Label for=\"mobile\">City</Label>\r\n                <Input required maxLength=\"45\" type=\"text\"  name=\"city\" placeholder=\"City\" value={this.props.apAddress.city} onChange={(event) => this.props.inputChangedAPHandler(event)} />\r\n            </FormGroup>\r\n        </Col>\r\n    </Row>\r\n    <Row>\r\n        <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n            <FormGroup>\r\n            <Label for=\"email\">State</Label>\r\n            <Input required maxLength=\"45\" type=\"text\"  name=\"state\" placeholder=\"State\" value={this.props.apAddress.state} onChange={(event) => this.props.inputChangedAPHandler(event)}/>\r\n            </FormGroup>\r\n        </Col>\r\n        <Col md={3} className=\"ml-md-3 mr-md-3 mr-lg-5\">\r\n            <FormGroup>\r\n                <Label for=\"address\">Pincode</Label>\r\n                <Input required maxLength=\"6\" type=\"text\"  name=\"pincode\" placeholder=\"Pincode\" value={this.props.apAddress.pincode} onChange={(event) => this.props.inputChangedAPHandler(event)}/>\r\n            </FormGroup>\r\n        </Col>\r\n    </Row>\r\n\r\n    <Row>\r\n        <Col md={5} className=\"mt-3\">\r\n            <FormGroup>\r\n                <Label for=\"pincode\"><b>Enter your pincode to check if your area is serviceable</b></Label>\r\n                <Input required maxLength=\"6\" type=\"text\" name=\"pincode\" onChange={(e) => this.props.handlePinVerification(e)} value={this.props.apAddress.pincode} placeholder=\"Enter Pincode\" />\r\n            </FormGroup>\r\n        </Col>\r\n        <Col md={2} className=\"mt-5\">\r\n        <Button onClick={(event) => this.props.pinVerification(event)} className=\"button-lightred\" style={{marginTop: '0', cursor: 'pointer'}} >Verify</Button>\r\n        </Col>\r\n    </Row>\r\n\r\n    {this.props.pinsuccess ? \r\n    <Alert color=\"success\" isOpen={this.props.visible}>Verification Successfull, requested area is serviceable.</Alert> \r\n    : null }\r\n\r\n    {this.props.pindata ? \r\n    <Alert color=\"danger\" isOpen={this.props.visible}>Invalid pincode.</Alert> \r\n    : null }\r\n    \r\n    {this.props.pinfailure ? \r\n    <Alert color=\"danger\" isOpen={this.props.visible}>Verification Unsuccessfull, requested area is not serviceable.</Alert>\r\n    : null } <hr/>\r\n\r\n    </CardBody>\r\n    </Card>  \r\n\r\n    {/* {this.props.pinfailure ?\r\n    <ModalComponent modal={this.props.pinmodal} pinVerification={this.props.pinVerification} className=\"trainee-modal\">\r\n        <h5>The area is un-serviceable. If you still want to continue, Kindly send sample to XYZ address.</h5>\r\n        <Button color=\"success\" onClick={this.props.yescloseToggle}>Yes</Button>\r\n        <Button color=\"danger\" onClick={this.props.nocloseToggle} className=\"ml-3\">No</Button>\r\n    </ModalComponent>\r\n    : null } */}\r\n    \r\n    </Container>\r\n    </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminPatientAddress;","import React from 'react';\r\nimport { Row, Col, Button, Container } from 'reactstrap';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\n\r\nconst AdminTitle = (props) => (\r\n     <React.Fragment>\r\n       <Container fluid>\r\n        <Row noGutters={true}>\r\n          <Col xs=\"4\"><img src={logo} className=\"tthomelogo ml-0 ml-md-5\"/></Col>\r\n          {/* <Col xs=\"12 pl-3\" lg=\"3\"><h4 className=\"red-font ml-3 p-3 text-center\">Centre for Oncopathology </h4></Col> */}\r\n          {/* <Col xs=\"12 pl-3\" lg=\"2\" className=\"text-center mb-1 pr-3 text-lg-right\"><span id=\"demo-2\" className=\"navSearch mt-lg-3\"><input type=\"Search\" /></span> </Col> */}\r\n          <Col xs=\"12 pl-3\" lg=\"5\" className=\"text-center mb-1 pr-3 text-lg-right\">\r\n          {!props.loggedinpatient ?\r\n          null\r\n          : \r\n          <a href=\"/logout\">\r\n          <div className=\"mr-5 mt-3 mb-3 red-font\" style={{fontSize: '18px', fontWeight: '600'}}>Logout</div>\r\n          </a>\r\n         }\r\n        </Col>\r\n        </Row>\r\n        {/* <Row>\r\n          <Col className=\"text-right mb-3\">\r\n          <span className=\"mr-5 mb-3\">07-06-19 V-2.1</span>\r\n          </Col>\r\n        </Row> */}\r\n        </Container>\r\n      </React.Fragment>\r\n);\r\n\r\nexport default AdminTitle;","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Label, Input, Button, ListGroup, ListGroupItem, Spinner, Alert } from 'reactstrap';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport { connect } from 'react-redux';\r\nimport '../register/Registration.css';\r\nimport HomeApi from '../../services/API/HomeApi';\r\nimport AdminPatientAddress from './patientAddress';\r\nimport AdminCard from './adminCard';\r\nimport AdminTitle from './adminTitle';\r\nimport ModalComponent from '../../components/modal/modal';\r\n\r\nclass AdminHome extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            form: this.defaultForm(),\r\n            testList: this.defaultTestDetails(),\r\n            testtableheader: [],\r\n            testtabledata: [],\r\n            patient: [],\r\n            sampleTypes: ['Select Sample', 'Sample 1', 'Sample 2', 'Sample 3'],\r\n            filter: null,\r\n            address: this.defaultAPAddress(),\r\n            loading: false,\r\n            visible: false,\r\n            yesToggle: false,\r\n            noLGCharge: false,\r\n            islogisticserviceable: null,\r\n            cardVisible: true,\r\n            saveButtonvisible: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        // HomeApi.getTestListContent().then(res => {\r\n        //   console.log(res);\r\n        //   this.setState({ \r\n        //       testtableheader: res[0].listoftestsheaders,\r\n        //       testtabledata: res[0].listoftestsoffereddata,\r\n        //       loading: false,\r\n        //       filter: null\r\n        //    });\r\n        // });\r\n\r\n        this.props.onSampleType();\r\n        this.props.onLogisticCost();\r\n    }\r\n\r\n    defaultForm = () => {\r\n        return {\r\n            name: '',\r\n            mobile: '',\r\n            countryCode: '91',\r\n        }\r\n    }\r\n\r\n    defaultTestDetails = () => {\r\n        return {\r\n            value: null,\r\n            selectedSample: '',\r\n            testListArr: []\r\n        }\r\n    }\r\n\r\n    defaultAPAddress = () => {\r\n        return {\r\n            line1:'',\r\n            line2:'',\r\n            city:'',\r\n            state:'',\r\n            pincode:''\r\n        }\r\n    }\r\n\r\n    inputChangedHandler(e) {\r\n        const updatedForm = {\r\n          ...this.state.form,\r\n          [e.target.name]: e.target.value\r\n        }\r\n        this.setState({\r\n            form: updatedForm\r\n        });\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.props.onAdminPatientSearch(this.state.form.name, this.state.form.mobile);\r\n    }\r\n\r\n    selectExistingPatient = (existingPatient) => {\r\n        \r\n        this.props.onAdminPatientSearch(\"\",\"\");\r\n\r\n        let patientwithExistingPatient = {   \r\n            userId: existingPatient.id,\r\n            designation: existingPatient.designation,\r\n            firstName: existingPatient.firstName,\r\n            lastName: existingPatient.lastName,\r\n            email: existingPatient.emailId,\r\n            mobile: existingPatient.contactNo,\r\n            gender: existingPatient.gender,\r\n            dob: existingPatient.dob,\r\n            testList: [\r\n                {\r\n                    value: null,\r\n                    selectedSample: '',\r\n                    testListArr: [],\r\n                }\r\n            ],\r\n        };\r\n\r\n        this.setState(prevState => ({\r\n            filter: \"\",\r\n            patient: [...prevState.patient, patientwithExistingPatient]\r\n          }))\r\n\r\n        this.setState({\r\n            form: {\r\n                name: '',\r\n                mobile: ''\r\n            },\r\n            saveButtonvisible: true\r\n        })\r\n\r\n        this.props.ongetPatientAddress(existingPatient.id);\r\n    }\r\n\r\n    removePatient = (patientData, key) => {\r\n        const patientafterDeleteArr = this.state.patient;\r\n\r\n        patientafterDeleteArr.splice(key, 1);\r\n\r\n        this.setState({\r\n            patient: patientafterDeleteArr,\r\n            saveButtonvisible: false\r\n        });\r\n    }\r\n\r\n    addSample = (pdata, key) => {\r\n        pdata.testList.push({\r\n            value: null,\r\n            selectedSample: '',\r\n            testListArr: []\r\n        });\r\n\r\n        const updatedPatientTestDetails = [\r\n            ...this.state.patient.slice(0,key),\r\n            Object.assign({}, this.state.patient[key], {testList: pdata.testList}),\r\n           ...this.state.patient.slice(key+1)\r\n        ]\r\n        \r\n        this.setState({ patient: updatedPatientTestDetails });\r\n    }\r\n\r\n    removeSample = (pdata, key, key1) => {\r\n\r\n        pdata.testList.splice(key1, 1);\r\n\r\n        const updatedPatientTestDetails = [\r\n            ...this.state.patient.slice(0,key),\r\n            Object.assign({}, this.state.patient[key], {testList: pdata.testList}),\r\n           ...this.state.patient.slice(key+1)\r\n        ]\r\n\r\n        this.setState({\r\n            patient: updatedPatientTestDetails\r\n        });\r\n    }\r\n\r\n    inputChangedPatientHandler = (e, key, key1) => {\r\n        \r\n            let patient = this.state.patient;\r\n            let id = e.target.value;\r\n        \r\n            if(e.target.value !== \"Select Sample\"){\r\n            this.props.onSampleTest(id);\r\n            }\r\n\r\n            const updatedForm = [\r\n                ...patient[key].testList.slice(0,key1),\r\n                Object.assign({}, patient[key].testList[key1], {[e.target.name]: e.target.value}),\r\n                ...patient[key].testList.slice(key1 + 1),\r\n            ]\r\n\r\n              const updatedPatient = [\r\n                  ...this.state.patient.slice(0,key),\r\n                  Object.assign({}, this.state.patient[key], {testList: updatedForm}),\r\n                  ...this.state.patient.slice(key + 1),\r\n              ]\r\n\r\n              let validationMessages = [];\r\n              this.setState({\r\n                patient: updatedPatient, \r\n                validationMessages\r\n              });\r\n        \r\n    }\r\n\r\n    inputChangedAPHandler = (e) => {\r\n        e.preventDefault();\r\n        const updatedForm = {\r\n            ...this.state.address,\r\n            [e.target.name]: e.target.value\r\n        }\r\n        this.setState({\r\n            address: updatedForm\r\n        });\r\n    }\r\n\r\n    selectPatientMultipleOption = (value, key, key1) => {\r\n        console.count('onChange')\r\n        console.log(\"Val\", value);\r\n\r\n        let patient = this.state.patient;\r\n\r\n        const updatedPatientTestDetails = [\r\n            ...patient[key].testList.slice(0,key1),\r\n            Object.assign({}, patient[key].testList[key1], {testListArr: value}),\r\n            ...patient[key].testList.slice(key1 + 1),\r\n          ]\r\n  \r\n        const updatedPatient = [\r\n              ...patient.slice(0,key),\r\n              Object.assign({}, patient[key], {testList: updatedPatientTestDetails}),\r\n              ...patient.slice(key + 1),\r\n          ]\r\n\r\n        this.setState({ patient: updatedPatient }, () => {\r\n            this.calculateCharge(value, key, key1);\r\n        });\r\n    }\r\n\r\n\r\n    calculateCharge = (test, key, key1) => {\r\n        // let testListChargeArr = [];\r\n        // this.state.patient.map((el) => {\r\n        //     el.testList.map((elsub) => {\r\n        //     testListChargeArr.push(elsub.testListArr);\r\n        // })\r\n        // })\r\n \r\n\r\n        let testTotalCharge = test.reduce((acc, test) => {\r\n            return acc + Number(test.test_charge)\r\n        }, 0)\r\n\r\n        const updatedPatientTestDetails = [\r\n            ...this.state.patient[key].testList.slice(0,key1),\r\n            Object.assign({}, this.state.patient[key].testList[key1], {testTotalCharge: testTotalCharge}),\r\n            ...this.state.patient[key].testList.slice(key1 + 1),\r\n          ]\r\n  \r\n        const updatedPatient = [\r\n              ...this.state.patient.slice(0,key),\r\n              Object.assign({}, this.state.patient[key], {testList: updatedPatientTestDetails}),\r\n              ...this.state.patient.slice(key + 1),\r\n          ]\r\n\r\n          this.setState({ patient: updatedPatient });\r\n    }\r\n\r\n    checkPatientDetails = (patients) => {\r\n\r\n        let flag = null;\r\n\r\n        patients.forEach(function (patient) {\r\n            if(patient.designation !== \"\" && patient.firstName !== \"\" && patient.lastName !== \"\" && patient.email !== \"\" && patient.mobile !== \"\" && patient.dob !== \"\") {\r\n                patient.testList.forEach(function (test) {\r\n                    if(flag || flag === null) {\r\n                    if(test.selectedSample !== \"\" && test.testListArr.length !== 0) {\r\n                        flag = true;\r\n                    }\r\n                    else {\r\n                        flag = false;\r\n                    }\r\n                }\r\n                });\r\n            }\r\n            else {\r\n                flag = false;\r\n            }\r\n        });\r\n        console.log(flag);\r\n        return flag;\r\n    }\r\n\r\n    savePatientTestDetails = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAdminPatientSearch(\"\",\"\");\r\n        let bulkPatientTestDetails = this.state.patient.map((patient, key) => {\r\n            const patientTestListIdArr = patient.testList.map((el) => {\r\n                return el.testListArr.map(function(subtest) {\r\n                    return subtest.lhTestId;\r\n                  })\r\n            })\r\n\r\n            var patientTestListId = [].concat.apply([],patientTestListIdArr).filter((elem, index, self) => {\r\n                return index === self.indexOf(elem);\r\n            })\r\n\r\n            let noLGChargeData = this.state.noLGCharge;\r\n            let islogisticserviceable;\r\n            if(noLGChargeData === false){\r\n                // this.setState({\r\n                //     islogisticserviceable: 1\r\n                // })\r\n                islogisticserviceable= 1\r\n            }\r\n            if(noLGChargeData === true){\r\n                // this.setState({\r\n                //     islogisticserviceable: 0\r\n                // })\r\n                islogisticserviceable= 0\r\n            }\r\n            \r\n            const patientTestDetails = {\r\n                userId: patient.userId,\r\n                testList: [...patientTestListId],\r\n            }\r\n            return patientTestDetails;\r\n        })\r\n\r\n        console.log(bulkPatientTestDetails);\r\n        console.log(this.props.user.id);\r\n\r\n        let id = this.props.user.id;\r\n\r\n        this.props.onAdminSavePatientDetails(id, bulkPatientTestDetails);\r\n\r\n        this.setState({\r\n            cardVisible: false,\r\n            saveButtonvisible: false\r\n        })\r\n\r\n        this.setState({\r\n            visible: true\r\n          }, () => {\r\n            window.setTimeout(() => {\r\n              this.setState({\r\n                visible: false\r\n              })\r\n            }, 5000)\r\n          });\r\n    }\r\n\r\n    componentWillReceiveProps(){\r\n        if(this.props.apsavesuccess){\r\n            this.setState({\r\n                patient: [],\r\n                form: []\r\n            })\r\n        }\r\n    }\r\n\r\n    handlePinVerification = (e) => {\r\n        this.setState({\r\n            pincode: e.target.value,\r\n            address: {\r\n                ...this.state.address,\r\n                pincode: e.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    pinVerification = (event) => {\r\n        event.preventDefault();\r\n        \r\n        this.props.onPinVerification(this.state.address.pincode);\r\n\r\n        this.setState({\r\n            visible: true\r\n          }, () => {\r\n            window.setTimeout(() => {\r\n              this.setState({\r\n                visible: false\r\n              })\r\n            }, 5000)\r\n          });\r\n\r\n        this.setState(prevState => ({\r\n            pinmodal: !prevState.pinmodal,\r\n            noLGCharge: false,\r\n        }))\r\n    }\r\n\r\n    togglemodal = () => {\r\n        this.setState(prevState => ({\r\n            pinmodal: !prevState.pinmodal\r\n        }));\r\n    }\r\n\r\n    yescloseToggle = () => {\r\n        this.setState(prevState => ({\r\n            pinmodal: !prevState.pinmodal\r\n        }));\r\n\r\n        this.setState({\r\n            yesToggle: true,\r\n            noLGCharge: true,\r\n        })\r\n    }\r\n\r\n    nocloseToggle = () => {\r\n        this.setState(prevState => ({\r\n            pinmodal: !prevState.pinmodal\r\n        }));\r\n\r\n        this.setState({\r\n            yesToggle: false\r\n        })\r\n    }\r\n\r\n    getAddressInputChangedHandler = (event) => {\r\n       console.log(event.target.value);\r\n       \r\n       if(event.target.value === \"Select...\"){\r\n            this.setState({\r\n                address: {}\r\n        })\r\n        }\r\n\r\n       let id = event.target.value;\r\n       \r\n       this.props.getPAdata.map((data) => {\r\n        return data.id === Number(id) ?\r\n        this.setState({\r\n            address: data\r\n        })\r\n        : null\r\n       })\r\n    }\r\n\r\n    render() {\r\n\r\n    console.log(this.props.stdata);\r\n\r\n    let userTypeId = localStorage.getItem('userTypeId');\r\n    let isAuthenticated = localStorage.getItem('token') ? true : false;\r\n    let grandTotalArr = [];\r\n    let charge = this.props.lcdata;\r\n    this.state.patient.forEach((el) => {\r\n        el.testList.forEach((testEl) => {\r\n            grandTotalArr.push(testEl.testListArr);\r\n        })\r\n    })\r\n        \r\n    let grandTotalCharge = [].concat.apply([],grandTotalArr).reduce((acc, test) => {\r\n        return acc + Number(test.price)\r\n    }, 0)\r\n        console.log(this.props.apsearchdata);\r\n        return (\r\n            <React.Fragment>\r\n                <AdminTitle loggedinpatient={isAuthenticated}/>\r\n                <Container>\r\n                    <Row><h4 className=\"ml-3 mt-3\">Search for existing patient</h4></Row>\r\n                    <Row className=\"mt-4\">\r\n                        <Col md=\"3\" className=\"text-center mt-3\">\r\n                        <Label>Name :</Label>\r\n                        <Input type=\"text\" value={this.state.form.name} name=\"name\" onChange={(event) => this.inputChangedHandler(event)} required></Input>\r\n                        </Col>\r\n                    \r\n                        <Col md=\"3\" className=\"text-center mt-3\">\r\n                        <Label>Mobile No. :</Label>\r\n                        <Row>\r\n                        <Col xs={2} sm={2} md={2} lg={2} className=\"text-center\" style={{paddingRight: '0px'}}>\r\n                        <Input type=\"text\" className=\"contactInitialTextNumber\" value={this.state.form.countryCode} name=\"countryCode\" onChange={(event) => this.inputChangedHandler(event)} required style={{padding: '0px'}}></Input>  \r\n                        </Col>\r\n                        <Col xs={10} sm={10} md={10} lg={10} className=\"contactInitialTextNumber\">\r\n                        <Input type=\"number\" className=\"contactInitialTextNumber\" value={this.state.form.mobile} name=\"mobile\" onChange={(event) => this.inputChangedHandler(event)} required></Input>\r\n                        </Col>\r\n                        </Row>\r\n                        </Col>\r\n                        <Col md=\"1\" className=\"text-center mt-5\">\r\n                        <Button onClick={this.submitHandler}>Search</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    {this.props.apsearchdata ? \r\n                    <ListGroup flush>\r\n                        {this.props.apsearchdata.map((el) => \r\n                        <ListGroupItem style={{cursor: 'pointer'}} onClick={() => this.selectExistingPatient(el)}>{el.firstName + ' ' + el.lastName + ' - (' + el.contactNo + ')'}</ListGroupItem>\r\n                        )\r\n                        }\r\n                    </ListGroup>\r\n                        :\r\n                    <div className=\"text-center p-3\">\r\n                        {!this.props.apsearchsuccess ? this.props.loading ? <Spinner animation=\"border\" variant=\"danger\" /> : null : <div style={{color: 'red'}}>Patient Not Found</div>}\r\n                    </div> \r\n                    }\r\n\r\n                    {this.state.patient && this.state.cardVisible ? this.state.patient.map((pdata, key) =>\r\n                    <React.Fragment>\r\n                     <AdminCard testtabledata={this.state.testtabledata} sampleTypes={this.state.sampleTypes} keyValue={key} pdata={pdata} removePatient={this.removePatient} inputChangedPatientHandler={this.inputChangedPatientHandler} removeSample={this.removeSample} \r\n                     addSample={this.addSample} selectPatientMultipleOption={this.selectPatientMultipleOption} stdata={this.props.stdata} stestdata={this.props.stestdata} grandTotalCharge={grandTotalCharge} />\r\n                     {/* <AdminPatientAddress pinVerification={this.pinVerification} handlePinVerification={this.handlePinVerification} inputChangedAPHandler={this.inputChangedAPHandler} apAddress={this.state.address}\r\n                                          pinsuccess={this.props.pinsuccess} pinfailure={this.props.pinfailure} pindata={this.props.pindata} visible={this.state.visible} togglemodal={this.togglemodal} \r\n                                          yescloseToggle={this.yescloseToggle} nocloseToggle={this.nocloseToggle} pinmodal={this.state.pinmodal} getPAdata={this.props.getPAdata}\r\n                                          getAddressInputChangedHandler={this.getAddressInputChangedHandler}/> */}\r\n                    </React.Fragment>\r\n                    ) : null}\r\n\r\n                    {/* <Row>\r\n                    <Col md={12} className=\"mt-3 text-center\">\r\n                        {this.state.cardVisible && grandTotalCharge && (this.props.pinsuccess || (this.props.pinfailure && this.state.yesToggle)) ?\r\n                        this.state.noLGCharge ? \r\n                        <p className=\"text-center\" style={{fontWeight: 'bold'}}>Total Charge : &#8377; {grandTotalCharge.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</p> :\r\n                        <p className=\"text-center\" style={{fontWeight: 'bold'}}>Total Charge: Test Charge + &#8377; {charge.value} (Logistic Charge) = &#8377; {(Number(charge.value) + Number(grandTotalCharge)).toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</p>\r\n                        : null }\r\n\r\n                    </Col>\r\n                    </Row> */}\r\n                    \r\n                    \r\n                    {this.state.patient && this.state.cardVisible && this.state.saveButtonvisible ?\r\n                    <Row className=\"mb-5\">\r\n                    <Col md={12} className=\"mt-3 text-center\">\r\n                        <Button onClick={this.savePatientTestDetails} disabled={this.checkPatientDetails(this.state.patient) ? false : true} className=\"button-lightred\" size=\"md\" style={{width: '190px'}} >Save Details</Button>{' '}\r\n                    </Col>\r\n                    </Row>\r\n                    : null\r\n                    }\r\n\r\n                    {this.props.apsavesuccess === true ? \r\n                      <Alert className=\"mt-4\" color=\"success\" isOpen={this.state.visible}>{this.props.apsavemessage}</Alert>\r\n                    : null\r\n                    }\r\n\r\n            {/* {this.props.pinfailure ?\r\n            <ModalComponent modal={this.state.pinmodal} pinVerification={this.pinVerification} className=\"trainee-modal\">\r\n                <h5>The area is un-serviceable. If you still want to continue, Kindly send sample to XYZ address.</h5>\r\n                <Button color=\"success\" onClick={this.yescloseToggle}>Yes</Button>\r\n                <Button color=\"danger\" onClick={this.nocloseToggle} className=\"ml-3\">No</Button>\r\n            </ModalComponent>\r\n            : null } */}\r\n\r\n        </Container>\r\n        </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\nreturn {\r\n    loading: state.loading,\r\n    apsearchsuccess: state.apsearchsuccess,\r\n    apsearchdata: state.apsearchdata,\r\n    user: state.user,\r\n    apsavesuccess: state.apsavesuccess,\r\n    apsavemessage: state.apsavemessage,\r\n    pinsuccess: state.pinsuccess,\r\n    pindata: state.pindata,\r\n    pinfailure: state.pinfailure,\r\n    lcsuccess: state.lcsuccess,\r\n    lcdata: state.lcdata,\r\n    getPAsuccess: state.getPAsuccess,\r\n    getPAdata: state.getPAdata,\r\n    stsuccess: state.stsuccess,\r\n    stdata: state.stdata,\r\n    stestsuccess: state.stestsuccess,\r\n    stestdata: state.stestdata,\r\n}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\nreturn {\r\n    onAdminPatientSearch: (name, mobile) => dispatch(actions.adminPatientSearch(name, mobile)),\r\n    onAdminSavePatientDetails: (id, data) => dispatch(actions.adminSavePatientDetails(id, data)),\r\n    onPinVerification: (pincode) => dispatch(actions.pinVerification(pincode)),\r\n    onLogisticCost: () => dispatch(actions.logisticCost()),\r\n    ongetPatientAddress: (userId) => dispatch(actions.getPatientAddress(userId)),\r\n    onSampleType: () => dispatch(actions.sampleType()),\r\n    onSampleTest: (id) => dispatch(actions.sampleTest(id)),\r\n}\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminHome);","import React, { Component } from 'react';\r\nimport { Link, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport '../login/Login.css';\r\nimport { Button, Alert } from 'reactstrap';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\nimport LoginRegisterApi from '../../services/API/LoginRegisterApi';\r\nimport queryString from 'query-string';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport { Spinner, Row, Col } from 'react-bootstrap';\r\n\r\nclass AdminLogin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      validationMessages: [],\r\n      form: this.defaultForm(),\r\n      loading: false,\r\n      visible : false\r\n    };\r\n  }\r\n\r\n\r\ndefaultForm = () => {\r\n  return {\r\n      email: '',\r\n      password: '',\r\n  }\r\n}\r\n\r\ninputChangedHandler(e) {\r\n\r\n  const updatedForm = {\r\n    ...this.state.form,\r\n    [e.target.name]: e.target.value\r\n  }\r\n  let validationMessages = [];\r\n  this.setState({\r\n    form: updatedForm, \r\n    validationMessages\r\n  });\r\n    \r\n}\r\n\r\n  submitHandler = (event) => {\r\n    console.log(\"login clicked!\");\r\n    event.preventDefault();\r\n\r\n    let params = queryString.parse(this.props.location.search);\r\n\r\n    this.props.onLogin(this.state.form.email, this.state.form.password, params.token);\r\n\r\n    this.setState({\r\n      visible: true\r\n    }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({\r\n          visible: false\r\n        })\r\n      }, 5000)\r\n    });\r\n  }\r\n\r\nrender() {\r\n\r\n  if(this.props.user) {\r\n    let userId = Number(this.props.userTypeId);\r\n    if(userId === 4) {\r\n      this.props.history.push('/adminHome');\r\n    }\r\n  }\r\n\r\nreturn (\r\n  <React.Fragment>\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n          <div class=\"col-md-6 offset-md-3 text-center\">\r\n            <div className=\"container-box text-center\">\r\n              <div class=\"logo\">\r\n                <img src={logo} className=\"tthomelogo\"/>\r\n              </div>\r\n              <h2>Sign In</h2>\r\n              <div className=\"login-box-inner\">\r\n                <form onSubmit={this.submitHandler}>\r\n                  <div class=\"form-group\">\r\n                    <span class=\"has-float-label\">\r\n                      <input class=\"form-control\" id=\"username\" name=\"email\" type=\"text\" placeholder=\"Username\" value={this.state.form.email} onChange={(event) => this.inputChangedHandler(event)}/>\r\n                      <label for=\"username\" className=\"patientLabel\">Username</label>\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <span class=\"has-float-label\">\r\n                      <input class=\"form-control\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"Password\" value={this.state.form.password} onChange={(event) => this.inputChangedHandler(event)}/>\r\n                      <label for=\"password\" className=\"patientLabel\">Password</label>\r\n                    </span>\r\n                  </div>\r\n                  <Button className=\"button-lightred\" size=\"lg\" style={{width: '190px'}} >Submit</Button>{' '}\r\n                  {this.props.loading ? \r\n                    <Row>\r\n                    <Col md={12} className=\"mt-3 text-center\">\r\n                        <Spinner animation=\"border\" variant=\"danger\" className=\"text-center\" />\r\n                    </Col>\r\n                    </Row>\r\n                  : null}\r\n\r\n                  {this.props.invalidData === \"403\" ?\r\n                    <Alert className=\"mt-3\" color=\"danger\" isOpen={this.state.visible}>Invalid Credentials</Alert>\r\n                    : null }\r\n                  {this.props.invalidData === \"601\" ?\r\n                    <Alert className=\"mt-3\" color=\"danger\" isOpen={this.state.visible}>User not registered. Please register.</Alert>\r\n                    : null }\r\n                  <h5>{this.props.success}</h5>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n      </div>\r\n      {/* <div className=\"privacy-text\"><span>Terms</span> | <span>Privacy</span></div> */}\r\n    </div>\r\n    </React.Fragment>\r\n);\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      loading: state.loading,\r\n      error: state.error,\r\n      success: state.success,\r\n      userTypeId: state.userTypeId,\r\n      isAuthenticated: state.token !== null,\r\n      token: state.token,\r\n      user: state.user,\r\n      invalidData: state.invalidData\r\n      // isAuthenticated: state.token !== null,\r\n      // authRedirectPath: state.auth.authRedirectPath\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      onLogin: (username, password, token) => dispatch(actions.login(username, password, token)),\r\n      onPatientLogin: (username, password) => dispatch(actions.patientLogin(username, password)),\r\n      // onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AdminLogin));","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport { Card, CardBody, Container, Row, Col, Spinner, Button } from 'reactstrap';\r\nimport { convertToDateFormat, convertToDateYYYYMMDD } from '../functions';\r\nimport logo from '../../assets/TataTrustsNewLogo.png';\r\n\r\nclass PatientInvoice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onGetPatientUpdatedAddress(this.props.user.id);\r\n    }\r\n\r\n    render() {\r\n        \r\n        var date = new Date().getDate();\r\n        var month = ((new Date().getMonth() + 1) <10?'0':'') + (new Date().getMonth() + 1) ;\r\n        var year = new Date().getFullYear();\r\n        var hours = new Date().getHours();\r\n        var time = new Date();\r\n        var min = (time.getMinutes()<10?'0':'') + time.getMinutes() ;\r\n        console.log(this.props.orderReceiptData);\r\n\r\n        return (\r\n            <div>\r\n            <Row noGutters={true}>\r\n            <Col xs={12} sm={6} lg={4} className=\"mt-2 mb-2\"></Col>\r\n                <Col xs={12} sm={6} lg={4} className=\"text-center mt-5 mb-3\">\r\n                  <img src={logo} className=\"tthomelogoInvoice\"/>\r\n                </Col>\r\n            </Row>\r\n            <h3 className=\"text-center mt-3\">Payment Confirmation Voucher</h3>\r\n            <Row className=\"mt-5 ml-3\">\r\n                <Col md={6}><h5>Patient Name: {this.props.user.firstName + ' ' + this.props.user.lastName}</h5></Col>\r\n                <Col md={6}><h5>Order ID: {this.props.orderReceiptData.id}</h5></Col>\r\n            </Row>\r\n            <Row className=\"mt-3 ml-3\">\r\n                <Col md={6}><h5>Patient ID: {this.props.user.id}</h5></Col>\r\n                <Col md={6}><h5>Date: {convertToDateYYYYMMDD(this.props.orderReceiptData.createdOn)}</h5></Col>\r\n            </Row>\r\n            {/* <Row className=\"mt-3 ml-3\">\r\n                <Col md={6}><h5>Transaction ID: </h5></Col>\r\n            </Row> */}\r\n\r\n            <Row className='mt-5'>\r\n                <Col md={3} xs={2} className=\"text-center\"><b>Sample Name</b></Col>\r\n                <Col md={6} xs={7} className=\"text-center\"><b>Test Name</b></Col>\r\n                <Col md={3} xs={3} className=\"text-center\"><b>Amount</b></Col>\r\n            </Row><hr/>\r\n            \r\n            {this.props.orderReceiptData.id ? this.props.orderReceiptData.userPatientOrderDetails.map((data) => {\r\n                return <React.Fragment>\r\n                <Row className='mt-4'>\r\n                <Col md={3} xs={2} className=\"text-center\">{data.sampleTest.sample.sampleName}</Col>\r\n                <Col md={6} xs={7} className=\"text-center\">{data.sampleTest.testName}</Col>\r\n                <Col md={3} xs={3} className=\"text-center\">&#8377; {(data.sampleTest.price).toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</Col>\r\n                </Row><hr/>\r\n                </React.Fragment>\r\n            }) : <Spinner color=\"danger\" />\r\n            }\r\n            \r\n            {this.props.patientupdatedAddsuccess ?\r\n                this.props.patientupdatedAddData.islogisticserviceable === 1 && this.props.orderReceiptData.parceledByCustomer === 0?\r\n            <React.Fragment>\r\n            <Row className='mt-4'>\r\n                <Col md={3} xs={2} className=\"text-center\"></Col>\r\n                <Col md={6} xs={7} className=\"text-center\"><b>Logistic Cost</b></Col>\r\n                <Col md={3} xs={3} className=\"text-center\">&#8377; {this.props.orderReceiptData.logisticAmount}</Col>\r\n            </Row><hr/>\r\n            </React.Fragment>\r\n            : null :null}\r\n\r\n            <Row className='mt-4'>\r\n                <Col md={3} xs={2} className=\"text-center\"></Col>\r\n                <Col md={6} xs={7} className=\"text-center\"><b>Grand Total</b></Col>\r\n                <Col md={3} xs={3} className=\"text-center\">&#8377; {(this.props.orderReceiptData.totalAmount).toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</Col>\r\n            </Row><hr/>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        user: state.user,\r\n        patientupdatedAddsuccess: state.patientupdatedAddsuccess,\r\n        patientupdatedAddData: state.patientupdatedAddData,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      onPatientOrderList: (id) => dispatch(actions.patientOrderList(id)),\r\n      onPayNowOrder: (orderId) => dispatch(actions.PayNowOrder(orderId)),\r\n      onGetPatientUpdatedAddress: (id) => dispatch(actions.getPatientUpdatedAddress(id)),\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientInvoice);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport TitlebarComponent from '../../components/navbar/titlebar';\r\nimport { Card, CardBody, Container, Row, Col, Spinner, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactToPrint from \"react-to-print\";\r\nimport PatientInvoice from './patientInvoice';\r\n\r\nclass PrintButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        let isAuthenticated = localStorage.getItem('token') ? true : false;\r\n\r\n        let orderReceiptData = this.props.location.state.order;\r\n\r\n        return (\r\n            <React.Fragment>\r\n            <TitlebarComponent loggedinpatient={isAuthenticated} />\r\n            <Container className=\"mt-3 mb-5\">\r\n            <Card className=\"collapse-box\">\r\n                <CardBody>\r\n                    <Row>\r\n                        <Col md={11}></Col>\r\n                        <Col md={1}>\r\n                            <Link to=\"/patientHome\"><div>X</div></Link>\r\n                        </Col>\r\n                    </Row>\r\n                    <PatientInvoice orderReceiptData={orderReceiptData} ref={el => (this.componentRef = el)} />\r\n                    <Row>\r\n                    <Col md={12} className=\"mt-3 text-center\">\r\n                        <ReactToPrint \r\n                          trigger = {() => \r\n                            <Button className=\"button-lightred\" size=\"md\" style={{width: '190px', cursor: 'pointer'}} >Print</Button>\r\n                          }\r\n                          content = {() => this.componentRef}\r\n                        />\r\n                    </Col>\r\n                    </Row> \r\n\r\n                </CardBody>\r\n            </Card>\r\n            </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        user: state.user,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      onPatientOrderList: (id) => dispatch(actions.patientOrderList(id)),\r\n      onPayNowOrder: (orderId) => dispatch(actions.PayNowOrder(orderId)),\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(PrintButton);","import React, {Component} from 'react';\r\nimport Picky from \"react-picky\";\r\nimport { Label, Row, Col, FormGroup, Input, Table } from 'reactstrap';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport { connect } from 'react-redux';\r\nimport uniq from 'lodash/uniq';\r\n\r\nclass PatientEditOrderSample extends Component {\r\n\r\n    render() {\r\n        let optionArr = [];\r\n        let result = [];\r\n        return ( \r\n\r\n        this.props.editOrderData.userPatientOrderDetails.map((data) => {\r\n        return this.props.stdata.map((el) => {\r\n        return data.sampleTest.sample.id === el.id ?\r\n        optionArr.push(el) : null\r\n        })\r\n        })  && \r\n        result.push(uniq(optionArr, 'id')) && \r\n        result.map(resultData => {\r\n            return resultData.map(data => {\r\n            return <option value={data.id}>{data.sampleName}</option>\r\n        })\r\n        })\r\n                 \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        user: state.user,\r\n        stestsuccess: state.stestsuccess,\r\n        stestdata: state.stestdata,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSampleTest: (id) => dispatch(actions.sampleTest(id)),\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientEditOrderSample);\r\n\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/actions/actions';\r\nimport TitlebarComponent from '../../components/navbar/titlebar';\r\nimport { Card, CardBody, Container, Row, Col, Spinner, Button, FormGroup, Label, Input, Table } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Picky from \"react-picky\";\r\nimport PatientPaymentForm from './patientPayForm';\r\nimport queryString from 'query-string';\r\nimport PatientPaymentSuccess from './patientPaymentSuccess';\r\nimport PatientPaymentFailure from './patientPaymentFailure';\r\nimport uniq from 'lodash/uniq';\r\nimport PatientEditOrderSample from './patientEditOrderSample';\r\n\r\nclass PatientEditOrder extends Component {\r\n\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        testDetails: [\r\n        ],\r\n        testtableheader: [],\r\n        testtabledata: [],\r\n        modal: false,\r\n        address:{\r\n            line1:'',\r\n            line2:'',\r\n            city:'',\r\n            state:'',\r\n            pincode:''\r\n        },\r\n        loading: false,\r\n        visible: false,\r\n        yesToggle: false,\r\n        noLGCharge: false,\r\n        islogisticserviceable: null,\r\n        // bigList: [{id: 1, name: 'Test Name 1'},{id: 2, name: 'Test Name 2'}, {id: 3, name: 'Test Name 3'} ]\r\n    }\r\n} \r\n\r\ncomponentDidMount () {\r\n    this.props.onSampleType();\r\n}\r\n\r\nsampleInputChangedHandler(e, key) {\r\n\r\n    console.log(e.target.value);\r\n    let id = e.target.value;\r\n    \r\n    if(e.target.value !== \"Select Sample\"){\r\n    this.props.onSampleTest(id);\r\n    }\r\n\r\n    const updatedForm = [\r\n        ...this.state.testDetails.slice(0,key),\r\n        Object.assign({}, this.state.testDetails[key], {[e.target.name]: e.target.value}),\r\n       ...this.state.testDetails.slice(key+1)\r\n      ]\r\n    let validationMessages = [];\r\n    this.setState({\r\n      testDetails: updatedForm, \r\n      validationMessages\r\n    });\r\n      \r\n}\r\n\r\naddSample = () => {\r\n    this.setState(previousState => ({\r\n        testDetails: [...previousState.testDetails, {\r\n            value: null,\r\n            selectedSample: '',\r\n            selectedTests: []\r\n        }],\r\n    }));\r\n}\r\n\r\nremoveSample = (item, key) => {\r\n\r\n    const updatedTestDetailsafterdelete = this.state.testDetails;\r\n\r\n    updatedTestDetailsafterdelete.splice(key, 1);\r\n\r\n    this.setState({\r\n        testDetails: updatedTestDetailsafterdelete\r\n    });\r\n}\r\n\r\nselectMultipleOption = (value, key) => {\r\n    console.count('onChange')\r\n    console.log(\"Val\", value);\r\n    const updatedTestDetails = [\r\n        ...this.state.testDetails.slice(0,key),\r\n        Object.assign({}, this.state.testDetails[key], {selectedTests: value}),\r\n       ...this.state.testDetails.slice(key+1)\r\n      ]\r\n    \r\n    this.setState({ testDetails: updatedTestDetails });\r\n}\r\n\r\nsubmitEditOrder = (event) => {\r\n    event.preventDefault();\r\n\r\n    const patientTestListIdArr = this.state.testDetails.map((el) => {\r\n        return el.selectedTests.map(function(subtest) {\r\n            return subtest.lhTestId;\r\n          })\r\n    })\r\n\r\n    var patientTestListId = [].concat.apply([],patientTestListIdArr).filter((elem, index, self) => {\r\n        return index === self.indexOf(elem);\r\n    })\r\n\r\n    const patientTestDetails = {\r\n        testList: [...patientTestListId],\r\n        userId: this.props.user.id,\r\n        orderId: this.props.location.state.order.id,\r\n    }\r\n\r\n    console.log(patientTestDetails);\r\n\r\n    this.setState({loading: true});\r\n\r\n    this.props.onSubmitEditOrder(patientTestDetails);\r\n}\r\n\r\ncheckTestDetails = (testDetails) => {\r\n    let flag = null;\r\n    \r\n        testDetails.forEach(function (test) {\r\n            if(flag || flag === null) {\r\n                if(test.selectedSample !== \"\" && test.selectedTests.length !== 0) {\r\n                    flag = true;\r\n                }\r\n                else {\r\n                    flag = false;\r\n                }\r\n            }   \r\n            });\r\n            \r\n    console.log(flag);\r\n    return flag;\r\n\r\n}\r\n\r\nuniqueNames = (data) => {\r\n   data.filter(function(i, index){\r\n       return data.indexOf(i) >= index\r\n   })\r\n}\r\n\r\nfilterSample = (data) => {\r\ndata.reduce((acc, current) => {\r\n    const x = acc.find(item => item.id === current.id);\r\n    if(!x) {\r\n        return acc.concat([current]);\r\n    }\r\n    else {\r\n        return acc;\r\n    }\r\n}, []);\r\n}\r\n\r\nreduceSampleArr = (arr, comp) => {\r\n    const unique = arr\r\n    .map(e => e[comp])\r\n    .map((e, i, final) => final.indexOf(e) === i && i)\r\n    .filter(e => arr[e]).map(e => arr[e]);\r\n\r\n    return unique;\r\n}\r\n\r\nrender() {\r\n\r\n// let sampleListFilter = [];\r\n\r\n// const filteredList = arr.reduce((acc, current) => {\r\n//     const x = acc.find(item => item.id === current.id);\r\n//     if(!x) {\r\n//         return acc.concat([current]);\r\n//     }\r\n//     else {\r\n//         return acc;\r\n//     }\r\n// }, []);\r\n\r\n\r\nlet testListArr = [];\r\nlet optionArr = [];\r\nlet result = [];\r\n\r\n\r\nthis.state.testDetails.map((el) => {\r\ntestListArr.push(el.selectedTests);\r\n})\r\n\r\nlet testTotalCharge = [].concat.apply([],testListArr).reduce((acc, test) => {\r\nreturn acc + Number(test.price)\r\n}, 0)\r\n\r\nconsole.log(this.props.location.state.order);\r\nlet isAuthenticated = localStorage.getItem('token') ? true : false;\r\nlet editOrderData = this.props.location.state.order;\r\nlet params = queryString.parse(this.props.location.search);\r\n\r\n\r\n\r\nreturn (\r\n\r\n<React.Fragment>\r\n    {params.paymentStatus === \"SUCCESS\" ? \r\n    <PatientPaymentSuccess data={params} userId={this.props.user.id}/> :\r\n    params.paymentStatus === \"FAILURE\" ? \r\n    <PatientPaymentFailure data={params} /> :\r\n\r\n    this.props.editordersuccess ? \r\n    <PatientPaymentForm message={this.props.editordermessage}/> :\r\n\r\n<React.Fragment>\r\n<TitlebarComponent loggedinpatient={isAuthenticated} />\r\n<Container className=\"mt-5 mb-5\">\r\n<Card className=\"collapse-box\">\r\n<CardBody>\r\n    <Row>\r\n        <Col md={11}></Col>\r\n        <Col md={1}>\r\n            <Link to=\"/patientHome\"><div>X</div></Link>\r\n        </Col>\r\n    </Row>\r\n    \r\n    <Row className='mt-5'>\r\n        <Col md={3} xs={2} className=\"text-center\"><b>Sample Name</b></Col>\r\n        <Col md={6} xs={7} className=\"text-center\"><b>Test Name</b></Col>\r\n        <Col md={3} xs={3} className=\"text-center\"><b>Amount</b></Col>\r\n    </Row><hr/>\r\n    \r\n    {editOrderData.id ? editOrderData.userPatientOrderDetails.map((data) => {\r\n        return <React.Fragment>\r\n        <Row className='mt-4'>\r\n        <Col md={3} xs={2} className=\"text-center\">{data.sampleTest.sample.sampleName}</Col>\r\n        <Col md={6} xs={7} className=\"text-center\">{data.sampleTest.testName}</Col>\r\n        <Col md={3} xs={3} className=\"text-center\">&#8377; {(data.sampleTest.price).toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</Col>\r\n        </Row><hr/>\r\n        </React.Fragment>\r\n    }) : <Spinner color=\"danger\" />\r\n    }\r\n    \r\n    {this.state.testDetails ? this.state.testDetails.map((item, key) => \r\n    <React.Fragment>\r\n    <Row>\r\n        <Col md={1}>\r\n            <i class=\"fa fa-trash mr-1 pr-3 pt-5 pb-5 pull-right\" style={{fontSize: '20px'}} onClick={() => this.removeSample(item, key)}></i>\r\n        </Col>\r\n        {this.props.stdata ? \r\n        <Col md={3} className=\"mt-3\">\r\n            <FormGroup>\r\n                <Label for=\"exampleSelect\"><b>Select Department:</b></Label>\r\n                    <Input type=\"select\" name=\"selectedSample\" id=\"sampleSelect\" onChange={(event) => this.sampleInputChangedHandler(event, key)}>\r\n                    <option>Select Sample</option>\r\n\r\n                    <PatientEditOrderSample editOrderData={editOrderData} stdata={this.props.stdata} />\r\n\r\n                </Input>\r\n                </FormGroup> \r\n            </Col>\r\n            : null }\r\n            <Col md={3} className=\"mt-3\">\r\n                {this.props.stestdata ?\r\n                <React.Fragment>\r\n                <Label for=\"exampleSelect\" id=\"selectTestLabelPatientEdit\"><b>Select Tests:</b></Label>\r\n                <Picky\r\n                    value={item.selectedTests}\r\n                    options={this.props.stestdata}\r\n                    onChange={(undefined) => {this.selectMultipleOption(undefined, key); document.getElementById(\"selectTestLabelPatientEdit\").click()}}\r\n                    open={false}\r\n                    valueKey= \"id\"\r\n                    labelKey=\"testName\"\r\n                    multiple={true}\r\n                    includeSelectAll={true}\r\n                    includeFilter={true}\r\n                    numberDisplayed={1}\r\n                    manySelectedPlaceholder=\"%s selected\"\r\n                    allSelectedPlaceholder=\"%s selected\"\r\n                    dropdownHeight={600}\r\n                />\r\n                </React.Fragment>\r\n                : null }\r\n            </Col>\r\n            <Col md={5}>\r\n                {item.selectedTests.length !== 0 ? <Table bordered>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Sr No.</th>\r\n                        <th>Test Name</th>\r\n                        <th>Test Charges</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {item.selectedTests.map((test, key) => \r\n                        <tr>\r\n                        <td>{key + 1}</td>\r\n                        <td>{test.testName}</td>\r\n                        <td>{test.price}</td>\r\n                        </tr>)\r\n                    }\r\n                        <tr>\r\n                        {/* <td colSpan={2}><b>Total</b></td> */}\r\n                        {/* <td><b>{testTotalCharge}</b></td> */}\r\n                        \r\n                        </tr>\r\n                    </tbody>\r\n                </Table> : null \r\n                }\r\n            </Col>\r\n        </Row> \r\n        <hr/>\r\n        </React.Fragment>\r\n     ) : null }\r\n\r\n    {(testTotalCharge !== 0) ?\r\n        <Row>\r\n            <Col md={6} className=\"mt-3 text-right\">\r\n            </Col>\r\n            <Col md={6} className=\"mt-3\">\r\n                <Row>\r\n                    <Col md={9}><b>Total</b></Col>\r\n                    <Col md={3}><b>&#8377; {testTotalCharge.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</b></Col>\r\n                </Row>\r\n\r\n            </Col>\r\n        </Row>\r\n        : null}\r\n      \r\n            <Row>\r\n                <Col md={12} className=\"mt-3 text-right\">\r\n                    <Button className=\"button-lightred\" size=\"md\" style={{width: '190px', cursor: 'pointer'}}  onClick={this.addSample}>Add Test(s)</Button>{' '}\r\n                </Col>\r\n            </Row>\r\n    \r\n        <Row>\r\n        <Col md={12} className=\"mt-3 text-center\">\r\n            <Button onClick={this.submitEditOrder} disabled={this.checkTestDetails(this.state.testDetails) ? false : true} className=\"button-lightred\" size=\"md\" style={{width: '190px', cursor: 'pointer'}} >Confirm</Button>\r\n        </Col>\r\n        </Row> \r\n\r\n    </CardBody>\r\n    </Card>\r\n    </Container>\r\n    </React.Fragment>\r\n    }\r\n    </React.Fragment>\r\n    )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        user: state.user,\r\n        stsuccess: state.stsuccess,\r\n        stdata: state.stdata,\r\n        stestsuccess: state.stestsuccess,\r\n        stestdata: state.stestdata,\r\n        editordersuccess: state.editordersuccess,\r\n        editordermessage: state.editordermessage\r\n    }\r\n  }\r\n  \r\nconst mapDispatchToProps = dispatch => {\r\nreturn {\r\n    onPatientOrderList: (id) => dispatch(actions.patientOrderList(id)),\r\n    onSampleType: () => dispatch(actions.sampleType()),\r\n    onSampleTest: (id) => dispatch(actions.sampleTest(id)),\r\n    onSubmitEditOrder: (data) => dispatch(actions.submitEditOrder(data)),\r\n}\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientEditOrder);","import React, {Component} from 'react';\r\nimport Navbar from '../../components/navbar/navbar';\r\nimport Footer from '../../components/footer/footer';\r\nimport { Container, Row, Col, Card, CardBody } from 'reactstrap';\r\nimport SubFooter from '../../components/subFooter/subFooter';\r\nimport HomeApi from '../../services/API/HomeApi';\r\nimport TitlebarComponent from '../../components/navbar/titlebar';\r\n\r\nclass TrainingAcademy extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let isAuthenticated = localStorage.getItem('token') ? true : false;\r\n        return(\r\n\r\n            <React.Fragment>\r\n               <TitlebarComponent loggedinpatient={isAuthenticated} />\r\n               <Navbar />\r\n               <Container>\r\n               <h3 className=\"text-center\" style={{marginTop: '100px'}}>Stay tuned. The training academy is launching soon.</h3>\r\n               <p className=\"text-center mt-5\" style={{marginBottom: '205px'}}>Centre for Oncopathology aims to bridge the gap between the \r\n                   demand and supply of skilled oncopathologists in the country by conducting \r\n                   oncopathology-specific training programs for MD pathologists.</p>\r\n               </Container>\r\n               <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TrainingAcademy;\r\n","import React, {Component} from 'react';\r\nimport Navbar from '../../components/navbar/navbar';\r\nimport Footer from '../../components/footer/footer';\r\nimport { Container, Row, Col, Card, CardBody } from 'reactstrap';\r\nimport SubFooter from '../../components/subFooter/subFooter';\r\nimport HomeApi from '../../services/API/HomeApi';\r\nimport TitlebarComponent from '../../components/navbar/titlebar';\r\nimport './aboutCOP.css';\r\n\r\nclass AboutCOP extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            aboutCOPContent: null,\r\n        }\r\n    }\r\n  \r\n    componentDidMount(){\r\n        HomeApi.getAboutCOPContent().then(data => {\r\n          this.setState({ \r\n              aboutCOPContent: data,\r\n           });\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(this.state.aboutCOPContent);\r\n\r\n        let isAuthenticated = localStorage.getItem('token') ? true : false;\r\n        return(\r\n\r\n            <React.Fragment>\r\n               <TitlebarComponent loggedinpatient={isAuthenticated} />\r\n               <Navbar />\r\n            <Container>\r\n               {this.state.aboutCOPContent ? this.state.aboutCOPContent.map((data) => {\r\n                   return data.id === 1 ?\r\n                   <Row className=\"mt-5\">\r\n                    <Col xs={12} md={6} className=\"mb-5\">\r\n                        {data.Image ? data.Image.map((img) => {\r\n                        return <Card className=\"aboutCOPImageCard\">\r\n                            <img src={img.url} className=\"aboutCOPImage\"/>\r\n                        </Card>\r\n                        }) : null}\r\n                    </Col>\r\n                    <Col xs={12} md={6} className=\"mb-5\">\r\n                        <h3 style={{marginLeft: '35px'}}>{data.Title}</h3>\r\n                        <p style={{marginLeft: '35px'}}>{data.Description}</p>\r\n                        <p style={{marginLeft: '35px'}}>{data.Description2}</p>\r\n                    </Col>\r\n                   </Row> : \r\n                   data.id === 2 ?\r\n                   <Row className=\"mt-5 pb-3\">\r\n                    <Col xs={12} md={6} className=\"mb-5\">\r\n                        <h3 style={{marginLeft: '35px'}}>{data.Title}</h3>\r\n                        <p style={{marginLeft: '35px'}}>{data.Description}</p>\r\n                    </Col>\r\n                    <Col xs={12} md={6} className=\"mb-5\">\r\n                        {data.Image ? data.Image.map((img) => {\r\n                        return <Card className=\"aboutCOPImageCard\">\r\n                            <img src={img.url} className=\"aboutCOPImage\"/>\r\n                        </Card>\r\n                        }) : null}\r\n                    </Col>\r\n                   </Row> : null\r\n               }) : null }\r\n            </Container>   \r\n               {/* <hr/>\r\n               <SubFooter /> */}\r\n               <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutCOP;\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Login from './containers/login/Login';\r\nimport './App.css';\r\nimport ForgotPassword from './containers/forgotpassword/ForgotPassword';\r\nimport ResetPassword from './containers/resetpassword/ResetPassword';\r\nimport Registration from './containers/register/Registration';\r\nimport HomeContainer from './containers/homeContainer/homeContainer';\r\nimport Media from './containers/media/media';\r\nimport JoinTeam from './containers/joinTeam/team';\r\nimport CareerNew from './containers/career/careerNew';\r\nimport ContactUs from './containers/contact/contact';\r\nimport ResearchNew from './containers/researchMaterial/researchNew';\r\nimport TestsList from './containers/testsList/testsList';\r\nimport RegisterForm from './containers/register/RegisterForm';\r\nimport * as actions from './redux/actions/actions';\r\nimport PatientHome from './containers/patient/patientHome';\r\nimport CreditPartnerHome from './containers/creditPartner/creditPartner';\r\nimport TraineeHome from './containers/trainee/traineeHome';\r\nimport CheckUser from './containers/patient/checkUser';\r\nimport PatientRequestOTP from './containers/patient/PatientRequestOTP';\r\nimport PatientSignUp from './containers/patient/patientSignUp';\r\nimport PatientLogin from './containers/patient/patientLogin';\r\nimport logout from './containers/logout/logout';\r\nimport TrackSampleTable from './containers/patient/trackSample/trackSampleTable';\r\nimport CoursesOffered from './containers/trainee/coursesOffered';\r\nimport Antibodies from './containers/testsList/antibodies';\r\nimport PatientForgotPassword from './containers/patient/patientForgotPass';\r\nimport PatientResetPassword from './containers/patient/patientResetPass';\r\nimport AdminHome from './containers/admin/adminHome';\r\nimport AdminLogin from './containers/admin/adminLogin';\r\nimport PatientCashReceipt from './containers/patient/patientcashReceipt';\r\nimport PrintButton from './containers/patient/printButton';\r\nimport PatientEditOrder from './containers/patient/patientEditOrder';\r\nimport PatientPaymentForm from './containers/patient/patientPayForm';\r\nimport TrainingAcademy from './containers/trainee/trainingAcademy';\r\nimport AboutCOP from './containers/aboutCOP/aboutCOP';\r\n\r\nclass App extends Component {\r\n\r\ncomponentDidMount () {\r\n    this.props.onTryAutoSignup();\r\n}\r\n\r\nrender() {\r\n  let userId = Number(this.props.userTypeId);\r\n\r\n  if (this.props.isAuthenticated && (userId !== null)) {\r\n    if(userId === 1){\r\n      return (\r\n        <Switch>\r\n              <Route path=\"/creditpartnerHome\" exact component={CreditPartnerHome} />\r\n              <Route path=\"/\" exact component={HomeContainer} />\r\n              <Route path=\"/aboutCOP\" exact component={AboutCOP} />\r\n              <Route path=\"/researchMaterial\" component={ResearchNew} />\r\n              <Route path=\"/media\" exact component={Media} />\r\n              <Route path=\"/testslist\" exact component={TestsList} />\r\n              <Route path=\"/antibodies\" exact component={Antibodies} />\r\n              <Route path=\"/joinTeam\" component={JoinTeam} />\r\n              <Route path=\"/careers\" component={CareerNew} />\r\n              <Route path=\"/contactUs\" component={ContactUs} />\r\n              <Route path=\"/logout\" component={logout} />\r\n              <Route path=\"/courses-offered\" component={CoursesOffered} />\r\n              <Route path=\"/trainingAcademy\" component={TrainingAcademy} />\r\n              <Redirect to=\"/creditpartnerHome\"/>\r\n        </Switch>\r\n        )\r\n    }else if(userId === 2) {\r\n      return (\r\n        <Switch>\r\n              \r\n              <Route path=\"/patientHome\" exact component={PatientHome} />\r\n              <Route path=\"/\" exact component={HomeContainer} />\r\n              <Route path=\"/aboutCOP\" exact component={AboutCOP} />\r\n              <Route path=\"/researchMaterial\" component={ResearchNew} />\r\n              <Route path=\"/media\" exact component={Media} />\r\n              <Route path=\"/testslist\" exact component={TestsList} />\r\n              <Route path=\"/antibodies\" exact component={Antibodies} />\r\n              <Route path=\"/joinTeam\" component={JoinTeam} />\r\n              <Route path=\"/careers\" component={CareerNew} />\r\n              <Route path=\"/contactUs\" component={ContactUs} />\r\n              <Route path=\"/logout\" component={logout} />\r\n              <Route path=\"/patientCashReceipt\" render={(props) => <PatientCashReceipt {...props} /> }/>\r\n              <Route path=\"/patientInvoice\" render={(props) => <PrintButton {...props} /> }/>\r\n              <Route path=\"/patientEditOrder\" render={(props) => <PatientEditOrder {...props} /> }/>\r\n              <Route path=\"/courses-offered\" component={CoursesOffered} />\r\n              <Route path=\"/trainingAcademy\" component={TrainingAcademy} />\r\n              <Route path=\"/patientPayment\" component={PatientPaymentForm} />\r\n              <Redirect to=\"/patientHome\"/>\r\n        </Switch>\r\n        )\r\n    }else if(userId === 3) {\r\n      return (\r\n        <Switch>\r\n              <Route path=\"/traineeHome\" exact component={TraineeHome} />\r\n              <Route path=\"/\" exact component={HomeContainer} />\r\n              <Route path=\"/aboutCOP\" exact component={AboutCOP} />\r\n              <Route path=\"/researchMaterial\" component={ResearchNew} />\r\n              <Route path=\"/media\" exact component={Media} />\r\n              <Route path=\"/testslist\" exact component={TestsList} />\r\n              <Route path=\"/antibodies\" exact component={Antibodies} />\r\n              <Route path=\"/joinTeam\" component={JoinTeam} />\r\n              <Route path=\"/careers\" component={CareerNew} />\r\n              <Route path=\"/contactUs\" component={ContactUs} />\r\n              <Route path=\"/logout\" component={logout} />\r\n              <Route path=\"/courses-offered\" component={CoursesOffered} />\r\n              <Route path=\"/trainingAcademy\" component={TrainingAcademy} />\r\n              <Redirect to=\"/traineeHome\"/>\r\n        </Switch>\r\n        )\r\n    }else if(userId === 4) {\r\n      return (\r\n        <Switch>\r\n          <Route path=\"/adminHome\" exact component={AdminHome} />\r\n          <Route path=\"/logout\" component={logout} />\r\n          <Redirect to=\"/adminHome\"/>\r\n        </Switch>\r\n      )\r\n    }\r\n    }\r\n    else {\r\n    return (\r\n    <Switch>\r\n            <Route path=\"/\" exact component={HomeContainer} />\r\n            <Route path=\"/aboutCOP\" exact component={AboutCOP} />\r\n            <Route path=\"/joinTeam\" component={JoinTeam} />\r\n            <Route path=\"/researchMaterial\" component={ResearchNew} />\r\n            <Route path=\"/media\" exact component={Media} />\r\n            <Route path=\"/testslist\" exact component={TestsList} />\r\n            <Route path=\"/antibodies\" exact component={Antibodies} />\r\n            <Route path=\"/careers\" component={CareerNew} />\r\n            <Route path=\"/contactUs\" component={ContactUs} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/register-form\" component={RegisterForm} />\r\n            <Route path=\"/register\" component={Registration} />\r\n            <Route path=\"/check-user\" component={CheckUser} />\r\n            <Route path=\"/request-otp\" component={PatientRequestOTP} />\r\n            <Route path=\"/patient-signup\" component={PatientSignUp} />\r\n            <Route path=\"/patient-login\" component={PatientLogin} />\r\n            <Route path=\"/patient-forgotPassword\" component={PatientForgotPassword} />\r\n            <Route path=\"/patient-resetPassword\" component={PatientResetPassword} />\r\n            <Route path=\"/resetpassword\" component={ResetPassword} />\r\n            <Route path=\"/forgotpassword\" component={ForgotPassword} />\r\n            <Route path=\"/courses-offered\" component={CoursesOffered} />\r\n            <Route path=\"/trainingAcademy\" component={TrainingAcademy} />\r\n            <Route path=\"/admin-login\" component={AdminLogin} />\r\n            <Route component={HomeContainer} />\r\n    </Switch>\r\n    );\r\n    }\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.token !== null,\r\n    userTypeId: state.userTypeId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<Provider store={store}><BrowserRouter><App /></BrowserRouter></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}